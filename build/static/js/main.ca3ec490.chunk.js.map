{"version":3,"sources":["style.ts","components/pages/login/copyright.tsx","lib/usespinner/usespinner.tsx","components/pages/login/style.ts","components/pages/login/login.tsx","components/pages/login/logic.tsx","lib/useselect/useselect.tsx","lib/usedata/usedata.tsx","components/pages/reports/navbar/navbar.tsx","components/pages/reports/navbar/usedbmenu/useDBMenu.tsx","lib/datafns.tsx","lib/usedate/logic.tsx","lib/usedate/usedate.tsx","components/pages/reports/components/headerbar/headerbar.tsx","components/functions.js","lib/table/logic.tsx","lib/table/tablehead.tsx","lib/table/table.tsx","components/pages/reports/components/cashier_history.tsx","components/pages/reports/components/expiry_dates.tsx","components/pages/reports/components/price_override.tsx","components/pages/reports/components/refund.tsx","lib/chart/piechart/legend.tsx","lib/chart/logic.tsx","lib/chart/piechart/piechart.tsx","lib/chart/piechart/logic.tsx","lib/chart/stackedbarchart/legend.tsx","lib/chart/stackedbarchart/bar_chart.tsx","lib/chart/stackedbarchart/logic.tsx","components/pages/reports/components/radio_buttons/radio_buttons..tsx","components/pages/reports/components/salesbreakdown/sales_breakdown.tsx","components/pages/reports/components/salesbreakdown/icon_switch.tsx","components/pages/reports/components/salesbreakdown/logic.tsx","components/pages/reports/components/staff_hours.tsx","components/pages/reports/components/usedatabuffer.tsx","components/pages/reports/components/stockreport/nonscan.tsx","components/pages/reports/components/stockreport/reorder.tsx","components/pages/reports/components/stockreport/stock.tsx","components/pages/reports/components/stockreport/stockadjust.tsx","components/pages/reports/components/stockreport/stockreport.tsx","components/pages/reports/components/vat_report/vat_report.tsx","components/pages/reports/components/wastage.tsx","components/pages/reports/reports.tsx","App.tsx","serviceWorker.js","index.js"],"names":["useStyles","makeStyles","theme","app","flexGrow","backgroundColor","Copyright","Typography","variant","color","align","to","Date","getFullYear","useSpinner","useState","loading","setLoading","Spinner","props","className","children","papersurround","position","margin","width","paper","marginTop","spacing","padding","display","flexDirection","alignItems","avatar","height","form","submit","background","error","Login","classes","data","setData","login","username","password","a","header","method","headers","body","JSON","stringify","fetch","then","res","json","catch","console","log","setTimeout","useLogin","Field","setUsername","setPassword","onSubmit","bind","this","TextField","required","fullWidth","id","label","name","autoComplete","autoFocus","onChange","e","target","value","type","toString","Button","onClick","useEffect","history","push","Paper","Container","component","maxWidth","CssBaseline","Avatar","src","alt","noValidate","Grid","container","item","xs","Box","mt","useSimpleSelect","items","React","selected","setSelected","Items","map","s","index","MenuItem","aria-haspopup","key","onMouseDown","Select","ref","useRef","useData","url","fetchData","err","useNavBar","DBList","setDBList","useSelect","schema_name","createDBList","useDBMenu","db","setDb","NavBar","notEmpty","length","getColumn","col","sumColumn","reduce","acc","n","removeColumns","_data","parse","c","columns","cols","en","Object","assign","sumAndGroup","dontSum","groups","getUniqueValues","split","getElementsWithValue","sumObjectsByKey","obj1","obj2","keys","forEach","k","includes","grouped","arr","uniqueVals","Set","add","v","filter","todaysDate","today","getMonth","slice","getDate","formatDate","date","d","useDate","start","end","setDate","DateField","defaultValue","handleChange","startDate","endDate","Dates","currentTarget","HeaderBar","EmptyMessage","EnhancedTableHead","order","orderBy","onRequestSort","headCells","setHeadCells","numeric","disablePadding","TableHead","TableRow","headCell","TableCell","sortDirection","property","event","TableSortLabel","active","direction","head","EnhancedTable","displayBuffer","setDisplayBuffer","setOrder","setOrderBy","rowCount","setRowCount","rows","setRows","bufferCount","setBufferCount","Buffer","f","values","Math","round","bufferCallback","Table","stickyHeader","aria-labelledby","size","aria-label","isAsc","sortCallback","by","textContent","firstChild","sorted","sort","ord","b","_","toFixed","TableBody","row","hover","role","tabIndex","CashierHistory","tableData","setTableData","formatTableData","cashier","ordstr","sortByProperty","Tables","lastDate","DateLabel","TableLabel","styled","div","ExpiryDates","PriceOverride","Refund","Legend","chartData","datasets","colorStrings","labels","legendItems","style","indexOf","viewport","small","large","window","innerWidth","toInt","byteArr","charCodeAt","parseInt","join","colors","subArr","i","PieChart","groupBy","x","colorIds","total","toolTipSize","options","layout","legend","usePointStyle","fontSize","tooltips","bodyFontSize","mode","callbacks","tooltipItem","afterLabel","datasetIndex","percent","Number","isInteger","StackedBarChart","stackNames","clrs","dataSets","valuesArr","t","atHour","withCategory","withValue","datasetKeyProvider","formatChartData","labelSize","undefined","scales","xAxes","stacked","ticks","yAxes","sales","percentString","RadioButtons","FormControl","RadioGroup","FormControlLabel","control","Radio","SalesBreakdown","setGroupBy","setTotal","dataChoice","setDataChoice","chart","setChart","IconSwitch","buttons","icon","setIcon","handle","callBack","useIconSwitch","BarChart","Total","GetChart","barChartX","Array","from","obj","format","StaffHours","useDataBuffer","route","rowsPerBuffer","fetchBuffer","getNextBuffer","NonScan","setSort","useContext","ctx","Reorder","Stock","StockAdjust","createContext","StockReport","TableChoice","Provider","VAT","totalVat","receipts","H1","h1","Wastage","Reports","App","document","zoom","rel","href","content","path","exact","render","Boolean","location","hostname","match","ReactDOM","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.ca3ec490.chunk.js","sourcesContent":["import { makeStyles } from \"@material-ui/core/styles\";\n\nconst useStyles = makeStyles((theme) => ({\n  app: {\n    flexGrow: 1,\n    backgroundColor: \"#f8f8f8\",\n  },\n}));\nexport default useStyles;\n","import Typography from '@material-ui/core/Typography';\nimport React from 'react';\nimport { Link } from 'react-router-dom';\n\nexport default function Copyright() {\n    return (\n        <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\n            {'Copyright © '}\n            <Link color=\"inherit\" to=\"http://itdsoftware.com/\">\n                ITD Software\n      </Link>{' '}\n            {new Date().getFullYear()}\n            {'.'}\n        </Typography>\n    );\n}","import React, { useState, ReactNode } from \"react\"\nimport Typography from \"@material-ui/core/Typography/Typography\"\nimport \"./style.scss\"\n\nexport default function useSpinner() {\n\n    const [loading, setLoading] = useState(false)\n\n    function Spinner(props: { children?: ReactNode }) {\n        return <div className=\"Spinner\">{props.children}{loading\n            ? <div className=\"overlay\">\n                <div className=\"text\"><Typography >Loading...</Typography></div>\n            </div>\n            : null\n        }</div>\n    }\n    return {\n        setLoading,\n        Spinner\n    }\n}","import { makeStyles } from \"@material-ui/core/styles\";\n\nexport const useStyles = makeStyles((theme) => ({\n  papersurround: {\n    position: \"relative\",\n    margin: \"auto\",\n    width: \"500px\",\n  },\n\n  paper: {\n    marginTop: theme.spacing(8),\n    padding: \"auto\",\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n  },\n\n  avatar: {\n    margin: theme.spacing(2),\n    padding: theme.spacing(1),\n    backgroundColor: \"#004064\",\n    width: \"100px\",\n    height: \"100px\",\n  },\n\n  form: {\n    width: \"100%\", // Fix IE 11 issue.\n    marginTop: theme.spacing(1),\n  },\n\n  submit: {\n    margin: theme.spacing(3, 0, 2),\n    color: \"white\",\n    background: \"#004064\",\n  },\n\n  error: {\n    color: \"red\",\n  },\n\n  \"@media (max-width: 1024px)\": {\n   form:{\n     width: '100%'\n   } \n  },\n}));\n","import { Paper } from '@material-ui/core';\nimport Avatar from '@material-ui/core/Avatar';\nimport Box from '@material-ui/core/Box';\nimport Button from '@material-ui/core/Button';\nimport Container from '@material-ui/core/Container';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Grid from '@material-ui/core/Grid';\nimport Link from '@material-ui/core/Link';\nimport TextField from '@material-ui/core/TextField';\nimport Typography from '@material-ui/core/Typography';\nimport React, { useState, useEffect } from 'react';\nimport { RouteComponentProps } from 'react-router-dom';\nimport \"./style.scss\"\n\nimport Copyright from './copyright';\nimport useLogin from './logic';\nimport { useStyles } from './style';\n\nexport default function Login(props: RouteComponentProps) {\n  const classes = useStyles();\n  const { login, data, Spinner } = useLogin()\n\n  function Field() {\n    const [username, setUsername] = useState(\"\")\n    const [password, setPassword] = useState(\"\")\n    return <>\n      <form onSubmit={login.bind(this, username, password)}>\n        <TextField\n          variant=\"outlined\"\n          margin=\"normal\"\n          required\n          fullWidth\n          id=\"email\"\n          label=\"Email Address\"\n          name=\"email\"\n          autoComplete=\"email\"\n          autoFocus\n          onChange={e => setUsername(e.target.value)}\n        />\n      </form>\n\n      <form onSubmit={login.bind(this, username, password)}>\n        <TextField\n          variant=\"outlined\"\n          margin=\"normal\"\n          required\n          fullWidth\n          name=\"password\"\n          label=\"Password\"\n          type=\"password\"\n          id=\"password\"\n          autoComplete=\"current-password\"\n          onChange={(e) => setPassword(e.target.value)}\n        />\n      </form>\n      <Typography className={classes.error}>{data.toString()}</Typography>\n      <Button\n        type=\"submit\"\n        fullWidth\n        variant=\"contained\"\n        className={classes.submit}\n        onClick={login.bind(this, username, password)}\n      >\n        Sign In\n          </Button>\n    </>\n  }\n  useEffect(() => {\n    console.log(data)\n    if (data[0] && data[0][\"id\"])\n      props.history.push(`/reports`)\n  }, [data])\n\n  return (<div className=\"Login\">\n    <Spinner>\n      <Paper className={classes.papersurround}>\n        <Container component=\"main\" maxWidth=\"xs\" className={classes.paper}>\n          <CssBaseline />\n          <div className={classes.paper}>\n            <Avatar className={classes.avatar}>\n              <img className=\"logo\" src='ITDlogo.jpg' alt='logo'></img>\n            </Avatar>\n\n            <Typography component=\"h1\" variant=\"h5\">\n              Sign in\n        </Typography>\n            <Field />\n            <form className={classes.form} noValidate>\n              <Grid container>\n                <Grid item xs>\n                  {/* <Link href=\"#\" variant=\"body2\">\n                    Forgot password?\n              </Link>\n                </Grid>\n                <Grid item>\n                  <Link href=\"#\" variant=\"body2\">\n                    {\"Don't have an account? Sign Up\"}\n                  </Link> */}\n                </Grid>\n              </Grid>\n            </form>\n          </div>\n          <Box mt={8}>\n            <Copyright />\n          </Box>\n        </Container>\n\n      </Paper >\n    </Spinner>\n  </div>\n  );\n}","import React, { useEffect, useState } from 'react';\n\nimport useSpinner from '../../../lib/usespinner/usespinner';\n\nexport interface UserData {\n    id: number,\n    username: string\n}\n\nexport default function useLogin() {\n\n    const [data, setData] = useState<UserData[]>([])\n    const { Spinner, setLoading } = useSpinner()\n\n    async function login(username: string, password: string) {\n\n\n        setLoading(true)\n\n        const header = {\n            method: 'POST',\n            headers: {\n                'Accept': 'application/json',\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({ username: username, password: password })\n        }\n        fetch(`api/login`, header)\n            .then(res => res.json())\n            .then(data => {\n                setData(data)\n                setLoading(false)\n            })\n            .catch((error) => {\n                console.log(error)\n                setTimeout(1000)\n                login(username, password)\n            });\n    }\n\n    return {\n        Spinner,\n        data,\n        login,\n    }\n}","import './style.scss';\r\n\r\nimport { Typography } from '@material-ui/core';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport ArrowDropDownIcon from '@material-ui/icons/ArrowDropDown';\r\nimport React, { HTMLAttributes, useRef } from 'react';\r\nimport { ReactNode, useEffect } from 'react';\r\n\r\n// import Div from './style';\r\nexport default function useSimpleSelect(items: string[], color?: string) {\r\n\r\n    const [selected, setSelected] = React.useState(\r\n        items[0]\r\n            ? items[0]\r\n            : 'empty'\r\n    );\r\n\r\n    useEffect(() => {\r\n        if (selected === 'empty' && items[0])\r\n            setSelected(items[0])\r\n    }, [items])\r\n\r\n    function Items(props: {}) {\r\n        return <>{\r\n            items.map((s, index) => {\r\n                return <MenuItem className = \"item\"\r\n                    aria-haspopup\r\n                    key={index}\r\n                    onMouseDown={\r\n                        () => {\r\n                            setSelected(s);\r\n                        }\r\n                    }>\r\n                    {s}\r\n                </MenuItem>\r\n            })\r\n        }</>\r\n    }\r\n\r\n    function Select(props: HTMLAttributes<HTMLDivElement>) {\r\n        const ref = useRef(null) as any\r\n        return (\r\n            <div className=\"Select\" ref={ref}>\r\n                <div className=\"head\"><div className=\"text\"><Typography >{selected}<ArrowDropDownIcon /></Typography></div>\r\n                    <div >\r\n                        <Paper className=\"Items\" >\r\n                            <Items />\r\n                        </Paper>\r\n                    </div>\r\n                </div>\r\n            </div >\r\n        );\r\n    }\r\n\r\n    return {\r\n        selected,\r\n        Select\r\n    }\r\n\r\n}","import React, { useState, useEffect, ReactNode } from 'react'\r\nimport Typography from \"@material-ui/core/Typography/Typography\"\r\nimport useSpinner from \"../usespinner/usespinner\"\r\n\r\nexport interface obj {\r\n    [key: string]: any\r\n}\r\n\r\nexport default function useData(url: string, body?: RequestInit) {\r\n\r\n    const [data, setData] = useState<obj[]>([]);\r\n    const { Spinner, setLoading } = useSpinner()\r\n\r\n    async function fetchData() {\r\n        setLoading(true)\r\n        try {\r\n            fetch(`${url}`, body)\r\n                .then(res => res.json())\r\n                .then(data => {\r\n                    data != null\r\n                        ? setData(data)\r\n                        : setData([])\r\n                })\r\n                .catch((error) => {\r\n                    console.log(error)\r\n                    console.log(\"Reattempting Connection...\")\r\n                    setTimeout(() => { }, 1000)\r\n                    fetchData()\r\n                })\r\n        } catch (err) {\r\n            setData([])\r\n            console.error(err)\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        fetchData();\r\n    }, [url]);\r\n\r\n    useEffect(() => {\r\n        setLoading(false)\r\n    }, [data])\r\n\r\n    return {\r\n        data,\r\n        setData,\r\n        fetchData,\r\n        Spinner,\r\n\r\n    }\r\n\r\n}\r\n","import AppBar from '@material-ui/core/AppBar/AppBar';\nimport React, { useState, useEffect, ReactNode } from 'react';\nimport Div from './style'\nimport Typography from '@material-ui/core/Typography/Typography'\nimport Toolbar from '@material-ui/core/Toolbar';\nimport { Link, } from 'react-router-dom';\nimport useDBMenu from \"./usedbmenu/useDBMenu\"\nimport \"./style.scss\"\n\nexport default function useNavBar() {\n\n    const { Select, selected } = useDBMenu()\n    const [db, setDb] = useState('itdepos');\n\n    useEffect(() => {\n        if (selected !== \"empty\") setDb(selected)\n    }, [selected])\n\n    function NavBar() {\n        return (\n            // <Div><AppBar position={\"fixed\"}>\n            <div className=\"NavBar\">\n                <AppBar position=\"fixed\">\n                    <div className='left'>\n                        <img src='ITDlogo.jpg' alt='logo'></img>\n                        <Typography className=\"text\">Branch: </Typography><Select />\n                    </div>\n                    <div className=\"right\">\n                        <Link className=\"link\" to={\"/\"}><Typography >Logout</Typography></Link>\n                    </div>\n                </AppBar>\n            </div>\n        )\n    }\n\n    return {\n        db,\n        NavBar\n    }\n}\n","import useSelect from '../../../../../lib/useselect/useselect'\nimport React, { useEffect, useState } from 'react'\nimport useData, { obj } from '../../../../../lib/usedata/usedata'\n\nexport default function useDBMenu() {\n    const { data } = useData(`api/databases`)\n    const [DBList, setDBList] = useState([] as string[])\n    const { Select, selected } = useSelect(DBList, \"white\");\n\n    useEffect(() => {\n        setDBList(createDBList(data))\n    }, [data])\n\n    return {\n        Select,\n        selected\n    }\n}\n\nexport function createDBList(data: obj[]): string[] {\n    let dbList: string[] = data.map(e => {\n        return e.schema_name\n    })\n    return dbList\n}","\r\n\r\nexport interface obj {\r\n    [key: string]: any\r\n}\r\n\r\nexport function addRows(data: obj[], newRows: obj[]): obj[] {\r\n    return [...data, ...newRows]\r\n}\r\n\r\nexport function notEmpty(data: obj[]): number {\r\n    return (data && data.length);\r\n}\r\n\r\nexport function getColumn(data: obj[], col: string): number[] | string[] {\r\n    return (notEmpty(data)) ? data.map(e => { return e[col] }) : [0];\r\n}\r\n\r\nexport function sumColumn(data: obj[], col: string) {\r\n    let column = getColumn(data, col) as number[]\r\n    return column.reduce((acc, n) => { return acc + n });\r\n}\r\n\r\nexport function setColumn(data: obj[], column: string, f: (v: any) => any) {\r\n    let copy: obj[] = JSON.parse(JSON.stringify(data));\r\n    copy.forEach(e => e[column] = f(e[column]));\r\n    return copy;\r\n}\r\n\r\nexport function addColumn(data: obj[], column: string, newColumn: string, f: (v: any) => any) {\r\n    let copy: obj[] = JSON.parse(JSON.stringify(data));\r\n    copy.forEach(e => Object.assign(e, { [newColumn]: f(e[column]) }));\r\n    return copy;\r\n}\r\n\r\nexport function removeColumns(data: obj[], ...col: string[]) {\r\n    const _data: obj[] = JSON.parse(JSON.stringify(data));\r\n    return (notEmpty(_data)) ? _data.map(e => { col.map(c => { return delete e[c] }); return e }) : [];\r\n}\r\n\r\nexport function columns(data: obj[], ...cols: string[]) {\r\n    return notEmpty(data)\r\n        ? data.map(e => { let en = {}; cols.map(c => { return Object.assign(en, { [c]: e[c] }) }); return en })\r\n        : []\r\n}\r\n\r\nexport function sumAndGroup(data: obj[], col: string, ...dontSum: string[]) {\r\n    let groups = getUniqueValues(data, col);\r\n    let split = groups.map(e => { return getElementsWithValue(data, col, e) });\r\n    const sumObjectsByKey = (obj1: obj, obj2: obj) => {\r\n        Object.keys(obj1).forEach(k => { obj1[k] = (typeof obj1[k] === 'number' && k !== col && !dontSum.includes(k)) ? obj1[k] + obj2[k] : obj1[k] });\r\n        return obj1;\r\n    }\r\n    split = JSON.parse(JSON.stringify(split));\r\n    let grouped = split.map(a => { return a.reduce(sumObjectsByKey) });\r\n    return grouped;\r\n}\r\n\r\nexport function split(data: obj[], col: string) {\r\n    let groups = getUniqueValues(data, col);\r\n    return groups.map(e => { return getElementsWithValue(data, col, e) });\r\n}\r\n\r\nexport function getUniqueValues(data: obj[], col: string): any[] {\r\n    let arr: any[] = []\r\n    if (notEmpty(data)) {\r\n        let uniqueVals: Set<any> = new Set()\r\n        data.forEach(e => uniqueVals.add(e[col]))\r\n        uniqueVals.forEach(v => arr.push(v))\r\n    }\r\n    return arr\r\n}\r\n\r\nexport function getElementsWithValue(data: obj[], key: string, value: any) {\r\n    return data.filter(e =>\r\n        e[key] === value)\r\n}\r\n\r\nexport function sort(data: obj[], property: any, order: string) {\r\n    return data.sort(sortByProperty(property, order))\r\n}\r\n\r\nexport function sortByProperty(property: any, ordstr: string) {\r\n    let order: number = (ordstr === 'asc') ? -1 : 1;\r\n    return function (a: obj, b: obj) {\r\n        if (a[property] > b[property])\r\n            return order;\r\n        else if (a[property] < b[property])\r\n            return -order;\r\n        return 0;\r\n    }\r\n}","export function todaysDate() {\n    var today = new Date();\n    var date = today.getFullYear() + '-' + ('0' + (today.getMonth() + 1)).slice(-2) + '-' + ('0' + (today.getDate())).slice(-2);\n    return date;\n}\n\nexport function formatDate(date: string) {\n    let d = new Date(date as string);\n    let formatted = d.getFullYear() + '-' + ('0' + (d.getMonth() + 1)).slice(-2) + '-' + ('0' + (d.getDate())).slice(-2)\n    return formatted;\n}","import './style.scss';\r\n\r\nimport EventIcon from '@material-ui/icons/Event';\r\nimport React, { EventHandler, useEffect } from 'react';\r\nimport { useState } from 'react';\r\n\r\nimport { formatDate, todaysDate } from './logic';\r\n\r\nexport default function useDate() {\r\n\r\n    const [date, setDate] = useState({ start: todaysDate(), end: todaysDate() })\r\n\r\n    function Dates(props: {}) {\r\n        return <div className=\"Dates\">\r\n            <DateField handleChange={(e) => setDate({\r\n                ...date, start: formatDate(e.currentTarget.value), end: date.end\r\n            })} defaultValue={date.start} />\r\n            <div>-</div>\r\n            <DateField handleChange={(e) => setDate({\r\n                ...date, start: date.start, end: formatDate(e.currentTarget.value)\r\n            })} defaultValue={date.end} />\r\n        </div>\r\n    }\r\n\r\n    function Date(props: {}) {\r\n        return <DateField handleChange={(e) => setDate({\r\n            ...date, start: formatDate(e.currentTarget.value), end: formatDate(e.currentTarget.value)\r\n        })} defaultValue={date.end} />\r\n    }\r\n\r\n    function DateField(props: { handleChange: (e: React.FormEvent<HTMLInputElement>) => void, defaultValue: string }) {\r\n        return <div className=\"datefield\"><input type=\"date\"\r\n            required\r\n            defaultValue={props.defaultValue}\r\n            onChange={props.handleChange}\r\n\r\n        />\r\n            <EventIcon className=\"icon\" />\r\n        </div>\r\n    }\r\n\r\n    return {\r\n        startDate: date.start,\r\n        endDate: date.end,\r\n        Dates,\r\n        // Date\r\n    }\r\n\r\n}\r\n","import './style.scss';\r\n\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport React, { HTMLAttributes, ReactHTMLElement, ReactNode } from 'react';\r\n\r\nexport default function HeaderBar(props: { children: ReactNode }) {\r\n\r\n    return <div className=\"HeaderBar\"><AppBar >{props.children}</AppBar></div>\r\n\r\n}\r\n","\r\nexport function getUniqueValues(objArr, key) {\r\n    return [...new Set(objArr.map(i => {\r\n        return getValue(i, key);\r\n    }))];\r\n}\r\n\r\nexport function getElementsWithValue(objArr, key, value) {\r\n    return objArr.filter(e =>\r\n        getValue(e, key) === value)\r\n}\r\n\r\nexport function getData(url) {\r\n    fetch(url)\r\n        .then(res => res.json())\r\n        .catch((error) => {\r\n        })\r\n}\r\n\r\nexport function add(total, n) {\r\n    return total + n\r\n}\r\n\r\nexport function colors(subArr) {\r\n    let colors = [\r\n        'rgba(0,0,0, 0.6)',\r\n        'rgba(128,128,128, 0.6)',\r\n        'rgba(128,128,0, 0.6)',\r\n        'rgba(128,0,128, 0.6)',\r\n        'rgba(128,0,0, 0.6)',\r\n        'rgba(0,128,128, 0.6)',\r\n        'rgba(0,128,0, 0.6)',\r\n        'rgba(0,0,128, 0.6)',\r\n\r\n        'rgba(255,255,255, 0.6)',\r\n        'rgba(255,255,0, 0.6)',\r\n        'rgba(255,0,255, 0.6)',\r\n        'rgba(255,0,0, 0.6)',\r\n        'rgba(0,255,255, 0.6)',\r\n        'rgba(0,255,0, 0.6)',\r\n        'rgba(0,0,255, 0.6)',\r\n\r\n        'rgba(255,255,128, 0.6)',\r\n        'rgba(255,128,255, 0.6)',\r\n        'rgba(255,128,128, 0.6)',\r\n        'rgba(128,255,255, 0.6)',\r\n        'rgba(128,255,128, 0.6)',\r\n        'rgba(128,128,255, 0.6)',\r\n\r\n        'rgba(128,0,255, 0.6)',\r\n        'rgba(0,128,255, 0.6)',\r\n        'rgba(255,128,0, 0.6)',\r\n\r\n\r\n        'rgba(64,64,64, 0.6)',\r\n        'rgba(192,192,192, 0.6)',\r\n        'rgba(192,192,64, 0.6)',\r\n        'rgba(192,64,192, 0.6)',\r\n        'rgba(192,64,64, 0.6)',\r\n        'rgba(64,192,192, 0.6)',\r\n        'rgba(64,192,64, 0.6)',\r\n        'rgba(64,64,192, 0.6)',\r\n\r\n        'rgba(255,255,64, 0.6)',\r\n        'rgba(255,64,255, 0.6)',\r\n        'rgba(255,64,64, 0.6)',\r\n        'rgba(64,255,255, 0.6)',\r\n        'rgba(64,255,64, 0.6)',\r\n        'rgba(64,64,255, 0.6)',\r\n\r\n        'rgba(255,255,192, 0.6)',\r\n        'rgba(255,192,255, 0.6)',\r\n        'rgba(255,192,192, 0.6)',\r\n        'rgba(192,255,255, 0.6)',\r\n        'rgba(192,255,192, 0.6)',\r\n        'rgba(192,192,255, 0.6)',\r\n\r\n        'rgba(192,64,255, 0.6)',\r\n        'rgba(64,192,255, 0.6)',\r\n        'rgba(255,192,64, 0.6)',\r\n\r\n\r\n        'rgba(64,64,0, 0.6)',\r\n        'rgba(64,0,64, 0.6)',\r\n        'rgba(64,0,0, 0.6)',\r\n        'rgba(0,64,64, 0.6)',\r\n        'rgba(0,64,0, 0.6)',\r\n        'rgba(0,0,64, 0.6)',\r\n\r\n        'rgba(192,192,0, 0.6)',\r\n        'rgba(192,0,192, 0.6)',\r\n        'rgba(192,0,0, 0.6)',\r\n        'rgba(0,192,192, 0.6)',\r\n        'rgba(0,192,0, 0.6)',\r\n        'rgba(0,0,192, 0.6)',\r\n\r\n\r\n        'rgba(64,0,192, 0.6)',\r\n        'rgba(0,64,192, 0.6)',\r\n        'rgba(192,64,0, 0.6)',\r\n\r\n\r\n        'rgba(102,51,0, 0.6)',\r\n        'rgba(255,229,204, 0.6)',\r\n        'rgba(255,153,153, 0.6)',\r\n    ];\r\n    return subArr.map(i => { return colors[colors.length - (i % colors.length) - 1] });\r\n}\r\n\r\nexport function notEmpty(data) {\r\n    return (data && data.length)\r\n}\r\n\r\nexport function exists(data) {\r\n    return (data) ? true : false;\r\n}\r\n\r\nexport function getColumn(data, col) {\r\n    return (notEmpty(data)) ? data.map(e => { return getValue(e, col) }) : []\r\n}\r\n\r\nexport function removeColumns(refData, ...col) {\r\n    const data = JSON.parse(JSON.stringify(refData));\r\n    return (notEmpty(data)) ? data.map(e => { col.map(c => { return delete e[c] }); return e }) : [];\r\n}\r\n\r\nexport function sum(arr) {\r\n    return (notEmpty(arr)) ? arr.reduce((acc, n) => { return acc + n }) : 0;\r\n}\r\n\r\nexport function getValue(e, key) {\r\n    return e[key];\r\n}\r\n\r\nexport function convertDate(date) {\r\n    return date.getFullYear() + '-' + ('0' + (date.getMonth() + 1)).slice(-2) + '-' + ('0' + (date.getDate())).slice(-2);\r\n}\r\n\r\nexport function sizeOf(e) {\r\n    return Object.keys(e).length;\r\n}\r\n\r\nexport function viewport(small, large) {\r\n    return (window.innerWidth > 1024) ? small : large;\r\n}\r\n\r\nexport function sumAndGroup(refData, groupBy) {\r\n    const data = JSON.parse(JSON.stringify(refData));\r\n    let groups = getUniqueValues(data, groupBy);\r\n    let split = groups.map(e => { return getElementsWithValue(data, groupBy, e) });\r\n    const sumObjectsByKey = (obj1, obj2) => {\r\n        Object.keys(obj1).forEach(k => { obj1[k] = (typeof obj1[k] === 'number' && k !== groupBy) ? obj1[k] + obj2[k] : obj1[k] });\r\n        return obj1;\r\n    }\r\n    let grouped = split.map(a => { return a.reduce(sumObjectsByKey) });\r\n    return grouped;\r\n}\r\n\r\n","import Typography from '@material-ui/core/Typography';\nimport React, { SetStateAction } from 'react';\n\nimport * as d from '../datafns';\n\nexport interface EnhancedTableHeadProps {\n    order: false | \"desc\" | \"asc\" | undefined,\n    orderBy: string,\n    onRequestSort: (event: React.MouseEvent, property: string) => void,\n    data: d.obj[],\n    rowCount: number\n    className?: string\n}\n\nexport interface HeadCell {\n    id: string,\n    numeric: boolean,\n    disablePadding: false,\n    label: string\n}\n\nexport interface Classes {\n    root?: any\n    hilight?: any\n    visuallyHidden?: any\n}\n\nexport interface EnhancedTableProps {\n    sortCallback?: React.Dispatch<SetStateAction<any>>\n    bufferCallback?: () => void\n    data: d.obj[]\n}\n\nexport interface EmptyMessageProps {\n    data: d.obj[]\n}\n\nexport function sortByProperty(property: string, order: string) {\n    let ord = (order === 'asc') ? -1 : 1;\n    return function (a: d.obj, b: d.obj) {\n        if (a[property] > b[property])\n            return ord;\n        else if (a[property] < b[property])\n            return -ord;\n\n        return 0;\n    }\n}\n\nexport function EmptyMessage(props: EmptyMessageProps) {\n    return d.notEmpty(props.data)\n        ? <></>\n        : <div className='emptyMessage'><Typography >Empty</Typography></div>\n}\n\n","import \"./style.scss\"\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport TableSortLabel from '@material-ui/core/TableSortLabel';\nimport React from 'react';\n\nimport * as d from '../datafns';\nimport * as _ from './logic';\n\nexport default function EnhancedTableHead(props: _.EnhancedTableHeadProps) {\n  const { order, orderBy, onRequestSort } = props;\n  const createSortHandler = (property: string) => (event: React.MouseEvent) => {\n    onRequestSort(event, property);\n  };\n  const [headCells, setHeadCells] = React.useState<_.HeadCell[]>([]);\n  const [data, setData] = React.useState<d.obj[]>([]);\n\n  React.useEffect(() => {\n    if (d.notEmpty(props.data) && data !== props.data) {\n      setHeadCells(Object.keys(props.data[0]).map((e, index) => {\n        let isNum = (typeof props.data[0][e] == 'number') ? true : false\n        return {\n          id: index + 1 + '',\n          numeric: isNum,\n          disablePadding: false,\n          label: e\n        }\n      }));\n      setData(props.data);\n    } else setHeadCells([]);\n  }, [props.data]);\n\n  return (\n      <TableHead  >\n        <TableRow>\n          {headCells.map((headCell) => (\n            <TableCell\n              key={headCell.id}\n              align={'left'}\n              padding={headCell.disablePadding ? 'none' : 'default'}\n              sortDirection={orderBy === headCell.id ? order : false}\n              onClick={createSortHandler(headCell.id)}\n            >\n              <TableSortLabel\n                active={orderBy === headCell.id}\n                direction={orderBy === headCell.id ? order as \"desc\" | \"asc\" | undefined : 'asc'}\n              >\n                {headCell.label}\n                {/* {orderBy === headCell.id ? (\n                <span className={\"sort-message\"}>\n                  {order === 'desc' ? 'sorted descending' : 'sorted ascending'}\n                </span>\n              ) : null} */}\n              </TableSortLabel>\n            </TableCell>\n          ))}\n        </TableRow>\n      </TableHead>\n  );\n}\n","\r\nimport \"./style.scss\"\r\n// import Div from \"./style\"\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport KeyboardArrowDownIcon from '@material-ui/icons/KeyboardArrowDown';\r\nimport React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles'\r\n\r\nimport * as f from '../../components/functions';\r\nimport * as d from '../datafns';\r\nimport * as _ from './logic';\r\nimport EnhancedTableHead from './tablehead';\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  head: {\r\n    backgroundColor: \"blue\"\r\n  },\r\n}))\r\n\r\nexport default function EnhancedTable(props: _.EnhancedTableProps) {\r\n\r\n  const classes = useStyles();\r\n  const rowsPerBuffer = 100;\r\n  const [displayBuffer, setDisplayBuffer] = React.useState(true)\r\n  const [data, setData] = React.useState<d.obj[]>([]);\r\n  const [order, setOrder] = React.useState<false | \"desc\" | \"asc\" | undefined>('asc');\r\n  const [orderBy, setOrderBy] = React.useState('calories');\r\n  const dense = false;\r\n  const [rowCount, setRowCount] = React.useState(0);\r\n  const [rows, setRows] = React.useState<d.obj[]>([]);\r\n  const [bufferCount, setBufferCount] = React.useState(1)\r\n\r\n  const handleRequestSort = (event: React.MouseEvent, property: string) => {\r\n    const isAsc = order === 'asc';\r\n    setOrder(isAsc ? 'desc' : 'asc');\r\n    setOrderBy(property);\r\n    if (props.sortCallback) {\r\n      props.sortCallback({ by: event.currentTarget.textContent, order: isAsc ? 'desc' : 'asc' })\r\n    }\r\n    else {\r\n      let header = event.currentTarget.firstChild!.firstChild as any\r\n      let label = header.data as string\r\n      let sorted = (data.sort(_.sortByProperty(label, order as string)));\r\n      setRows(sorted.map((e: d.obj) => {\r\n        return Object.values(e).map((e, index) => {\r\n          if (typeof e === 'number' && e % 1 !== 0) e = e.toFixed(2)\r\n          return <TableCell key={index} align=\"left\">{e}</TableCell>\r\n        })\r\n      }));\r\n    }\r\n  };\r\n\r\n  function Buffer() {\r\n    return displayBuffer\r\n      ? <KeyboardArrowDownIcon onClick={() => {\r\n        setBufferCount(bufferCount + 1)\r\n      }} />\r\n      : <></>\r\n  }\r\n\r\n  React.useEffect(() => {\r\n    if (f.notEmpty(props.data)) {\r\n      setData(props.data);\r\n      setRows(props.data.map(e => {\r\n        return Object.values(e).map((e, index) => {\r\n          if (typeof e === 'number') e = + (Math.round(e * 100) / 100)\r\n          return <TableCell key={index} align=\"left\">{e as string | number}</TableCell>\r\n        })\r\n      }));\r\n      setDisplayBuffer(true)\r\n    } else {\r\n      setData([]);\r\n      setRows([]);\r\n      setRowCount(0);\r\n      setBufferCount(1)\r\n    }\r\n  }, [props.data]);\r\n\r\n  React.useEffect(() => {\r\n    setRowCount(rowsPerBuffer * bufferCount);\r\n    if (rowCount > props.data.length) setDisplayBuffer(false)\r\n    if (props.bufferCallback && bufferCount > 1) props.bufferCallback()\r\n  }, [bufferCount])\r\n\r\n  return (\r\n    <div className=\"Table\">\r\n      <Table\r\n        stickyHeader\r\n        aria-labelledby=\"tableTitle\"\r\n        size={dense ? 'small' : 'medium'}\r\n        aria-label=\"enhanced table\"\r\n      >\r\n          <EnhancedTableHead className={classes.head}\r\n            order={order}\r\n            orderBy={orderBy}\r\n            onRequestSort={handleRequestSort}\r\n            rowCount={rows.length}\r\n            data={data}\r\n          />\r\n        <TableBody className=\"tableBody\">\r\n          {rows\r\n            .map((row, index) => {\r\n              return (\r\n                <TableRow\r\n                  key={index}\r\n                  hover\r\n                  role=\"checkbox\"\r\n                  tabIndex={-1}\r\n                >\r\n                  {rows[index]}\r\n                </TableRow>\r\n              );\r\n            })}\r\n        </TableBody>\r\n      </Table>\r\n      <Buffer />\r\n      <_.EmptyMessage data={props.data} />\r\n    </div>\r\n  );\r\n}\r\n\r\n","import styled from 'styled-components';\r\nimport useSimpleSelect from '../../../../lib/useselect/useselect'\r\nimport * as d from '../../../../lib/datafns'\r\nimport { useState, useEffect } from 'react'\r\nimport Typography from '@material-ui/core/Typography'\r\nimport useData from '../../../../lib/usedata/usedata';\r\nimport useDate from '../../../../lib/usedate/usedate';\r\nimport React from 'react';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport HeaderBar from './headerbar/headerbar'\r\nimport SimpleSelect from '../../../../lib/useselect/useselect'\r\nimport Table from '../../../../lib/table/table'\r\nimport { ReportProps } from \"./logic\";\r\n\r\nexport default function CashierHistory(props: ReportProps) {\r\n\r\n    const [tableData, setTableData] = useState([] as d.obj[][]);\r\n    const {\r\n        startDate,\r\n        endDate,\r\n        Dates\r\n    } = useDate();\r\n    const {\r\n        data,\r\n        Spinner\r\n    } = useData(`/api/salesByProduct/${props.db}/${startDate}/${endDate}`);\r\n    const {\r\n        selected,\r\n        Select,\r\n    } = useSimpleSelect(d.getUniqueValues(data, 'Cashier'), \"black\");\r\n\r\n    function formatTableData(data: d.obj[], cashier: string) {\r\n        let filterColumns = d.columns(data, 'Receipt', 'Product', 'Sales', 'Qty', 'Refund', 'Discount', 'TillDate', 'TillTime', 'Cashier')\r\n        let filterRows = d.getElementsWithValue(filterColumns, 'Cashier', cashier)\r\n        let sortByReceipt = d.sort(filterRows, 'Receipt', \"desc\")\r\n        return d.split(sortByReceipt, 'Receipt')\r\n    }\r\n\r\n    function Tables() {\r\n        let lastDate = '00-00-00'\r\n        function PrintDate(date: string) {\r\n            if (date === lastDate)\r\n                return <></>\r\n            else {\r\n                lastDate = date;\r\n                return <DateLabel><Typography>{date}</Typography></DateLabel>\r\n            }\r\n        }\r\n\r\n        return (<>{\r\n            tableData.map((e, index) => {\r\n                return < div key={index}>\r\n                    {PrintDate(e[0]['TillDate'])}\r\n                    <TableLabel>\r\n                        <Typography>{'Receipt ' + e[0]['Receipt']}</Typography>\r\n                        <Typography>{e[0]['TillTime']}</Typography>\r\n                    </TableLabel>\r\n                    <Table data={d.columns(e, 'Product', 'Qty', 'Sales')} />\r\n                </div>\r\n            })\r\n        }</>)\r\n    }\r\n\r\n    useEffect(() => {\r\n        setTableData(formatTableData(data, selected));\r\n    }, [data, selected])\r\n\r\n    return (\r\n        <div className='report' >\r\n            <Spinner >\r\n                <Paper className='reportContainer'>\r\n                    <HeaderBar ><Typography className='text' variant=\"h6\">{props.header}</Typography><Dates /></HeaderBar>\r\n                    <div className='reportBody' id=\"cashierHistory\">\r\n                        <Select />\r\n                        <Tables />\r\n                    </div>\r\n                </Paper>\r\n            </Spinner>\r\n        </div >\r\n    );\r\n}\r\n\r\nconst DateLabel = styled.div`\r\n.MuiTypography-root{\r\ntext-align: left;\r\nfont-weight: bold;\r\ncolor: #004064;\r\nfont-size: 1.25em; \r\nmargin: 5px;\r\n}\r\n`;\r\n\r\nconst TableLabel = styled.div`\r\ndisplay: flex;\r\nflex-direction: row;\r\njustify-content: space-between;\r\ntext-align: left;\r\nbackground-color:#004064;\r\ncolor: white;\r\n\r\n.MuiTypography-body1 {\r\n    font-size: 1em;\r\n    margin-left: 5px;\r\n    margin-right: 5px;\r\n}\r\n\r\n`;\r\n","\r\nimport { useState, useEffect } from 'react'\r\nimport Typography from '@material-ui/core/Typography'\r\nimport useData from '../../../../lib/usedata/usedata';\r\nimport useDate from '../../../../lib/usedate/usedate';\r\nimport React from 'react';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport HeaderBar from './headerbar/headerbar'\r\nimport SimpleSelect from '../../../../lib/useselect/useselect'\r\nimport Table from '../../../../lib/table/table'\r\nimport * as d from \"../../../../lib/datafns\"\r\nimport { ReportProps } from './logic';\r\n\r\nexport default function ExpiryDates(props: ReportProps) {\r\n\r\n    const {\r\n        startDate,\r\n        endDate,\r\n        Dates\r\n    } = useDate();\r\n\r\n    const {\r\n        data,\r\n        Spinner\r\n    } = useData(`/api/expiry/${props.db}/${startDate}/${endDate}`);\r\n\r\n\r\n    return (\r\n        <div className='report'>\r\n            <Spinner>\r\n                <Paper className='reportContainer'>\r\n                    <HeaderBar ><Typography className='text' variant=\"h6\">{props.header}</Typography><Dates /></HeaderBar>\r\n                    <div className='reportBody'>\r\n                        <Table data={data} />\r\n                    </div>\r\n                </Paper>\r\n            </Spinner>\r\n        </div>\r\n    );\r\n}","import { useState, useEffect } from 'react'\r\nimport Typography from '@material-ui/core/Typography'\r\nimport useData from '../../../../lib/usedata/usedata';\r\nimport useDate from '../../../../lib/usedate/usedate';\r\nimport React from 'react';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport HeaderBar from './headerbar/headerbar'\r\nimport SimpleSelect from '../../../../lib/useselect/useselect'\r\nimport Table from '../../../../lib/table/table'\r\nimport { ReportProps } from './logic'\r\nexport default function PriceOverride(props: ReportProps) {\r\n\r\n    const {\r\n        startDate,\r\n        endDate,\r\n        Dates\r\n    } = useDate();\r\n\r\n    const {\r\n        data,\r\n        Spinner\r\n    } = useData(`/api/priceoverride/${props.db}/${startDate}/${endDate}`);\r\n\r\n    return (\r\n        <div className='report'>\r\n            <Spinner>\r\n                <Paper className='reportContainer'>\r\n                    <HeaderBar ><Typography className='text' variant=\"h6\">{props.header}</Typography><Dates /></HeaderBar>\r\n                    <div className='reportBody'>\r\n                        <Table data={data} />\r\n                    </div>\r\n                </Paper>\r\n            </Spinner>\r\n        </div>\r\n    );\r\n}\r\n","import { useState, useEffect } from 'react'\r\nimport Typography from '@material-ui/core/Typography'\r\nimport useData from '../../../../lib/usedata/usedata';\r\nimport useDate from '../../../../lib/usedate/usedate';\r\nimport React from 'react';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport HeaderBar from './headerbar/headerbar'\r\nimport SimpleSelect from '../../../../lib/useselect/useselect'\r\nimport Table from '../../../../lib/table/table'\r\nimport { ReportProps } from './logic'\r\nexport default function Refund(props: ReportProps) {\r\n\r\n    const {\r\n        startDate,\r\n        endDate,\r\n        Dates\r\n    } = useDate();\r\n\r\n    const {\r\n        data,\r\n        Spinner\r\n    } = useData(`/api/refund/${props.db}/${startDate}/${endDate}`);\r\n\r\n    return (\r\n        <div className='report'>\r\n            <Spinner>\r\n                <Paper className='reportContainer'>\r\n                    <HeaderBar ><Typography className='text' variant=\"h6\">{props.header}</Typography><Dates /></HeaderBar>\r\n                    <div className='reportBody'>\r\n                        <Table data={data} />\r\n                    </div>\r\n                </Paper>\r\n            </Spinner>\r\n        </div>\r\n    );\r\n}","import React from 'react';\n\nimport * as d from \"../../datafns\";\nimport * as _ from './logic';\n\nexport default function Legend(props: { chartData: _.ChartData }) {\n    if (d.notEmpty(props.chartData.datasets)) {\n        let colorStrings = props.chartData.datasets[0].backgroundColor;\n        let labels = props.chartData.labels\n        let legendItems = colorStrings.map((c: string, key: number) => {\n            return <div key={key++} className='legendItem'>\n                <span key={key++} className=\"dot\" style={{ backgroundColor: c }}></span>\n                <label key={key++} className=\"label\" >{labels[colorStrings.indexOf(c)]}</label>\n            </div>\n        })\n        return <div className=\"Legend\">\n            <ul>{legendItems}</ul>\n            <div className=\"cover-bar\"></div>\n        </div>;\n    }\n    else return <div></div>\n}","\nexport function viewport(small: number, large: number) {\n  return (window.innerWidth > 1024) ? small : large;\n}\n\nexport function toInt(s: string | number): number {\n  if (typeof s === 'number')\n    return s\n  else {\n    let chars = [...s]\n    let byteArr = chars.map((c: string) => { return c.charCodeAt(0) })\n    return parseInt(byteArr.join(\"\"), 10)\n  }\n}\n\nexport function colors(subArr: number[]) {\n  let colors = [\n    'rgba(0,0,0, 0.6)',\n    'rgba(128,128,128, 0.6)',\n    'rgba(128,128,0, 0.6)',\n    'rgba(128,0,128, 0.6)',\n    'rgba(128,0,0, 0.6)',\n    'rgba(0,128,128, 0.6)',\n    'rgba(0,128,0, 0.6)',\n    'rgba(0,0,128, 0.6)',\n    'rgba(255,255,255, 0.6)',\n    'rgba(255,255,0, 0.6)',\n    'rgba(255,0,255, 0.6)',\n    'rgba(255,0,0, 0.6)',\n    'rgba(0,255,255, 0.6)',\n    'rgba(0,255,0, 0.6)',\n    'rgba(0,0,255, 0.6)',\n    'rgba(255,255,128, 0.6)',\n    'rgba(255,128,255, 0.6)',\n    'rgba(255,128,128, 0.6)',\n    'rgba(128,255,255, 0.6)',\n    'rgba(128,255,128, 0.6)',\n    'rgba(128,128,255, 0.6)',\n    'rgba(128,0,255, 0.6)',\n    'rgba(0,128,255, 0.6)',\n    'rgba(255,128,0, 0.6)',\n    'rgba(64,64,64, 0.6)',\n    'rgba(192,192,192, 0.6)',\n    'rgba(192,192,64, 0.6)',\n    'rgba(192,64,192, 0.6)',\n    'rgba(192,64,64, 0.6)',\n    'rgba(64,192,192, 0.6)',\n    'rgba(64,192,64, 0.6)',\n    'rgba(64,64,192, 0.6)',\n    'rgba(255,255,64, 0.6)',\n    'rgba(255,64,255, 0.6)',\n    'rgba(255,64,64, 0.6)',\n    'rgba(64,255,255, 0.6)',\n    'rgba(64,255,64, 0.6)',\n    'rgba(64,64,255, 0.6)',\n    'rgba(255,255,192, 0.6)',\n    'rgba(255,192,255, 0.6)',\n    'rgba(255,192,192, 0.6)',\n    'rgba(192,255,255, 0.6)',\n    'rgba(192,255,192, 0.6)',\n    'rgba(192,192,255, 0.6)',\n    'rgba(192,64,255, 0.6)',\n    'rgba(64,192,255, 0.6)',\n    'rgba(255,192,64, 0.6)',\n    'rgba(64,64,0, 0.6)',\n    'rgba(64,0,64, 0.6)',\n    'rgba(64,0,0, 0.6)',\n    'rgba(0,64,64, 0.6)',\n    'rgba(0,64,0, 0.6)',\n    'rgba(0,0,64, 0.6)',\n    'rgba(192,192,0, 0.6)',\n    'rgba(192,0,192, 0.6)',\n    'rgba(192,0,0, 0.6)',\n    'rgba(0,192,192, 0.6)',\n    'rgba(0,192,0, 0.6)',\n    'rgba(0,0,192, 0.6)',\n    'rgba(64,0,192, 0.6)',\n    'rgba(0,64,192, 0.6)',\n    'rgba(192,64,0, 0.6)',\n    'rgba(102,51,0, 0.6)',\n    'rgba(255,229,204, 0.6)',\n    'rgba(255,153,153, 0.6)',\n  ];\n  return subArr.map(i => { return colors[colors.length - (i % colors.length) - 1] });\n}","import '../style.scss';\r\n\r\nimport React from 'react';\r\nimport { Pie } from 'react-chartjs-2';\r\n\r\nimport * as d from '../../datafns';\r\nimport Legend from './legend';\r\nimport * as _ from './logic';\r\n\r\nexport default function PieChart(props: { data: d.obj[], groupBy: string, values: string }) {\r\n  let grouped = d.sumAndGroup(props.data, props.groupBy);\r\n  let x: number[] = d.getColumn(grouped, props.values) as number[]\r\n  let labels: string[] = d.getColumn(grouped, props.groupBy) as string[]\r\n  let colorIds: number[] = d.notEmpty(props.data) ? labels.map(s => { return _.toInt(s) }) : []\r\n  let chartData: _.ChartData = _.formatChartData(x, labels, colorIds)\r\n  let total = x.reduce((acc, n) => { return acc + n })\r\n  let toolTipSize = _.viewport(12, 12)\r\n  if (d.notEmpty(chartData.datasets))\r\n    return (\r\n      <div className=\"PieChart\">\r\n        <div className=\"chart\">\r\n          <Pie\r\n            height={1} width={1}\r\n            data={chartData}\r\n            options={\r\n              {\r\n                layout: {\r\n                },\r\n                labels: { display: false },\r\n                legend: {\r\n                  display: false,\r\n                  position: 'top',\r\n                  align: 'center',\r\n                  labels: {\r\n                    usePointStyle: true,\r\n                    fontSize: 24\r\n                  },\r\n                  fullWidth: true\r\n                },\r\n                tooltips: {\r\n                  bodyFontSize: toolTipSize,\r\n                  mode: 'index',\r\n                  callbacks: {\r\n                    label: (tooltipItem: any, data: _.ChartData) => {\r\n                      var label = data.labels[tooltipItem.index];\r\n                      return label;\r\n                    },\r\n                    afterLabel: (tooltipItem: any, data: _.ChartData) => {\r\n                      var value = data.datasets[tooltipItem.datasetIndex].data[tooltipItem.index];\r\n                      var percent: number | string = data.datasets[tooltipItem.datasetIndex].data[tooltipItem.index] / total * 100;\r\n                      percent = percent.toFixed(2); // make a nice string\r\n                      return (!Number.isInteger(value)) ? '£ ' + value.toFixed(2) + ' (' + percent + '%)' : value + ' (' + percent + '%)';\r\n                    }\r\n                  },\r\n                  fontSize: 24\r\n                }\r\n              }\r\n            }\r\n          />\r\n        </div>\r\n        <Legend chartData={chartData} />\r\n      </div>\r\n    )\r\n  else return (\r\n    <div className=\"chart\">\r\n      <Pie\r\n        data={chartData}\r\n      />\r\n    </div>\r\n  )\r\n}","import {colors} from '../logic'\nexport * from \"../logic\"\n\nexport interface DataSet {\n  label: string\n  data: number[]\n  backgroundColor: string[]\n}\n\nexport interface ChartData {\n  labels: string[]\n  datasets: DataSet[]\n}\n\n\nexport function formatChartData(x: number[], labels: string[], colorIds: number[]): ChartData {\n  return {\n    labels: labels,\n    datasets: [\n      {\n        label: 'Net Sales £',\n        data: x,\n        backgroundColor: colors(colorIds)\n      }\n    ]\n  };\n}\n\n","import { ChartData } from \"./logic\";\nimport React from \"react\"\n\nexport default function Legend(props: { chartData: ChartData }) {\n    let key = 0;\n    let colorStrings = props.chartData.datasets.map(i => { return i.backgroundColor });\n    let labels = props.chartData.datasets.map(i => { return i.label });\n    let legendItems = colorStrings.map(c => {\n        return <div key={key++} className='legendItem'>\n            <span key={key++} className=\"dot\" style={{ backgroundColor: c }}></span>\n            <label key={key++} className=\"label\" >{labels[colorStrings.indexOf(c)]}</label>\n        </div>\n    })\n    return <div className=\"Legend\">\n        <ul>{legendItems}</ul>\n        <div className=\"cover-bar\"></div>\n    </div>;\n}","import React from 'react';\r\nimport { Bar } from 'react-chartjs-2';\r\n\r\nimport * as d from '../../datafns';\r\nimport Legend from './legend';\r\nimport { ChartData, formatChartData, getLabelSize, viewport } from './logic';\r\nimport \"../style.scss\"\r\n\r\nexport default function StackedBarChart(props: { className?: string, data: d.obj[], x: string[], groupBy: string, values: string }) {\r\n\r\n  let { data, x, groupBy, values } = props\r\n  let chartData: ChartData = formatChartData(data, x, groupBy, values)\r\n  let total = d.sumColumn(data, values)\r\n  let labelSize = getLabelSize()\r\n\r\n  if (chartData.datasets !== undefined)\r\n    return (\r\n      <div className=\"BarChart\">\r\n        <div className=\"chart\">\r\n          <Bar\r\n            data={chartData}\r\n            options={\r\n              {\r\n                scales: {\r\n                  xAxes: [{\r\n                    stacked: true,\r\n                    ticks:\r\n                    {\r\n                      fontSize: labelSize\r\n                    },\r\n                  },\r\n                  ],\r\n                  yAxes: [{\r\n                    stacked: true,\r\n                    ticks:\r\n                    {\r\n                      fontSize: labelSize\r\n                    }\r\n                  }]\r\n                },\r\n                labels: {\r\n                  display: false,\r\n                  fontSize: 48\r\n                },\r\n                legend: {\r\n                  display: false,\r\n                  position: 'right',\r\n                  align: 'center',\r\n                  labels: {\r\n                    usePointStyle: true,\r\n                  },\r\n                  fullWidth: true\r\n                },\r\n                tooltips: {\r\n                  bodyFontSize: viewport(12, 12),\r\n                  mode: 'single',\r\n                  callbacks: {\r\n                    label: (tooltipItem: any, data: ChartData) => {\r\n                      let item = data.datasets[tooltipItem.datasetIndex]\r\n                      var label = item.label;\r\n                      if (item.data[tooltipItem.index] > 0)\r\n                        return label;\r\n                      else return '';\r\n                    },\r\n                    afterLabel: (tooltipItem: any, data: ChartData) => {\r\n                      let item = data.datasets[tooltipItem.datasetIndex]\r\n                      var sales = item.data[tooltipItem.index];\r\n                      var percent: number = item.data[tooltipItem.index] / total * 100;\r\n                      var percentString = percent.toFixed(2); // make a nice string\r\n                      if (item.data[tooltipItem.index] > 0)\r\n                        return (!Number.isInteger(sales)) ? '£ ' + sales.toFixed(2) + ' (' + percentString + '%)' : sales + ' (' + percentString + '%)';\r\n                      else return '';\r\n                    }\r\n                  },\r\n                }\r\n              }\r\n            }\r\n          />\r\n        </div>\r\n        <Legend chartData={chartData} />\r\n      </div>\r\n    )\r\n  else return (\r\n    <div className=\"chart\">\r\n      <Bar\r\n        data={chartData}\r\n      />\r\n    </div>\r\n  )\r\n\r\n}\r\n","import {\n    notEmpty,\n    getUniqueValues,\n    obj,\n    getElementsWithValue,\n    getColumn,\n} from \"../../datafns\"\n\nimport { colors, toInt, viewport } from \"../logic\"\n\nexport * from \"../logic\"\n\nexport function getLabelSize(): number {\n    return viewport(12, 26);\n}\n\nexport interface DataSet {\n    label: string,\n    data: number[],\n    backgroundColor: string,\n    datasetKeyProvider: number\n}\n\nexport interface ChartData {\n    labels: string[],\n    datasets: DataSet[]\n}\n\nexport function formatChartData(data: obj[], x: string[], groupBy: string, values: string): ChartData {\n    // let stacks = d.getUniqueValues(data, groupBy);\n    let stackNames: string[] = getUniqueValues(data, groupBy);\n    let stackIds: number[] = stackNames.map(s => { return toInt(s) })\n    let clrs: string[] = colors(stackIds)\n    let dataSets = stackNames.map((name, index) => {\n        let color: string = clrs[index]\n        let valuesArr: number[] = x.map((t: string) => {\n            let atHour: obj[] = getElementsWithValue(data, 'TillHour', t);\n            let withCategory: obj[] = getElementsWithValue(atHour, groupBy, stackNames[index]);\n            let withValue: number[] = getColumn(withCategory, values) as number[];\n            return notEmpty(withCategory) ? withValue.reduce((acc, n) => acc + n) : 0;\n        })\n        return {\n            label: stackNames[stackNames.indexOf(name)] as string,\n            data: valuesArr,\n            backgroundColor: color,\n            datasetKeyProvider: index\n        }\n    });\n    return {\n        labels: x,\n        datasets: dataSets\n    };\n}","import './style.scss';\r\n\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Radio from '@material-ui/core/Radio';\r\nimport RadioGroup from '@material-ui/core/RadioGroup';\r\nimport React, { ChangeEvent, SetStateAction } from 'react';\r\n\r\nexport default function RadioButtons(props: { value: string, handleChange: (e: ChangeEvent<HTMLInputElement>) => void }) {\r\n\r\n    return (\r\n        <div className= \"RadioButtons\">\r\n            <FormControl component=\"fieldset\">\r\n                <RadioGroup color=\"#004064\" aria-label=\"gender\" name=\"gender1\" value={props.value} onChange={props.handleChange}>\r\n                    <FormControlLabel color=\"#004064\" value=\"Sales\" control={<Radio />} label=\"Sales\" />\r\n                    <FormControlLabel color=\"#004064\" value=\"Profit\" control={<Radio />} label=\"Profit\" />\r\n                    <FormControlLabel color=\"#004064\" value=\"Qty\" control={<Radio />} label=\"Quantity\" />\r\n                </RadioGroup>\r\n            </FormControl>\r\n        </div>\r\n    );\r\n}\r\n\r\n","import './style.scss';\r\nimport 'date-fns';\r\nimport useSelect from '../../../../../lib/useselect/useselect'\r\nimport CalendarTodayIcon from '@material-ui/icons/CalendarToday';\r\nimport { Paper, Container, Typography } from '@material-ui/core';\r\nimport { BarChart as BarChartIcon, PieChart as PieChartIcon } from '@material-ui/icons';\r\nimport React, { SetStateAction, useContext, useEffect, useState } from 'react';\r\n\r\nimport PieChart from '../../../../../lib/chart/piechart/piechart';\r\nimport StackedBarChart from '../../../../../lib/chart/stackedbarchart/bar_chart';\r\nimport * as d from '../../../../../lib/datafns';\r\nimport Table from '../../../../../lib/table/table';\r\nimport useData, { obj } from '../../../../../lib/usedata/usedata';\r\nimport useDate from '../../../../../lib/usedate/usedate';\r\nimport DropDown from '../../../../drop_down';\r\nimport HeaderBar from '../headerbar/headerbar';\r\nimport useIconSwitch from './icon_switch';\r\nimport RadioButtons from '../radio_buttons/radio_buttons.';\r\nimport { ReportProps } from '../logic';\r\nimport { formatTableData, GetChartProps } from './logic';\r\nimport Div from './style';\r\n\r\nexport function SalesBreakdown(props: ReportProps) {\r\n\r\n  const {\r\n    startDate,\r\n    endDate,\r\n    Dates,\r\n  } = useDate();\r\n\r\n  const { Select, selected } = useSelect(['Category', 'Product', 'PriceMark', 'Cashier', 'Receipt'], \"black\")\r\n\r\n  const { data, Spinner } = useData(`/api/salesByProduct/${props.db}/${startDate}/${endDate}`)\r\n\r\n  const [groupBy, setGroupBy] = useState<string>('Category');\r\n  const [total, setTotal] = useState<number>(0);\r\n  const [dataChoice, setDataChoice] = useState<string>('Sales');\r\n  const [tableData, setTableData] = useState<obj[]>([]);\r\n  const [chart, setChart] = useState('pie');\r\n  const {\r\n    IconSwitch\r\n  } = useIconSwitch(\r\n    [\r\n      { icon: <BarChartIcon />, callBack: setChart.bind(this, 'bar') },\r\n      { icon: <PieChartIcon />, callBack: setChart.bind(this, 'pie') }\r\n    ]\r\n  );\r\n\r\n  useEffect(() => {\r\n    setTableData(formatTableData(data, groupBy));\r\n    setTotal(d.sumColumn(data, dataChoice));\r\n  }, [groupBy, dataChoice, data]);\r\n\r\n  useEffect(() => {\r\n    setGroupBy(selected)\r\n  }, [selected])\r\n\r\n  function Total() {\r\n    return (\r\n      <div className='sales'>\r\n        <Select />\r\n        <RadioButtons\r\n          handleChange={(event: React.ChangeEvent<HTMLInputElement>) => setDataChoice(event.target.value)}\r\n          value={dataChoice} />\r\n        <h1>Total: {(dataChoice === 'Qty') ? total : '£' + total.toFixed(2)}</h1>\r\n      </div>);\r\n  }\r\n\r\n  function GetChart(props: GetChartProps) {\r\n    let barChartX = Array.from(Array(24).keys()).map(obj => { return ('0' + obj + ':00').slice(-5) })\r\n    return props.chart === 'pie' ? <PieChart data={data} groupBy={groupBy} values={dataChoice} />\r\n      : <StackedBarChart data={data} x={barChartX} groupBy={groupBy} values={dataChoice} />\r\n  }\r\n\r\n  return (\r\n    <div className=\"salesBreakdown\">\r\n      <Spinner >\r\n        <Paper className='reportContainer'>\r\n          <HeaderBar  >\r\n            <div className=\"left\">\r\n              <Typography className='text' variant=\"h6\"> {props.header}</Typography>\r\n              <Dates />\r\n              {/* <div><input type=\"date\"></input><CalendarTodayIcon /></div> */}\r\n            </div>\r\n            <div className=\"right\">\r\n              <IconSwitch />\r\n            </div>\r\n          </HeaderBar>\r\n          <div className='reportBody'>\r\n            <><Total /><GetChart chart={chart} /></>\r\n            <Table data={tableData} />\r\n          </div>\r\n        </Paper>\r\n      </Spinner >\r\n    </div>\r\n  );\r\n}","import React, { useState, useEffect, HTMLAttributes } from 'react';\r\n\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport BarChartIcon from '@material-ui/icons/BarChart';\r\nimport PieChartIcon from '@material-ui/icons/PieChart';\r\nimport { PropTypes } from '@material-ui/core';\r\n\r\nexport default function useIconSwitch(buttons: { icon: React.ReactNode, callBack: () => any }[]) {\r\n\r\n    const [a, b] = buttons;\r\n    const [icon, setIcon] = useState('a');\r\n\r\n    function handle() {\r\n        if (icon === 'a') {\r\n            setIcon('b');\r\n            a.callBack();\r\n        }\r\n        else {\r\n            setIcon('a');\r\n            b.callBack();\r\n        }\r\n    }\r\n\r\n    function IconSwitch() {\r\n        return <button className = \"IconSwitch\" onClick={handle}>{icon === 'a' ? a.icon : b.icon}</button>\r\n    }\r\n\r\n    return {\r\n        IconSwitch\r\n    }\r\n\r\n}","import React from 'react'\nimport * as d from \"../../../../../lib/datafns\"\n\n\nexport function formatTableData(data: d.obj[], groupBy: string): d.obj[] {\n    let format = d.sumAndGroup(data, groupBy, 'Id', 'CashierNum');\n    switch (groupBy) {\n        case 'PriceMark': return d.columns(format, 'PriceMark', 'Sales', 'Cost', 'Discount', 'Refund', 'Profit', 'Qty');\n        case 'Cashier': return d.columns(format, 'Cashier', 'Sales', 'Cost', 'Discount', 'Refund', 'Profit', 'Qty');\n        case 'Product': return d.columns(format, 'Product', 'Id', 'Category', 'PriceMark', 'Sales', 'Cost', 'Discount', 'Refund', 'Profit', 'Qty');\n        case 'Category': return d.columns(format, 'Category', 'Sales', 'Cost', 'Discount', 'Refund', 'Profit', 'Qty');\n        case 'Receipt': return d.columns(format, 'Receipt', 'Cashier', 'TillDate', 'TillTime', 'Sales', 'Cost', 'Discount', 'DsctReason', 'Refund', 'Profit', 'Qty');\n        default: return d.columns(format, 'Sales', 'Cost', 'Discount', 'Refund', 'Profit', 'Qty');\n    }\n}\n\nexport interface GetDateFieldProps {\n    chart: string\n}\n\nexport interface GetChartProps {\n    chart: string\n}\n\nexport interface SalesBreakdownProps {\n    header: string\n    db: string\n    display: React.Dispatch<any>\n    phoneDisplay: string\n}\n\nexport function convertPM(data: d.obj[]) {\n    let priceMark = d.addColumn(data, 'AssocProdID', 'PriceMark', (cell) => { return cell ? 'PM' : 'Non PM' });\n    priceMark.forEach(e => { Object.assign(e, { ['Profit']: (e['Sales'] - e['Discount'] - e['Cost']) }) });\n    return priceMark;\n}\n","import { ReportProps } from './logic'\r\nimport { useState, useEffect } from 'react'\r\nimport Typography from '@material-ui/core/Typography'\r\nimport useData from '../../../../lib/usedata/usedata';\r\nimport useDate from '../../../../lib/usedate/usedate';\r\nimport React from 'react';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport HeaderBar from './headerbar/headerbar'\r\nimport SimpleSelect from '../../../../lib/useselect/useselect'\r\nimport Table from '../../../../lib/table/table'\r\nexport default function StaffHours(props: ReportProps) {\r\n\r\n    const {\r\n        startDate,\r\n        endDate,\r\n        Dates\r\n    } = useDate();\r\n\r\n    const {\r\n        data,\r\n        Spinner\r\n    } = useData(`/api/staffhours/${props.db}/${startDate}/${endDate}`);\r\n\r\n    return (\r\n        <div className='report'>\r\n            <Spinner>\r\n                <Paper className='reportContainer'>\r\n                    <HeaderBar ><Typography className='text' variant=\"h6\">{props.header}</Typography><Dates /></HeaderBar>\r\n                    <div className='reportBody'>\r\n                        <Table data={data} />\r\n                    </div>\r\n                </Paper>\r\n            </Spinner>\r\n        </div>\r\n    );\r\n}","import React, { useEffect, useState } from 'react';\nimport useSpinner from \"../../../../lib/usespinner/usespinner\"\n\nexport interface obj {\n    [key: string]: any\n}\n\n\nexport default function useDataBuffer(route: string, rowsPerBuffer: number) {\n    const [data, setData] = useState([] as obj[])\n    const [bufferCount, setBufferCount] = useState(0)\n    const { Spinner, setLoading } = useSpinner()\n\n    async function fetchData() {\n        setLoading(true)\n        setBufferCount(0)\n        fetch(`${route}/${rowsPerBuffer}/${bufferCount}`)\n            .then(res => res.json())\n            .then(rows => setData(rows))\n            .catch(error => {\n                console.error(error)\n                setTimeout(1000)\n                fetchData()\n            })\n    }\n\n    async function fetchBuffer() {\n        setLoading(true)\n        fetch(`${route}/${rowsPerBuffer}/${bufferCount}`)\n            .then(res => res.json())\n            .then(rows => setData([...data, ...rows]))\n            .catch(error => {\n                console.log(error)\n                setTimeout(1000)\n                fetchBuffer()\n            })\n    }\n\n    useEffect(() => {\n        fetchBuffer()\n    }, [bufferCount])\n\n    useEffect(() => {\n        fetchData()\n    }, [route])\n\n    useEffect(() => {\n        setLoading(false)\n    }, [data])\n\n\n    function getNextBuffer() {\n        setBufferCount(bufferCount + 1)\n    }\n\n    return {\n        data,\n        getNextBuffer,\n        Spinner\n\n    }\n\n}","\nimport useDataBuffer from '../usedatabuffer'\nimport Table from '../../../../../lib/table/table'\nimport React, { useState, useContext } from 'react'\nimport { ctx } from './stockreport'\n\nexport default function NonScan() {\n\n    const [sort, setSort] = useState({ by: \"id\", order: \"desc\" })\n    const { db } = useContext(ctx)\n\n    const {\n        data,\n        getNextBuffer,\n        Spinner\n    } = useDataBuffer(`api/nonscan/${db}/${sort.by}/${sort.order}`, 100);\n\n    return <Spinner><Table data={data} bufferCallback={getNextBuffer} sortCallback={setSort} /></Spinner>\n}","import useDataBuffer from '../usedatabuffer'\nimport Table from '../../../../../lib/table/table'\nimport React, { useState, useContext } from 'react'\nimport { ctx } from './stockreport'\n\nexport default function Reorder() {\n    //NEXT: Implement sortCallBack in Table\n    const [sort, setSort] = useState({ by: \"id\", order: \"desc\" })\n    const { db } = useContext(ctx)\n\n    const {\n        data,\n        getNextBuffer,\n        Spinner\n    } = useDataBuffer(`api/reorder/${db}/${sort.by}/${sort.order}`, 100);\n\n    return <Spinner><Table data={data} bufferCallback={getNextBuffer} sortCallback={setSort} /></Spinner>\n}","import useDataBuffer from '../usedatabuffer'\nimport Table from '../../../../../lib/table/table'\nimport React, { useState, useContext } from 'react'\nimport { ctx } from './stockreport'\n\nexport default function Stock() {\n\n    const [sort, setSort] = useState({ by: \"id \", order: \"desc\" })\n    const { db } = useContext(ctx)\n\n    const {\n        data,\n        getNextBuffer,\n        Spinner\n    } = useDataBuffer(`api/stock/${db}/${sort.by}/${sort.order}`, 100);\n\n    return <Spinner><Table data={data} bufferCallback={getNextBuffer} sortCallback={setSort} /></Spinner>\n}","import useDataBuffer from '../usedatabuffer'\nimport Table from '../../../../../lib/table/table'\nimport React, { useState, useContext } from 'react'\nimport { ctx } from './stockreport'\nimport useDate from '../../../../../lib/usedate/usedate'\n\nexport default function StockAdjust() {\n\n    const [sort, setSort] = useState({ by: \"id\", order: \"desc\" })\n    const { db } = useContext(ctx)\n    const { startDate, endDate, Dates } = useDate();\n\n    const {\n        data,\n        getNextBuffer,\n        Spinner\n    } = useDataBuffer(`api/adjust/${db}/${startDate}/${endDate}/${sort.by}/${sort.order}`, 100);\n\n    return (<Spinner>\n        <Dates />\n        <Table data={data} bufferCallback={getNextBuffer} sortCallback={setSort} />\n    </Spinner>)\n}","import 'date-fns';\r\n\r\nimport Paper from '@material-ui/core/Paper';\r\nimport React, { useEffect, useState } from 'react';\r\n\r\nimport useSimpleSelect from '../../../../../lib/useselect/useselect';\r\nimport HeaderBar from '../headerbar/headerbar';\r\nimport { ReportProps } from '../logic';\r\nimport NonScan from './nonscan';\r\nimport Reorder from './reorder';\r\nimport Stock from './stock';\r\nimport StockAdjust from './stockadjust';\r\n\r\nexport const ctx = React.createContext({ db: \"itdepos\" })\r\n\r\nexport function StockReport(props: ReportProps) {\r\n\r\n    const { selected, Select } = useSimpleSelect(\r\n        [\r\n            \"Stock\",\r\n            \"Reorder\",\r\n            \"Non Scan\",\r\n            \"Stock Adjust\"\r\n        ],\r\n        \"white\"\r\n    );\r\n\r\n    function render() {\r\n        return (\r\n            <div className='report'>\r\n                <Paper className='reportContainer'>\r\n                    <HeaderBar ><Select /></HeaderBar>\r\n                    <div className='reportBody'>\r\n                        <ctx.Provider value={{ db: props.db }}>\r\n                            <TableChoice selected={selected} db={props.db} />\r\n                        </ctx.Provider>\r\n                    </div>\r\n                </Paper>\r\n            </div>\r\n        );\r\n    }\r\n\r\n\r\n    function TableChoice(props: { selected: string, db: string }) {\r\n        switch (selected) {\r\n\r\n            case \"Stock\": return <Stock />\r\n            case \"Reorder\": return <Reorder />\r\n            case \"Non Scan\": return <NonScan />\r\n            case \"Stock Adjust\": return <StockAdjust />\r\n            default: return <Stock />\r\n        }\r\n    }\r\n\r\n    return render()\r\n}\r\n\r\n","import { ReportProps } from '../logic';\r\nimport 'date-fns';\r\nimport \"./vat.scss\"\r\n\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nimport HeaderBar from '../headerbar/headerbar';\r\nimport { columns, obj, removeColumns, sumAndGroup } from '../../../../../lib/datafns';\r\nimport Table from '../../../../../lib/table/table';\r\nimport useDate from '../../../../../lib/usedate/usedate';\r\nimport useData from '../../../../../lib/usedata/usedata';\r\n\r\n\r\nexport function VAT(props: ReportProps) {\r\n\r\n    const {\r\n        startDate,\r\n        endDate,\r\n        Dates,\r\n        ...date\r\n    } = useDate()\r\n\r\n    const { data, Spinner } = useData(`/api/VAT/${props.db}/${startDate}/${endDate}`)\r\n\r\n    const tableData = columns(data, 'VatRate', 'Receipt_No', 'Total_Sales', 'Quantity', 'Total_VAT', 'Nett')\r\n    const totalVat: obj[] = sumAndGroup(removeColumns(tableData, 'Receipt_No'), 'VatRate')\r\n    const receipts: obj[] = sumAndGroup(removeColumns(tableData, 'VatRate'), 'Receipt_No')\r\n\r\n    return (\r\n        <div className='report'>\r\n            <Spinner>\r\n                <Paper className='reportContainer'>\r\n                    <HeaderBar>\r\n                        <Typography className='text' variant=\"h6\">{props.header}</Typography>\r\n                        <Dates />\r\n                    </HeaderBar>\r\n                    <div className='reportBody'>\r\n                        <H1>Total VAT</H1>\r\n                        <div className=\"total\"> <Table data={totalVat} /></div>\r\n                        <H1>VAT Receipts</H1>\r\n                        <Table data={receipts} />\r\n                    </div>\r\n                </Paper>\r\n            </Spinner>\r\n        </div>\r\n    );\r\n\r\n}\r\n\r\nconst H1 = styled.h1`\r\n\r\ncolor: #004064;;\r\ntext-align:left;\r\nmargin-left: 1em;\r\nfont-size: 1em;\r\n\r\n`;\r\n\r\n\r\n","import { ReportProps } from './logic';\r\nimport { useState, useEffect } from 'react'\r\nimport Typography from '@material-ui/core/Typography'\r\nimport useData from '../../../../lib/usedata/usedata';\r\nimport useDate from '../../../../lib/usedate/usedate';\r\nimport React from 'react';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport HeaderBar from './headerbar/headerbar'\r\nimport SimpleSelect from '../../../../lib/useselect/useselect'\r\nimport Table from '../../../../lib/table/table'\r\n\r\nexport default function Wastage(props: ReportProps) {\r\n\r\n    const {\r\n        startDate,\r\n        endDate,\r\n        Dates\r\n    } = useDate();\r\n\r\n    const {\r\n        data,\r\n        Spinner\r\n    } = useData(`/api/wastage/${props.db}/${startDate}/${endDate}`);\r\n\r\n    return (\r\n        <div className='report'>\r\n            <Spinner>\r\n                <Paper className='reportContainer'>\r\n                    <HeaderBar ><Typography className='text' variant=\"h6\">{props.header}</Typography><Dates /></HeaderBar>\r\n                    <div className='reportBody'>\r\n                        <Table data={data} />\r\n                    </div>\r\n                </Paper>\r\n            </Spinner>\r\n        </div>\r\n    );\r\n}","\nimport React, { useState } from 'react';\nimport useNavBar from './navbar/navbar'\nimport { RouteComponentProps } from \"react-router-dom\"\nimport CashierHistory from './components/cashier_history'\nimport VoidSales from './components/cashier_history';\nimport CustomerCredit from './components/customer_credit';\nimport ExpiryDates from './components/expiry_dates';\nimport PriceOverride from './components/price_override';\nimport ProductExchange from './components/product_exchange';\nimport Refund from './components/refund';\nimport ReturnToSupplier from './components/return_to_supplier';\nimport { SalesBreakdown } from './components/salesbreakdown/sales_breakdown';\nimport StaffHours from './components/staff_hours';\nimport { StockReport } from './components/stockreport/stockreport';\nimport { VAT } from './components/vat_report/vat_report';\nimport VoucherSales from './components/voucher_sales';\nimport Wastage from './components/wastage';\n// import Div from './style';\nimport './style.scss'\n\nexport default function Reports(props: RouteComponentProps) {\n    const { db, NavBar } = useNavBar()\n\n    return (\n        <div className = \"reportspage\">\n            <NavBar />\n            < div className=\"reports\">\n                <SalesBreakdown header={'Sales Breakdown'} db={db} />\n                <StockReport id=\"stock\" header={'Stock'} db={db} />\n                <CashierHistory header={'Cashier History'} db={db} />\n                <VAT header={'VAT'} db={db} />\n                <PriceOverride header={'Price Override Report'} db={db} />\n                <Wastage header={'Wastage'} db={db} />\n                <Refund header={'Refund Report'} db={db} />\n                <StaffHours header={'Staff Hours'} db={db} />\n                <ExpiryDates header={'Expiry Dates'} db={db} />\n\n                {/* <VoidSales header={'Void Sales'} db={db} /> */}\n                {/* <ReturnToSupplier header={'Return To Supplier'} db={db} />\n                <CustomerCredit header={'Customer Credit'} db={db} />\n                <ProductExchange header={'Product Exchange'} db={db} />\n                <VoucherSales header={'Voucher Sales'} db={db} /> */}\n            </div>\n        </div >\n    )\n}\n","import TestRoute from \"./testroute\"\r\nimport \"./sandbox.scss\"\r\nimport './App.scss';\r\nimport 'typeface-roboto';\r\nimport Container from \"@material-ui/core/Container\"\r\nimport useStyles from './style'\r\nimport React from 'react';\r\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\r\nimport SandBox from \"./sandbox\"\r\n\r\nimport Login from './components/pages/login/login';\r\nimport Reports from './components/pages/reports/reports';\r\n\r\nfunction App() {\r\n  const classes = useStyles()\r\n  document.body.style.zoom = \"1.0\"\r\n  return (\r\n    <div className={classes.app} >\r\n      <link rel=\"stylesheet\" href=\"https://fonts.googleapis.com/icon?family=Material+Icons\" />\r\n      <meta name=\"viewport\" content=\"width=600, initial-scale=1 maximum-scale=1\" />\r\n\r\n      <Router>\r\n          <Route path=\"/\" exact={true} render={props => <Login {...props} />} />\r\n          <Route path=\"/reports\" exact={true} render={props => <Reports {...props} />} />\r\n      </Router>\r\n\r\n      {/* <Router>\r\n        <Route path=\"/\" exact={true} render={props => <TestRoute {...props} />} />\r\n        <Route path=\"/sandbox\" exact={true} render={props => <SandBox {...props} />} />\r\n      </Router> */}\r\n\r\n    </div >\r\n  );\r\n}\r\n\r\nexport default App;\r\n//","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}