{"version":3,"sources":["style.ts","components/pages/login/copyright.tsx","lib/usespinner/usespinner.tsx","components/pages/login/login.tsx","components/pages/login/logic.tsx","lib/useselect/useselect.tsx","lib/usedata/usedata.tsx","components/pages/reports/navbar/navbar.tsx","components/pages/reports/navbar/usedbmenu/useDBMenu.tsx","lib/datafns.tsx","lib/usedate/logic.tsx","lib/usedate/usedate.tsx","components/pages/reports/components/headerbar/headerbar.tsx","components/functions.js","lib/table/logic.tsx","lib/table/tablehead.tsx","lib/table/table.tsx","components/pages/reports/components/cashier_history.tsx","components/pages/reports/components/expiry_dates.tsx","components/pages/reports/components/price_override.tsx","components/pages/reports/components/refund.tsx","lib/chart/piechart/legend.tsx","lib/chart/logic.tsx","lib/chart/piechart/piechart.tsx","lib/chart/piechart/logic.tsx","lib/chart/stackedbarchart/legend.tsx","lib/chart/stackedbarchart/bar_chart.tsx","lib/chart/stackedbarchart/logic.tsx","components/pages/reports/components/radio_buttons/radio_buttons..tsx","components/pages/reports/components/salesbreakdown/sales_breakdown.tsx","components/pages/reports/components/salesbreakdown/icon_switch.tsx","components/pages/reports/components/salesbreakdown/logic.tsx","components/pages/reports/components/staff_hours.tsx","components/pages/reports/components/usedatabuffer.tsx","components/pages/reports/components/stockreport/nonscan.tsx","components/pages/reports/components/stockreport/reorder.tsx","components/pages/reports/components/stockreport/stock.tsx","components/pages/reports/components/stockreport/stockadjust.tsx","components/pages/reports/components/stockreport/stockreport.tsx","components/pages/reports/components/vat_report/vat_report.tsx","components/pages/reports/components/wastage.tsx","components/pages/reports/reports.tsx","App.tsx","serviceWorker.js","index.js"],"names":["useStyles","makeStyles","theme","app","flexGrow","backgroundColor","Copyright","className","Typography","variant","color","to","Date","getFullYear","useSpinner","useState","loading","setLoading","Spinner","props","children","Login","data","setData","login","username","password","a","header","method","headers","body","JSON","stringify","fetch","then","res","json","localStorage","setItem","history","push","catch","error","console","log","setTimeout","useLogin","Field","setUsername","setPassword","onSubmit","bind","this","TextField","margin","required","fullWidth","id","label","name","autoComplete","autoFocus","onChange","e","target","value","type","toString","Button","onClick","Paper","Avatar","src","alt","component","noValidate","Grid","container","item","xs","useSimpleSelect","items","React","selected","setSelected","Items","map","s","index","MenuItem","aria-haspopup","key","onMouseDown","useEffect","Select","ref","useRef","useData","url","fetchData","err","useNavBar","DBList","setDBList","useSelect","schema_name","createDBList","useDBMenu","db","setDb","NavBar","position","notEmpty","length","getColumn","col","sumColumn","reduce","acc","n","removeColumns","_data","parse","c","columns","cols","en","Object","assign","sumAndGroup","dontSum","groups","getUniqueValues","split","getElementsWithValue","sumObjectsByKey","obj1","obj2","keys","forEach","k","includes","grouped","arr","uniqueVals","Set","add","v","filter","todaysDate","today","getMonth","slice","getDate","formatDate","date","d","useDate","start","end","setDate","DateField","defaultValue","handleChange","startDate","endDate","Dates","currentTarget","HeaderBar","EmptyMessage","EnhancedTableHead","order","orderBy","onRequestSort","headCells","setHeadCells","numeric","disablePadding","TableHead","TableRow","headCell","TableCell","align","padding","sortDirection","property","event","TableSortLabel","active","direction","head","EnhancedTable","classes","displayBuffer","setDisplayBuffer","setOrder","setOrderBy","rowCount","setRowCount","rows","setRows","bufferCount","setBufferCount","Buffer","f","values","Math","round","bufferCallback","Table","stickyHeader","aria-labelledby","size","aria-label","isAsc","sortCallback","by","textContent","firstChild","sorted","sort","ord","b","_","toFixed","TableBody","row","hover","role","tabIndex","CashierHistory","tableData","setTableData","formatTableData","cashier","ordstr","sortByProperty","Tables","lastDate","DateLabel","TableLabel","styled","div","ExpiryDates","PriceOverride","Refund","Legend","chartData","datasets","colorStrings","labels","legendItems","style","indexOf","viewport","small","large","window","innerWidth","toInt","byteArr","charCodeAt","parseInt","join","colors","subArr","i","PieChart","groupBy","x","colorIds","total","toolTipSize","height","width","options","layout","display","legend","usePointStyle","fontSize","tooltips","bodyFontSize","mode","callbacks","tooltipItem","afterLabel","datasetIndex","percent","Number","isInteger","StackedBarChart","stackNames","clrs","dataSets","valuesArr","t","atHour","withCategory","withValue","datasetKeyProvider","formatChartData","labelSize","undefined","scales","xAxes","stacked","ticks","yAxes","sales","percentString","RadioButtons","FormControl","RadioGroup","FormControlLabel","control","Radio","SalesBreakdown","setGroupBy","setTotal","dataChoice","setDataChoice","chart","setChart","IconSwitch","buttons","icon","setIcon","handle","callBack","useIconSwitch","BarChart","Total","GetChart","barChartX","Array","from","obj","format","StaffHours","useDataBuffer","route","rowsPerBuffer","fetchBuffer","getNextBuffer","NonScan","setSort","useContext","ctx","Reorder","Stock","StockAdjust","createContext","StockReport","TableChoice","Provider","VAT","totalVat","receipts","H1","h1","Wastage","Reports","App","document","zoom","rel","href","content","path","exact","render","replace","Boolean","location","hostname","match","ReactDOM","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"+jBAQeA,EANGC,aAAW,SAACC,GAAD,MAAY,CACvCC,IAAK,CACHC,SAAU,EACVC,gBAAiB,e,sFCDN,SAASC,IACpB,OAAQ,yBAAKC,UAAU,aACnB,kBAACC,EAAA,EAAD,CAAYC,QAAQ,QAAQC,MAAM,iBAC7B,kBACD,kBAAC,IAAD,CAAMA,MAAM,UAAUC,GAAG,2BAAzB,gBAEE,KACD,IAAIC,MAAOC,cACX,M,qDCRE,SAASC,IAAc,IAAD,EAEHC,oBAAS,GAFN,mBAE1BC,EAF0B,KAYjC,MAAO,CACHC,WAb6B,KAc7BC,QAVJ,SAAiBC,GACb,OAAO,yBAAKZ,UAAU,WAAWY,EAAMC,SAAUJ,EAC3C,yBAAKT,UAAU,WACb,yBAAKA,UAAU,QAAO,kBAAC,IAAD,qBAExB,QCCC,SAASc,EAAMF,GAA6B,IAAD,ECJ3C,WAAqB,IAAD,EAEPJ,mBAAqB,IAFd,mBAExBO,EAFwB,KAElBC,EAFkB,OAGCT,IAAxBI,EAHuB,EAGvBA,QAASD,EAHc,EAGdA,WAHc,SAKhBO,EALgB,kFAK/B,WAAqBC,EAAkBC,EAAkBP,GAAzD,eAAAQ,EAAA,sDAEIV,GAAW,GAELW,EAAS,CACXC,OAAQ,OACRC,QAAS,CACL,OAAU,mBACV,eAAgB,oBAEpBC,KAAMC,KAAKC,UAAU,CAAER,SAAUA,EAAUC,SAAUA,KAEzDQ,MAAM,YAAaN,GACdO,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MAAK,SAAAb,GACFC,EAAQD,GACRL,GAAW,GACPK,EAAK,IAAMA,EAAK,GAAL,KACXgB,aAAaC,QAAQ,KAAMjB,EAAK,GAAL,IAC3BH,EAAMqB,QAAQC,KAAK,gBAG1BC,OAAM,SAACC,GACJC,QAAQC,IAAIF,GACZG,WAAW,KACXtB,EAAMC,EAAUC,EAAUP,MAzBtC,4CAL+B,sBAkC/B,MAAO,CACHD,UACAI,OACAE,SDhC2BuB,GAAzBvB,EADgD,EAChDA,MAAOF,EADyC,EACzCA,KAAMJ,EADmC,EACnCA,QAErB,SAAS8B,IAAS,IAAD,EACiBjC,mBAAS,IAD1B,mBACRU,EADQ,KACEwB,EADF,OAEiBlC,mBAAS,IAF1B,mBAERW,EAFQ,KAEEwB,EAFF,KAGf,OAAO,oCACL,0BAAMC,SAAU3B,EAAM4B,KAAKC,KAAM5B,EAAUC,EAAUP,IACnD,kBAACmC,EAAA,EAAD,CACE7C,QAAQ,WACR8C,OAAO,SACPC,UAAQ,EACRC,WAAS,EACTC,GAAG,QACHC,MAAM,gBACNC,KAAK,QACLC,aAAa,QACbC,WAAS,EACTC,SAAU,SAAAC,GAAC,OAAIf,EAAYe,EAAEC,OAAOC,WAIxC,0BAAMf,SAAU3B,EAAM4B,KAAKC,KAAM5B,EAAUC,EAAUP,IACnD,kBAACmC,EAAA,EAAD,CACE7C,QAAQ,WACR8C,OAAO,SACPC,UAAQ,EACRC,WAAS,EACTG,KAAK,WACLD,MAAM,WACNQ,KAAK,WACLT,GAAG,WACHG,aAAa,mBACbE,SAAU,SAACC,GAAD,OAAOd,EAAYc,EAAEC,OAAOC,WAG1C,kBAAC1D,EAAA,EAAD,CAAYD,UAAU,SAASe,EAAK8C,YACpC,kBAACC,EAAA,EAAD,CACEF,KAAK,SACLV,WAAS,EACThD,QAAQ,YACRF,UAAU,SACV+D,QAAS9C,EAAM4B,KAAKC,KAAM5B,EAAUC,EAAUP,IALhD,WAYJ,OAAQ,yBAAKZ,UAAU,SACrB,kBAACW,EAAD,KACE,kBAACqD,EAAA,EAAD,CAAOhE,UAAU,iBACf,kBAACiE,EAAA,EAAD,CAAQjE,UAAU,UAChB,yBAAKA,UAAU,OAAOkE,IAAI,cAAcC,IAAI,UAE9C,kBAAClE,EAAA,EAAD,CAAYD,UAAU,SAASoE,UAAU,KAAKlE,QAAQ,MAAtD,WAGA,kBAACuC,EAAD,MACA,0BAAMzC,UAAU,OAAOqE,YAAU,GAC/B,kBAACC,EAAA,EAAD,CAAMC,WAAS,GACb,kBAACD,EAAA,EAAD,CAAME,MAAI,EAACC,IAAE,MAIjB,kBAAC1E,EAAD,S,0DErEO,SAAS2E,EAAgBC,EAAiBxE,GAAiB,IAAD,EAErCyE,IAAMpE,SAClCmE,EAAM,GACAA,EAAM,GACN,SAL2D,mBAE9DE,EAF8D,KAEpDC,EAFoD,KAarE,SAASC,EAAMnE,GACX,OAAO,oCACH+D,EAAMK,KAAI,SAACC,EAAGC,GACV,OAAO,kBAACC,EAAA,EAAD,CAAUnF,UAAY,OACzBoF,iBAAA,EACAC,IAAKH,EACLI,YACI,WACIR,EAAYG,KAGnBA,OAqBjB,OArCAM,qBAAU,WACW,UAAbV,GAAwBF,EAAM,IAC9BG,EAAYH,EAAM,MACvB,CAACA,IAkCG,CACHE,WACAW,OAjBJ,SAAgB5E,GACZ,IAAM6E,EAAMC,iBAAO,MACnB,OACI,yBAAK1F,UAAU,SAASyF,IAAKA,GACzB,yBAAKzF,UAAU,QAAO,yBAAKA,UAAU,QAAO,kBAACC,EAAA,EAAD,KAAc4E,EAAS,kBAAC,IAAD,QAC/D,6BACI,kBAACb,EAAA,EAAD,CAAOhE,UAAU,SACb,kBAAC+E,EAAD,YCvCb,SAASY,EAAQC,EAAapE,GAAqB,IAAD,EAErChB,mBAAgB,IAFqB,mBAEtDO,EAFsD,KAEhDC,EAFgD,OAG7BT,IAAxBI,EAHqD,EAGrDA,QAASD,EAH4C,EAG5CA,WAH4C,SAK9CmF,IAL8C,2EAK7D,sBAAAzE,EAAA,sDACIV,GAAW,GACX,IACIiB,MAAM,GAAD,OAAIiE,GAAOpE,GACXI,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MAAK,SAAAb,GAEIC,EADE,MAARD,EACcA,EACA,OAEjBoB,OAAM,SAACC,GACJC,QAAQC,IAAIF,GACZC,QAAQC,IAAI,8BACZC,YAAW,cAAW,KACtBsD,OAEV,MAAOC,GACL9E,EAAQ,IACRqB,QAAQD,MAAM0D,GAlBtB,4CAL6D,sBAmC7D,OARAP,qBAAU,WACNM,MACD,CAACD,IAEJL,qBAAU,WACN7E,GAAW,KACZ,CAACK,IAEG,CACHA,OACAC,UACA6E,YACAlF,W,OCtCO,SAASoF,IAAa,IAAD,ECLrB,WAAsB,IACzBhF,EAAS4E,EAAQ,iBAAjB5E,KADwB,EAEJP,mBAAS,IAFL,mBAEzBwF,EAFyB,KAEjBC,EAFiB,OAGHC,EAAUF,GAA/BR,EAHwB,EAGxBA,OAAQX,EAHgB,EAGhBA,SAMhB,OAJAU,qBAAU,WACNU,EASD,SAAsBlF,GAIzB,OAHuBA,EAAKiE,KAAI,SAAAvB,GAC5B,OAAOA,EAAE0C,eAXCC,CAAarF,MACxB,CAACA,IAEG,CACHyE,SACAX,YDJyBwB,GAArBb,EAFwB,EAExBA,OAAQX,EAFgB,EAEhBA,SAFgB,EAGZrE,mBAAS,WAHG,mBAGzB8F,EAHyB,KAGrBC,EAHqB,KA0BhC,OArBAhB,qBAAU,WACW,UAAbV,GAAsB0B,EAAM1B,KACjC,CAACA,IAmBG,CACHyB,KACAE,OAnBJ,WACI,OAEI,yBAAKxG,UAAU,UACX,kBAAC,IAAD,CAAQyG,SAAS,SACb,yBAAKzG,UAAU,QACX,yBAAKkE,IAAI,cAAcC,IAAI,SAC3B,kBAAC,IAAD,CAAYnE,UAAU,QAAtB,YAAkD,kBAACwF,EAAD,OAEtD,yBAAKxF,UAAU,SACX,kBAAC,IAAD,CAAMA,UAAU,OAAOI,GAAI,KAAK,kBAAC,IAAD,qB,oCElBjD,SAASsG,EAAS3F,GACrB,OAAQA,GAAQA,EAAK4F,OAGlB,SAASC,EAAU7F,EAAa8F,GACnC,OAAQH,EAAS3F,GAASA,EAAKiE,KAAI,SAAAvB,GAAO,OAAOA,EAAEoD,MAAU,CAAC,GAG3D,SAASC,EAAU/F,EAAa8F,GAEnC,OADaD,EAAU7F,EAAM8F,GACfE,QAAO,SAACC,EAAKC,GAAQ,OAAOD,EAAMC,KAe7C,SAASC,EAAcnG,GAAgC,IAAD,uBAAf8F,EAAe,iCAAfA,EAAe,kBACzD,IAAMM,EAAe1F,KAAK2F,MAAM3F,KAAKC,UAAUX,IAC/C,OAAQ2F,EAASS,GAAUA,EAAMnC,KAAI,SAAAvB,GAA6C,OAAtCoD,EAAI7B,KAAI,SAAAqC,GAAO,cAAc5D,EAAE4D,MAAc5D,KAAO,GAG7F,SAAS6D,EAAQvG,GAAiC,IAAD,uBAAhBwG,EAAgB,iCAAhBA,EAAgB,kBACpD,OAAOb,EAAS3F,GACVA,EAAKiE,KAAI,SAAAvB,GAAO,IAAI+D,EAAK,GAAgE,OAA5DD,EAAKvC,KAAI,SAAAqC,GAAO,OAAOI,OAAOC,OAAOF,EAAdC,OAAA,IAAAA,CAAA,GAAqBJ,EAAI5D,EAAE4D,QAAiBG,KAChG,GAGH,SAASG,EAAY5G,EAAa8F,GAAoC,IAAD,uBAAnBe,EAAmB,iCAAnBA,EAAmB,kBACxE,IAAIC,EAASC,EAAgB/G,EAAM8F,GAC/BkB,EAAQF,EAAO7C,KAAI,SAAAvB,GAAO,OAAOuE,EAAqBjH,EAAM8F,EAAKpD,MAC/DwE,EAAkB,SAACC,EAAWC,GAEhC,OADAV,OAAOW,KAAKF,GAAMG,SAAQ,SAAAC,GAAOJ,EAAKI,GAAyB,kBAAZJ,EAAKI,IAAmBA,IAAMzB,GAAQe,EAAQW,SAASD,GAA0BJ,EAAKI,GAAzBJ,EAAKI,GAAKH,EAAKG,MACxHJ,GAGPM,GADJT,EAAQtG,KAAK2F,MAAM3F,KAAKC,UAAUqG,KACd/C,KAAI,SAAA5D,GAAO,OAAOA,EAAE2F,OAAOkB,MAC/C,OAAOO,EAQJ,SAASV,EAAgB/G,EAAa8F,GACzC,IAAI4B,EAAa,GACjB,GAAI/B,EAAS3F,GAAO,CAChB,IAAI2H,EAAuB,IAAIC,IAC/B5H,EAAKsH,SAAQ,SAAA5E,GAAC,OAAIiF,EAAWE,IAAInF,EAAEoD,OACnC6B,EAAWL,SAAQ,SAAAQ,GAAC,OAAIJ,EAAIvG,KAAK2G,MAErC,OAAOJ,EAGJ,SAAST,EAAqBjH,EAAasE,EAAa1B,GAC3D,OAAO5C,EAAK+H,QAAO,SAAArF,GAAC,OAChBA,EAAE4B,KAAS1B,K,uCC3EZ,SAASoF,IACZ,IAAIC,EAAQ,IAAI3I,KAEhB,OADW2I,EAAM1I,cAAgB,KAAO,KAAO0I,EAAMC,WAAa,IAAIC,OAAO,GAAK,KAAO,IAAOF,EAAMG,WAAYD,OAAO,GAItH,SAASE,EAAWC,GACvB,IAAIC,EAAI,IAAIjJ,KAAKgJ,GAEjB,OADgBC,EAAEhJ,cAAgB,KAAO,KAAOgJ,EAAEL,WAAa,IAAIC,OAAO,GAAK,KAAO,IAAOI,EAAEH,WAAYD,OAAO,GCAvG,SAASK,IAAW,IAAD,EAEN/I,mBAAS,CAAEgJ,MAAOT,IAAcU,IAAKV,MAF/B,mBAEvBM,EAFuB,KAEjBK,EAFiB,KAsB9B,SAASC,EAAU/I,GACf,OAAO,yBAAKZ,UAAU,aAAY,2BAAO4D,KAAK,OAC1CX,UAAQ,EACR2G,aAAchJ,EAAMgJ,aACpBpG,SAAU5C,EAAMiJ,eAGhB,kBAAC,IAAD,CAAW7J,UAAU,UAI7B,MAAO,CACH8J,UAAWT,EAAKG,MAChBO,QAASV,EAAKI,IACdO,MAhCJ,SAAepJ,GACX,OAAO,yBAAKZ,UAAU,SAClB,kBAAC2J,EAAD,CAAWE,aAAc,SAACpG,GAAD,OAAOiG,EAAQ,2BACjCL,GADgC,IAC1BG,MAAOJ,EAAW3F,EAAEwG,cAActG,OAAQ8F,IAAKJ,EAAKI,QAC7DG,aAAcP,EAAKG,QACvB,kCACA,kBAACG,EAAD,CAAWE,aAAc,SAACpG,GAAD,OAAOiG,EAAQ,2BACjCL,GADgC,IAC1BG,MAAOH,EAAKG,MAAOC,IAAKL,EAAW3F,EAAEwG,cAActG,WAC5DiG,aAAcP,EAAKI,S,oBCfpB,SAASS,EAAUtJ,GAE9B,OAAO,yBAAKZ,UAAU,aAAY,kBAAC,IAAD,KAAUY,EAAMC,W,wECsG/C,SAAS6F,GAAS3F,GACrB,OAAQA,GAAQA,EAAK4F,OC7DlB,SAASwD,GAAavJ,GACzB,OAAO0I,EAAW1I,EAAMG,MAClB,qCACA,yBAAKf,UAAU,gBAAe,kBAACC,EAAA,EAAD,e,wBC1CzB,SAASmK,GAAkBxJ,GAAkC,IAClEyJ,EAAkCzJ,EAAlCyJ,MAAOC,EAA2B1J,EAA3B0J,QAASC,EAAkB3J,EAAlB2J,cADiD,EAKvC3F,IAAMpE,SAAuB,IALU,mBAKlEgK,EALkE,KAKvDC,EALuD,OAMjD7F,IAAMpE,SAAkB,IANyB,mBAMlEO,EANkE,KAM5DC,EAN4D,KAuBzE,OAfA4D,IAAMW,WAAU,WACV+D,EAAW1I,EAAMG,OAASA,IAASH,EAAMG,MAC3C0J,EAAahD,OAAOW,KAAKxH,EAAMG,KAAK,IAAIiE,KAAI,SAACvB,EAAGyB,GAE9C,MAAO,CACL/B,GAAI+B,EAAQ,EAAI,GAChBwF,QAHsC,iBAApB9J,EAAMG,KAAK,GAAG0C,GAIhCkH,gBAAgB,EAChBvH,MAAOK,OAGXzC,EAAQJ,EAAMG,OACT0J,EAAa,MACnB,CAAC7J,EAAMG,OAGN,kBAAC6J,GAAA,EAAD,KACE,kBAACC,GAAA,EAAD,KACGL,EAAUxF,KAAI,SAAC8F,GAAD,OACb,kBAACC,GAAA,EAAD,CACE1F,IAAKyF,EAAS3H,GACd6H,MAAO,OACPC,QAASH,EAASH,eAAiB,OAAS,UAC5CO,cAAeZ,IAAYQ,EAAS3H,IAAKkH,EACzCtG,SA9BeoH,EA8BYL,EAAS3H,GA9BA,SAACiI,GAC/Cb,EAAca,EAAOD,MA+BX,kBAACE,GAAA,EAAD,CACEC,OAAQhB,IAAYQ,EAAS3H,GAC7BoI,UAAWjB,IAAYQ,EAAS3H,GAAKkH,EAAsC,OAE1ES,EAAS1H,QApCE,IAAC+H,OCO7B,IAAM1L,GAAYC,aAAW,SAACC,GAAD,MAAY,CACvC6L,KAAM,CACJ1L,gBAAiB,YAIN,SAAS2L,GAAc7K,GAEpC,IAAM8K,EAAUjM,KAFiD,EAIvBmF,IAAMpE,UAAS,GAJQ,mBAI1DmL,EAJ0D,KAI3CC,EAJ2C,OAKzChH,IAAMpE,SAAkB,IALiB,mBAK1DO,EAL0D,KAKpDC,EALoD,OAMvC4D,IAAMpE,SAA6C,OANZ,mBAM1D6J,EAN0D,KAMnDwB,EANmD,OAOnCjH,IAAMpE,SAAS,YAPoB,mBAO1D8J,EAP0D,KAOjDwB,EAPiD,OASjClH,IAAMpE,SAAS,GATkB,mBAS1DuL,EAT0D,KAShDC,EATgD,OAUzCpH,IAAMpE,SAAkB,IAViB,mBAU1DyL,EAV0D,KAUpDC,EAVoD,OAW3BtH,IAAMpE,SAAS,GAXY,mBAW1D2L,EAX0D,KAW7CC,EAX6C,KAiCjE,SAASC,IACP,OAAOV,EACH,kBAAC,KAAD,CAAuB5H,QAAS,WAChCqI,EAAeD,EAAc,MAE7B,qCA2BN,OAxBAvH,IAAMW,WAAU,WACV+G,GAAW1L,EAAMG,OACnBC,EAAQJ,EAAMG,MACdmL,EAAQtL,EAAMG,KAAKiE,KAAI,SAAAvB,GACrB,OAAOgE,OAAO8E,OAAO9I,GAAGuB,KAAI,SAACvB,EAAGyB,GAE9B,MADiB,kBAANzB,IAAgBA,GAAO+I,KAAKC,MAAU,IAAJhJ,GAAW,KACjD,kBAACsH,GAAA,EAAD,CAAW1F,IAAKH,EAAO8F,MAAM,QAAQvH,UAGhDmI,GAAiB,KAEjB5K,EAAQ,IACRkL,EAAQ,IACRF,EAAY,GACZI,EAAe,MAEhB,CAACxL,EAAMG,OAEV6D,IAAMW,WAAU,WACdyG,EAzDoB,IAyDQG,GACxBJ,EAAWnL,EAAMG,KAAK4F,QAAQiF,GAAiB,GAC/ChL,EAAM8L,gBAAkBP,EAAc,GAAGvL,EAAM8L,mBAClD,CAACP,IAGF,yBAAKnM,UAAU,SAEb,kBAAC2M,GAAA,EAAD,CACEC,cAAY,EACZC,kBAAgB,aAChBC,KAAwB,SACxBC,aAAW,kBAGX,kBAAC3C,GAAD,CAAmBpK,UAAW0L,EAAQF,KACpCnB,MAAOA,EACPC,QAASA,EACTC,cAjEkB,SAACa,EAAyBD,GAClD,IAAM6B,EAAkB,QAAV3C,EAGd,GAFAwB,EAASmB,EAAQ,OAAS,OAC1BlB,EAAWX,GACPvK,EAAMqM,aACRrM,EAAMqM,aAAa,CAAEC,GAAI9B,EAAMnB,cAAckD,YAAa9C,MAAO2C,EAAQ,OAAS,YAE/E,CACH,IACI5J,EADSgI,EAAMnB,cAAcmD,WAAYA,WAC1BrM,KACfsM,EAAUtM,EAAKuM,KFXlB,SAAwBnC,EAAkBd,GAC7C,IAAIkD,EAAiB,QAAVlD,GAAoB,EAAI,EACnC,OAAO,SAAUjJ,EAAUoM,GACvB,OAAIpM,EAAE+J,GAAYqC,EAAErC,GACToC,EACFnM,EAAE+J,GAAYqC,EAAErC,IACboC,EAEL,GEGeE,CAAiBrK,EAAOiH,IAChD6B,EAAQmB,EAAOrI,KAAI,SAACvB,GAClB,OAAOgE,OAAO8E,OAAO9I,GAAGuB,KAAI,SAACvB,EAAGyB,GAE9B,MADiB,kBAANzB,GAAkBA,EAAI,IAAM,IAAGA,EAAIA,EAAEiK,QAAQ,IACjD,kBAAC3C,GAAA,EAAD,CAAW1F,IAAKH,EAAO8F,MAAM,QAAQvH,YAoD5CsI,SAAUE,EAAKtF,OACf5F,KAAMA,IAGR,kBAAC4M,GAAA,EAAD,CAAW3N,UAAU,aAClBiM,EACEjH,KAAI,SAAC4I,EAAK1I,GACT,OACE,kBAAC2F,GAAA,EAAD,CACExF,IAAKH,EACL2I,OAAK,EACLC,KAAK,WACLC,UAAW,GAEV9B,EAAK/G,SAOlB,kBAACmH,EAAD,MACA,kBAAC,GAAD,CAAgBtL,KAAMH,EAAMG,Q,6eChHnB,SAASiN,GAAepN,GAAqB,IAAD,EAErBJ,mBAAS,IAFY,mBAEhDyN,EAFgD,KAErCC,EAFqC,OAOnD3E,IAHAO,EAJmD,EAInDA,UACAC,EALmD,EAKnDA,QACAC,EANmD,EAMnDA,MANmD,EAWnDrE,EAAQ,uBAAD,OAAwB/E,EAAM0F,GAA9B,YAAoCwD,EAApC,YAAiDC,IAFxDhJ,EATmD,EASnDA,KACAJ,EAVmD,EAUnDA,QAVmD,EAenD+D,EAAgB4E,EAAkBvI,EAAM,YAFxC8D,EAbmD,EAanDA,SACAW,EAdmD,EAcnDA,OAGJ,SAAS2I,EAAgBpN,EAAeqN,GAIpC,ORuBD,SAAerN,EAAa8F,GAE/B,OADaiB,EAAgB/G,EAAM8F,GACrB7B,KAAI,SAAAvB,GAAO,OAAOuE,EAAqBjH,EAAM8F,EAAKpD,MQzBrD6F,CR2CR,SAAcvI,EAAaoK,EAAed,GAC7C,OAAOtJ,EAAKuM,KAGT,SAAwBnC,EAAekD,GAC1C,IAAIhE,EAA4B,QAAXgE,GAAqB,EAAI,EAC9C,OAAO,SAAUjN,EAAQoM,GACrB,OAAIpM,EAAE+J,GAAYqC,EAAErC,GACTd,EACFjJ,EAAE+J,GAAYqC,EAAErC,IACbd,EACL,GAVMiE,CAAenD,EAAUd,IQ7ClBf,CADHA,EADGA,EAAUvI,EAAM,UAAW,UAAW,QAAS,MAAO,SAAU,WAAY,WAAY,WAAY,WACjE,UAAWqN,GAC3B,UAAW,QACpB,WAGlC,SAASG,IACL,IAAIC,EAAW,WAUf,OAAQ,oCACJP,EAAUjJ,KAAI,SAACvB,EAAGyB,GACd,OAAO,yBAAMG,IAAKH,IAXPmE,EAYI5F,EAAE,GAAF,YAXN+K,EACF,sCAEPA,EAAWnF,EACJ,kBAACoF,GAAD,KAAW,kBAACxO,EAAA,EAAD,KAAaoJ,KAQ3B,kBAACqF,GAAD,KACI,kBAACzO,EAAA,EAAD,KAAa,WAAawD,EAAE,GAAF,SAC1B,kBAACxD,EAAA,EAAD,KAAawD,EAAE,GAAF,WAEjB,kBAAC,GAAD,CAAO1C,KAAMuI,EAAU7F,EAAG,UAAW,MAAO,YAjBxD,IAAmB4F,MA2BvB,OAJA9D,qBAAU,WACN2I,EAAaC,EAAgBpN,EAAM8D,MACpC,CAAC9D,EAAM8D,IAGN,yBAAK7E,UAAU,UACX,kBAACW,EAAD,KACI,kBAACqD,EAAA,EAAD,CAAOhE,UAAU,mBACb,kBAACkK,EAAD,KAAY,kBAACjK,EAAA,EAAD,CAAYD,UAAU,OAAOE,QAAQ,MAAMU,EAAMS,QAAoB,kBAAC2I,EAAD,OACjF,yBAAKhK,UAAU,aAAamD,GAAG,kBAC3B,kBAACqC,EAAD,MACA,kBAAC+I,EAAD,UAQxB,IAAME,GAAYE,IAAOC,IAAV,MAUTF,GAAaC,IAAOC,IAAV,MC/ED,SAASC,GAAYjO,GAAqB,IAAD,EAMhD2I,IAHAO,EAHgD,EAGhDA,UACAC,EAJgD,EAIhDA,QACAC,EALgD,EAKhDA,MALgD,EAWhDrE,EAAQ,eAAD,OAAgB/E,EAAM0F,GAAtB,YAA4BwD,EAA5B,YAAyCC,IAFhDhJ,EATgD,EAShDA,KACAJ,EAVgD,EAUhDA,QAIJ,OACI,yBAAKX,UAAU,UACX,kBAACW,EAAD,KACI,kBAACqD,EAAA,EAAD,CAAOhE,UAAU,mBACb,kBAACkK,EAAD,KAAY,kBAACjK,EAAA,EAAD,CAAYD,UAAU,OAAOE,QAAQ,MAAMU,EAAMS,QAAoB,kBAAC2I,EAAD,OACjF,yBAAKhK,UAAU,cACX,kBAAC,GAAD,CAAOe,KAAMA,QCvBtB,SAAS+N,GAAclO,GAAqB,IAAD,EAMlD2I,IAHAO,EAHkD,EAGlDA,UACAC,EAJkD,EAIlDA,QACAC,EALkD,EAKlDA,MALkD,EAWlDrE,EAAQ,sBAAD,OAAuB/E,EAAM0F,GAA7B,YAAmCwD,EAAnC,YAAgDC,IAFvDhJ,EATkD,EASlDA,KACAJ,EAVkD,EAUlDA,QAGJ,OACI,yBAAKX,UAAU,iBACX,kBAACW,EAAD,KACI,kBAACqD,EAAA,EAAD,CAAOhE,UAAU,mBACb,kBAACkK,EAAD,KAAY,kBAACjK,EAAA,EAAD,CAAYD,UAAU,OAAOE,QAAQ,MAAMU,EAAMS,QAAoB,kBAAC2I,EAAD,OACjF,yBAAKhK,UAAU,cACX,kBAAC,GAAD,CAAOe,KAAMA,QCnBtB,SAASgO,GAAOnO,GAAqB,IAAD,EAM3C2I,IAHAO,EAH2C,EAG3CA,UACAC,EAJ2C,EAI3CA,QACAC,EAL2C,EAK3CA,MAL2C,EAW3CrE,EAAQ,eAAD,OAAgB/E,EAAM0F,GAAtB,YAA4BwD,EAA5B,YAAyCC,IAFhDhJ,EAT2C,EAS3CA,KACAJ,EAV2C,EAU3CA,QAGJ,OACI,yBAAKX,UAAU,UACX,kBAACW,EAAD,KACI,kBAACqD,EAAA,EAAD,CAAOhE,UAAU,mBACb,kBAACkK,EAAD,KAAY,kBAACjK,EAAA,EAAD,CAAYD,UAAU,OAAOE,QAAQ,MAAMU,EAAMS,QAAoB,kBAAC2I,EAAD,OACjF,yBAAKhK,UAAU,cACX,kBAAC,GAAD,CAAOe,KAAMA,Q,iDCxBtB,SAASiO,GAAOpO,GAC3B,GAAI0I,EAAW1I,EAAMqO,UAAUC,UAAW,CACtC,IAAIC,EAAevO,EAAMqO,UAAUC,SAAS,GAAGpP,gBAC3CsP,EAASxO,EAAMqO,UAAUG,OACzBC,EAAcF,EAAanK,KAAI,SAACqC,EAAWhC,GAC3C,OAAO,yBAAKA,IAAKA,IAAOrF,UAAU,cAC9B,0BAAMqF,IAAKA,IAAOrF,UAAU,MAAMsP,MAAO,CAAExP,gBAAiBuH,KAC5D,2BAAOhC,IAAKA,IAAOrF,UAAU,SAAUoP,EAAOD,EAAaI,QAAQlI,SAG3E,OAAO,yBAAKrH,UAAU,UAClB,4BAAKqP,GACL,yBAAKrP,UAAU,eAGlB,OAAO,8BCnBT,SAASwP,GAASC,EAAeC,GACtC,OAAQC,OAAOC,WAAa,KAAQH,EAAQC,EAGvC,SAASG,GAAM5K,GACpB,GAAiB,kBAANA,EACT,OAAOA,EAEP,IACI6K,EADK,YAAO7K,GACID,KAAI,SAACqC,GAAgB,OAAOA,EAAE0I,WAAW,MAC7D,OAAOC,SAASF,EAAQG,KAAK,IAAK,IAI/B,SAASC,GAAOC,GACrB,IAAID,EAAS,CACX,mBACA,yBACA,uBACA,uBACA,qBACA,uBACA,qBACA,qBACA,yBACA,uBACA,uBACA,qBACA,uBACA,qBACA,qBACA,yBACA,yBACA,yBACA,yBACA,yBACA,yBACA,uBACA,uBACA,uBACA,sBACA,yBACA,wBACA,wBACA,uBACA,wBACA,uBACA,uBACA,wBACA,wBACA,uBACA,wBACA,uBACA,uBACA,yBACA,yBACA,yBACA,yBACA,yBACA,yBACA,wBACA,wBACA,wBACA,qBACA,qBACA,oBACA,qBACA,oBACA,oBACA,uBACA,uBACA,qBACA,uBACA,qBACA,qBACA,sBACA,sBACA,sBACA,sBACA,yBACA,0BAEF,OAAOC,EAAOnL,KAAI,SAAAoL,GAAO,OAAOF,EAAOA,EAAOvJ,OAAUyJ,EAAIF,EAAOvJ,OAAU,MC1EhE,SAAS0J,GAASzP,GAC/B,IAAI4H,EAAUc,EAAc1I,EAAMG,KAAMH,EAAM0P,SAC1CC,EAAcjH,EAAYd,EAAS5H,EAAM2L,QACzC6C,EAAmB9F,EAAYd,EAAS5H,EAAM0P,SAC9CE,EAAqBlH,EAAW1I,EAAMG,MAAQqO,EAAOpK,KAAI,SAAAC,GAAO,OAAOwI,GAAQxI,MAAQ,GACvFgK,ECCC,SAAyBsB,EAAanB,EAAkBoB,GAC7D,MAAO,CACLpB,OAAQA,EACRF,SAAU,CACR,CACE9L,MAAO,iBACPrC,KAAMwP,EACNzQ,gBAAiBoQ,GAAOM,MDRD/C,CAAkB8C,EAAGnB,EAAQoB,GACtDC,EAAQF,EAAExJ,QAAO,SAACC,EAAKC,GAAQ,OAAOD,EAAMC,KAC5CyJ,EAAcjD,GAAW,GAAI,IACjC,OAAInE,EAAW2F,EAAUC,UAErB,yBAAKlP,UAAU,YACb,yBAAKA,UAAU,SACb,kBAAC,KAAD,CACE2Q,OAAQ,EAAGC,MAAO,EAClB7P,KAAMkO,EACN4B,QACE,CACEC,OAAQ,GAER1B,OAAQ,CAAE2B,SAAS,GACnBC,OAAQ,CACND,SAAS,EACTtK,SAAU,MACVuE,MAAO,SACPoE,OAAQ,CACN6B,eAAe,EACfC,SAAU,IAEZhO,WAAW,GAEbiO,SAAU,CACRC,aAAcV,EACdW,KAAM,QACNC,UAAW,CACTlO,MAAO,SAACmO,EAAkBxQ,GACxB,IAAIqC,EAAQrC,EAAKqO,OAAOmC,EAAYrM,OACpC,OAAO9B,GAEToO,WAAY,SAACD,EAAkBxQ,GAC7B,IAAI4C,EAAQ5C,EAAKmO,SAASqC,EAAYE,cAAc1Q,KAAKwQ,EAAYrM,OACjEwM,EAA2B3Q,EAAKmO,SAASqC,EAAYE,cAAc1Q,KAAKwQ,EAAYrM,OAASuL,EAAQ,IAEzG,OADAiB,EAAUA,EAAQhE,QAAQ,GACjBiE,OAAOC,UAAUjO,GAA4DA,EAAQ,KAAO+N,EAAU,KAA3E,QAAO/N,EAAM+J,QAAQ,GAAK,KAAOgE,EAAU,OAGnFR,SAAU,QAMpB,kBAAClC,GAAD,CAAQC,UAAWA,KAIvB,yBAAKjP,UAAU,SACb,kBAAC,KAAD,CACEe,KAAMkO,KE/DC,SAASD,GAAOpO,GAC3B,IAAIyE,EAAM,EACN8J,EAAevO,EAAMqO,UAAUC,SAASlK,KAAI,SAAAoL,GAAO,OAAOA,EAAEtQ,mBAC5DsP,EAASxO,EAAMqO,UAAUC,SAASlK,KAAI,SAAAoL,GAAO,OAAOA,EAAEhN,SACtDiM,EAAcF,EAAanK,KAAI,SAAAqC,GAC/B,OAAO,yBAAKhC,IAAKA,IAAOrF,UAAU,cAC9B,0BAAMqF,IAAKA,IAAOrF,UAAU,MAAMsP,MAAO,CAAExP,gBAAiBuH,KAC5D,2BAAOhC,IAAKA,IAAOrF,UAAU,SAAUoP,EAAOD,EAAaI,QAAQlI,SAG3E,OAAO,yBAAKrH,UAAU,UAClB,4BAAKqP,GACL,yBAAKrP,UAAU,eCPR,SAAS6R,GAAgBjR,GAA6F,IAE7HG,EAA6BH,EAA7BG,KAAMwP,EAAuB3P,EAAvB2P,EAAGD,EAAoB1P,EAApB0P,QAAS/D,EAAW3L,EAAX2L,OACpB0C,ECiBC,SAAyBlO,EAAawP,EAAaD,EAAiB/D,GAEvE,IAAIuF,EAAuBhK,EAAgB/G,EAAMuP,GAE7CyB,EAAiB7B,GADI4B,EAAW9M,KAAI,SAAAC,GAAO,OAAO4K,GAAM5K,OAExD+M,EAAWF,EAAW9M,KAAI,SAAC3B,EAAM6B,GACjC,IAAI/E,EAAgB4R,EAAK7M,GACrB+M,EAAsB1B,EAAEvL,KAAI,SAACkN,GAC7B,IAAIC,EAAgBnK,EAAqBjH,EAAM,WAAYmR,GACvDE,EAAsBpK,EAAqBmK,EAAQ7B,EAASwB,EAAW5M,IACvEmN,EAAsBzL,EAAUwL,EAAc7F,GAClD,OAAO7F,EAAS0L,GAAgBC,EAAUtL,QAAO,SAACC,EAAKC,GAAN,OAAYD,EAAMC,KAAK,KAE5E,MAAO,CACH7D,MAAO0O,EAAWA,EAAWvC,QAAQlM,IACrCtC,KAAMkR,EACNnS,gBAAiBK,EACjBmS,mBAAoBpN,MAG5B,MAAO,CACHkK,OAAQmB,EACRrB,SAAU8C,GDvCWO,CAAgBxR,EAAMwP,EAAGD,EAAS/D,GACzDkE,EAAQnH,EAAYvI,EAAMwL,GAC1BiG,ECAKhD,GAAS,GAAI,IDEtB,YAA2BiD,IAAvBxD,EAAUC,SAEV,yBAAKlP,UAAU,YACb,yBAAKA,UAAU,SACb,kBAAC,KAAD,CACEe,KAAMkO,EACN4B,QACE,CACE6B,OAAQ,CACNC,MAAO,CAAC,CACNC,SAAS,EACTC,MACA,CACE3B,SAAUsB,KAIdM,MAAO,CAAC,CACNF,SAAS,EACTC,MACA,CACE3B,SAAUsB,MAIhBpD,OAAQ,CACN2B,SAAS,EACTG,SAAU,IAEZF,OAAQ,CACND,SAAS,EACTtK,SAAU,QACVuE,MAAO,SACPoE,OAAQ,CACN6B,eAAe,GAEjB/N,WAAW,GAEbiO,SAAU,CACRC,aAAc5B,GAAS,GAAI,IAC3B6B,KAAM,SACNC,UAAW,CACTlO,MAAO,SAACmO,EAAkBxQ,GACxB,IAAIyD,EAAOzD,EAAKmO,SAASqC,EAAYE,cACjCrO,EAAQoB,EAAKpB,MACjB,OAAIoB,EAAKzD,KAAKwQ,EAAYrM,OAAS,EAC1B9B,EACG,IAEdoO,WAAY,SAACD,EAAkBxQ,GAC7B,IAAIyD,EAAOzD,EAAKmO,SAASqC,EAAYE,cACjCsB,EAAQvO,EAAKzD,KAAKwQ,EAAYrM,OAE9B8N,GADkBxO,EAAKzD,KAAKwQ,EAAYrM,OAASuL,EAAQ,KACjC/C,QAAQ,GACpC,OAAIlJ,EAAKzD,KAAKwQ,EAAYrM,OAAS,EACxByM,OAAOC,UAAUmB,GAAkEA,EAAQ,KAAOC,EAAgB,KAAvF,QAAOD,EAAMrF,QAAQ,GAAK,KAAOsF,EAAgB,KAC3E,UAQ1B,kBAAC,GAAD,CAAQ/D,UAAWA,KAIvB,yBAAKjP,UAAU,SACb,kBAAC,KAAD,CACEe,KAAMkO,K,mDE7EC,SAASgE,GAAarS,GAEjC,OACI,yBAAKZ,UAAW,gBACZ,kBAACkT,GAAA,EAAD,CAAa9O,UAAU,YACnB,kBAAC+O,GAAA,EAAD,CAAYhT,MAAM,UAAU4M,aAAW,SAAS1J,KAAK,UAAUM,MAAO/C,EAAM+C,MAAOH,SAAU5C,EAAMiJ,cAC/F,kBAACuJ,GAAA,EAAD,CAAkBjT,MAAM,UAAUwD,MAAM,QAAQ0P,QAAS,kBAACC,GAAA,EAAD,MAAWlQ,MAAM,UAC1E,kBAACgQ,GAAA,EAAD,CAAkBjT,MAAM,UAAUwD,MAAM,SAAS0P,QAAS,kBAACC,GAAA,EAAD,MAAWlQ,MAAM,WAC3E,kBAACgQ,GAAA,EAAD,CAAkBjT,MAAM,UAAUwD,MAAM,MAAM0P,QAAS,kBAACC,GAAA,EAAD,MAAWlQ,MAAM,gBCMrF,SAASmQ,GAAe3S,GAAqB,IAAD,EAM7C2I,IAHFO,EAH+C,EAG/CA,UACAC,EAJ+C,EAI/CA,QACAC,EAL+C,EAK/CA,MAL+C,EAQpB9D,EAAU,CAAC,WAAY,UAAW,YAAa,UAAW,YAA/EV,EARyC,EAQzCA,OAAQX,EARiC,EAQjCA,SARiC,EAUvBc,EAAQ,uBAAD,OAAwB/E,EAAM0F,GAA9B,YAAoCwD,EAApC,YAAiDC,IAA1EhJ,EAVyC,EAUzCA,KAAMJ,EAVmC,EAUnCA,QAVmC,EAYnBH,mBAAiB,YAZE,mBAY1C8P,EAZ0C,KAYjCkD,EAZiC,OAavBhT,mBAAiB,GAbM,mBAa1CiQ,EAb0C,KAanCgD,EAbmC,OAcbjT,mBAAiB,SAdJ,mBAc1CkT,EAd0C,KAc9BC,EAd8B,OAefnT,mBAAgB,IAfD,mBAe1CyN,EAf0C,KAe/BC,EAf+B,OAgBvB1N,mBAAS,OAhBc,mBAgB1CoT,EAhB0C,KAgBnCC,EAhBmC,KAkB/CC,EC9BW,SAAuBC,GAA4D,IAAD,cAE9EA,EAF8E,GAEtF3S,EAFsF,KAEnFoM,EAFmF,OAGrEhN,mBAAS,KAH4D,mBAGtFwT,EAHsF,KAGhFC,EAHgF,KAK7F,SAASC,IACQ,MAATF,GACAC,EAAQ,KACR7S,EAAE+S,aAGFF,EAAQ,KACRzG,EAAE2G,YAQV,MAAO,CACHL,WALJ,WACI,OAAO,4BAAQ9T,UAAY,aAAa+D,QAASmQ,GAAkB,MAATF,EAAe5S,EAAE4S,KAAOxG,EAAEwG,QDctFI,CACF,CACE,CAAEJ,KAAM,kBAACK,GAAA,EAAD,MAAkBF,SAAUN,EAAShR,KAAKC,KAAM,QACxD,CAAEkR,KAAM,kBAAC3D,GAAA,EAAD,MAAkB8D,SAAUN,EAAShR,KAAKC,KAAM,UAJ1DgR,WAiBF,SAASQ,IACP,OACE,yBAAKtU,UAAU,SACb,kBAACwF,EAAD,MACA,kBAACyN,GAAD,CACEpJ,aAAc,SAACuB,GAAD,OAAgDuI,EAAcvI,EAAM1H,OAAOC,QACzFA,MAAO+P,IACT,sCAA4B,QAAfA,EAAwBjD,EAAQ,OAAMA,EAAM/C,QAAQ,KAIvE,SAAS6G,EAAS3T,GAChB,IAAI4T,EAAYC,MAAMC,KAAKD,MAAM,IAAIrM,QAAQpD,KAAI,SAAA2P,GAAS,OAAQ,IAAMA,EAAM,OAAOzL,OAAO,MAC5F,MAAuB,QAAhBtI,EAAMgT,MAAkB,kBAAC,GAAD,CAAU7S,KAAMA,EAAMuP,QAASA,EAAS/D,OAAQmH,IAC3E,kBAAC7B,GAAD,CAAiB9Q,KAAMA,EAAMwP,EAAGiE,EAAWlE,QAASA,EAAS/D,OAAQmH,IAG3E,OA1BAnO,qBAAU,WACR2I,EE7CG,SAAyBnN,EAAeuP,GAC3C,IAAIsE,EAAStL,EAAcvI,EAAMuP,EAAS,KAAM,cAChD,OAAQA,GACJ,IAAK,YAAa,OAAOhH,EAAUsL,EAAQ,YAAa,QAAS,OAAQ,WAAY,SAAU,SAAU,OACzG,IAAK,UAAW,OAAOtL,EAAUsL,EAAQ,UAAW,QAAS,OAAQ,WAAY,SAAU,SAAU,OACrG,IAAK,UAAW,OAAOtL,EAAUsL,EAAQ,UAAW,KAAM,WAAY,YAAa,QAAS,OAAQ,WAAY,SAAU,SAAU,OACpI,IAAK,WAAY,OAAOtL,EAAUsL,EAAQ,WAAY,QAAS,OAAQ,WAAY,SAAU,SAAU,OACvG,IAAK,UAAW,OAAOtL,EAAUsL,EAAQ,UAAW,UAAW,WAAY,WAAY,QAAS,OAAQ,WAAY,aAAc,SAAU,SAAU,OACtJ,QAAS,OAAOtL,EAAUsL,EAAQ,QAAS,OAAQ,WAAY,SAAU,SAAU,QFqC1EzG,CAAgBpN,EAAMuP,IACnCmD,EAASnK,EAAYvI,EAAM2S,MAC1B,CAACpD,EAASoD,EAAY3S,IAEzBwE,qBAAU,WACRiO,EAAW3O,KACV,CAACA,IAoBF,yBAAK7E,UAAU,kBACb,kBAACW,EAAD,KACE,kBAACqD,EAAA,EAAD,CAAOhE,UAAU,mBACf,kBAACkK,EAAD,KACE,yBAAKlK,UAAU,QACb,kBAACC,EAAA,EAAD,CAAYD,UAAU,OAAOE,QAAQ,MAArC,IAA4CU,EAAMS,QAClD,kBAAC2I,EAAD,OAGF,yBAAKhK,UAAU,SACb,kBAAC8T,EAAD,QAGJ,yBAAK9T,UAAU,cACb,oCAAE,kBAACsU,EAAD,MAAS,kBAACC,EAAD,CAAUX,MAAOA,KAC5B,kBAAC,GAAD,CAAO7S,KAAMkN,QGhFV,SAAS4G,GAAWjU,GAAqB,IAAD,EAM/C2I,IAHAO,EAH+C,EAG/CA,UACAC,EAJ+C,EAI/CA,QACAC,EAL+C,EAK/CA,MAL+C,EAW/CrE,EAAQ,mBAAD,OAAoB/E,EAAM0F,GAA1B,YAAgCwD,EAAhC,YAA6CC,IAFpDhJ,EAT+C,EAS/CA,KACAJ,EAV+C,EAU/CA,QAGJ,OACI,yBAAKX,UAAU,UACX,kBAACW,EAAD,KACI,kBAACqD,EAAA,EAAD,CAAOhE,UAAU,mBACb,kBAACkK,EAAD,KAAY,kBAACjK,EAAA,EAAD,CAAYD,UAAU,OAAOE,QAAQ,MAAMU,EAAMS,QAAoB,kBAAC2I,EAAD,OACjF,yBAAKhK,UAAU,cACX,kBAAC,GAAD,CAAOe,KAAMA,QCrBtB,SAAS+T,GAAcC,EAAeC,GAAwB,IAAD,EAChDxU,mBAAS,IADuC,mBACjEO,EADiE,KAC3DC,EAD2D,OAElCR,mBAAS,GAFyB,mBAEjE2L,EAFiE,KAEpDC,EAFoD,OAGxC7L,IAAxBI,EAHgE,EAGhEA,QAASD,EAHuD,EAGvDA,WAHuD,SAKzDmF,IALyD,2EAKxE,sBAAAzE,EAAA,sDACIV,GAAW,GACX0L,EAAe,GACfzK,MAAM,GAAD,OAAIoT,EAAJ,YAAaC,EAAb,YAA8B7I,IAC9BvK,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MAAK,SAAAqK,GAAI,OAAIjL,EAAQiL,MACrB9J,OAAM,SAAAC,GACHC,QAAQD,MAAMA,GACdG,WAAW,KACXsD,OATZ,4CALwE,+BAkBzDoP,IAlByD,2EAkBxE,sBAAA7T,EAAA,sDACIV,GAAW,GACXiB,MAAM,GAAD,OAAIoT,EAAJ,YAAaC,EAAb,YAA8B7I,IAC9BvK,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MAAK,SAAAqK,GAAI,OAAIjL,EAAQ,GAAD,mBAAKD,GAAL,YAAckL,QAClC9J,OAAM,SAAAC,GACHC,QAAQC,IAAIF,GACZG,WAAW,KACX0S,OARZ,4CAlBwE,sBA+CxE,OAjBA1P,qBAAU,WACN0P,MACD,CAAC9I,IAEJ5G,qBAAU,WACNM,MACD,CAACkP,IAEJxP,qBAAU,WACN7E,GAAW,KACZ,CAACK,IAOG,CACHA,OACAmU,cANJ,WACI9I,EAAeD,EAAc,IAM7BxL,WCpDO,SAASwU,KAAW,IAAD,EAEN3U,mBAAS,CAAE0M,GAAI,KAAM7C,MAAO,SAFtB,mBAEvBiD,EAFuB,KAEjB8H,EAFiB,KAGtB9O,EAAO+O,qBAAWC,IAAlBhP,GAHsB,EAS1BwO,GAAc,eAAD,OAAgBxO,EAAhB,YAAsBgH,EAAKJ,GAA3B,YAAiCI,EAAKjD,OAAS,KAH5DtJ,EAN0B,EAM1BA,KACAmU,EAP0B,EAO1BA,cACAvU,EAR0B,EAQ1BA,QAGJ,OAAO,kBAACA,EAAD,KAAS,kBAAC,GAAD,CAAOI,KAAMA,EAAM2L,eAAgBwI,EAAejI,aAAcmI,KCZrE,SAASG,KAAU,MAEN/U,mBAAS,CAAE0M,GAAI,KAAM7C,MAAO,SAFtB,mBAEvBiD,EAFuB,KAEjB8H,EAFiB,KAGtB9O,EAAO+O,qBAAWC,IAAlBhP,GAHsB,EAS1BwO,GAAc,eAAD,OAAgBxO,EAAhB,YAAsBgH,EAAKJ,GAA3B,YAAiCI,EAAKjD,OAAS,KAH5DtJ,EAN0B,EAM1BA,KACAmU,EAP0B,EAO1BA,cACAvU,EAR0B,EAQ1BA,QAGJ,OAAO,kBAACA,EAAD,KAAS,kBAAC,GAAD,CAAOI,KAAMA,EAAM2L,eAAgBwI,EAAejI,aAAcmI,KCXrE,SAASI,KAAS,IAAD,EAEJhV,mBAAS,CAAE0M,GAAI,MAAO7C,MAAO,SAFzB,mBAErBiD,EAFqB,KAEf8H,EAFe,KAGpB9O,EAAO+O,qBAAWC,IAAlBhP,GAHoB,EASxBwO,GAAc,aAAD,OAAcxO,EAAd,YAAoBgH,EAAKJ,GAAzB,YAA+BI,EAAKjD,OAAS,KAH1DtJ,EANwB,EAMxBA,KACAmU,EAPwB,EAOxBA,cACAvU,EARwB,EAQxBA,QAGJ,OAAO,kBAACA,EAAD,KAAS,kBAAC,GAAD,CAAOI,KAAMA,EAAM2L,eAAgBwI,EAAejI,aAAcmI,KCVrE,SAASK,KAAe,IAAD,EAEVjV,mBAAS,CAAE0M,GAAI,KAAM7C,MAAO,SAFlB,mBAE3BiD,EAF2B,KAErB8H,EAFqB,KAG1B9O,EAAO+O,qBAAWC,IAAlBhP,GAH0B,EAIIiD,IAA9BO,EAJ0B,EAI1BA,UAAWC,EAJe,EAIfA,QAASC,EAJM,EAINA,MAJM,EAU9B8K,GAAc,cAAD,OAAexO,EAAf,YAAqBwD,EAArB,YAAkCC,EAAlC,YAA6CuD,EAAKJ,GAAlD,YAAwDI,EAAKjD,OAAS,KAHnFtJ,EAP8B,EAO9BA,KACAmU,EAR8B,EAQ9BA,cACAvU,EAT8B,EAS9BA,QAGJ,OAAQ,kBAACA,EAAD,KACJ,kBAACqJ,EAAD,MACA,kBAAC,GAAD,CAAOjJ,KAAMA,EAAM2L,eAAgBwI,EAAejI,aAAcmI,KCPjE,IAAME,GAAM1Q,IAAM8Q,cAAc,CAAEpP,GAAI,YAEtC,SAASqP,GAAY/U,GAAqB,IAAD,EAEf8D,EACzB,CACI,QACA,UACA,WACA,iBALAG,EAFoC,EAEpCA,SAAUW,EAF0B,EAE1BA,OA0BlB,SAASoQ,EAAYhV,GACjB,OAAQiE,GAEJ,IAAK,QAAS,OAAO,kBAAC2Q,GAAD,MACrB,IAAK,UAAW,OAAO,kBAACD,GAAD,MACvB,IAAK,WAAY,OAAO,kBAACJ,GAAD,MACxB,IAAK,eAAgB,OAAO,kBAACM,GAAD,MAC5B,QAAS,OAAO,kBAACD,GAAD,OAIxB,OAzBQ,yBAAKxV,UAAU,eACX,kBAACgE,EAAA,EAAD,CAAOhE,UAAU,mBACb,kBAACkK,EAAD,KAAY,kBAAC1E,EAAD,OACZ,yBAAKxF,UAAU,cACX,kBAACsV,GAAIO,SAAL,CAAclS,MAAO,CAAE2C,GAAI1F,EAAM0F,KAC7B,kBAACsP,EAAD,CAAa/Q,SAAUA,EAAUyB,GAAI1F,EAAM0F,S,0KClBhE,SAASwP,GAAIlV,GAAqB,IAAD,EAOhC2I,IAJAO,EAHgC,EAGhCA,UACAC,EAJgC,EAIhCA,QACAC,EALgC,EAKhCA,MALgC,mDASVrE,EAAQ,YAAD,OAAa/E,EAAM0F,GAAnB,YAAyBwD,EAAzB,YAAsCC,KAA/DhJ,EAT4B,EAS5BA,KAAMJ,EATsB,EAStBA,QAERsN,EAAY3G,EAAQvG,EAAM,UAAW,aAAc,cAAe,WAAY,YAAa,QAC3FgV,EAAkBpO,EAAYT,EAAc+G,EAAW,cAAe,WACtE+H,EAAkBrO,EAAYT,EAAc+G,EAAW,WAAY,cAEzE,OACI,yBAAKjO,UAAU,UACX,kBAACW,EAAD,KACI,kBAACqD,EAAA,EAAD,CAAOhE,UAAU,mBACb,kBAACkK,EAAD,KACI,kBAACjK,EAAA,EAAD,CAAYD,UAAU,OAAOE,QAAQ,MAAMU,EAAMS,QACjD,kBAAC2I,EAAD,OAEJ,yBAAKhK,UAAU,cACX,kBAACiW,GAAD,kBACA,yBAAKjW,UAAU,SAAf,IAAwB,kBAAC,GAAD,CAAOe,KAAMgV,KACrC,kBAACE,GAAD,qBACA,kBAAC,GAAD,CAAOlV,KAAMiV,QASrC,IAAMC,GAAKtH,IAAOuH,GAAV,MCzCO,SAASC,GAAQvV,GAAqB,IAAD,EAM5C2I,IAHAO,EAH4C,EAG5CA,UACAC,EAJ4C,EAI5CA,QACAC,EAL4C,EAK5CA,MAL4C,EAW5CrE,EAAQ,gBAAD,OAAiB/E,EAAM0F,GAAvB,YAA6BwD,EAA7B,YAA0CC,IAFjDhJ,EAT4C,EAS5CA,KACAJ,EAV4C,EAU5CA,QAGJ,OACI,yBAAKX,UAAU,UACX,kBAACW,EAAD,KACI,kBAACqD,EAAA,EAAD,CAAOhE,UAAU,mBACb,kBAACkK,EAAD,KAAY,kBAACjK,EAAA,EAAD,CAAYD,UAAU,OAAOE,QAAQ,MAAMU,EAAMS,QAAoB,kBAAC2I,EAAD,OACjF,yBAAKhK,UAAU,cACX,kBAAC,GAAD,CAAOe,KAAMA,Q,OCTtB,SAASqV,GAAQxV,GAA6B,IAAD,EACjCmF,IAAfO,EADgD,EAChDA,GAAIE,EAD4C,EAC5CA,OACZ,OACI,yBAAKxG,UAAU,eACX,kBAACwG,EAAD,MACA,yBAAMxG,UAAU,WACZ,kBAACuT,GAAD,CAAgBlS,OAAQ,kBAAmBiF,GAAIA,IAC/C,kBAACqP,GAAD,CAAaxS,GAAG,QAAQ9B,OAAQ,QAASiF,GAAIA,IAC7C,kBAAC0H,GAAD,CAAgB3M,OAAQ,kBAAmBiF,GAAIA,IAC/C,kBAACwP,GAAD,CAAKzU,OAAQ,MAAOiF,GAAIA,IACxB,kBAACwI,GAAD,CAAezN,OAAQ,wBAAyBiF,GAAIA,IACpD,kBAAC6P,GAAD,CAAS9U,OAAQ,UAAWiF,GAAIA,IAChC,kBAACyI,GAAD,CAAQ1N,OAAQ,gBAAiBiF,GAAIA,IACrC,kBAACuO,GAAD,CAAYxT,OAAQ,cAAeiF,GAAIA,IACvC,kBAACuI,GAAD,CAAaxN,OAAQ,eAAgBiF,GAAIA,MCG1C+P,OAzBf,WACE,IAAM3K,EAAUjM,IAEhB,OADA6W,SAAS9U,KAAK8N,MAAMiH,KAAO,MAEzB,yBAAKvW,UAAW0L,EAAQ9L,KACtB,0BAAM4W,IAAI,aAAaC,KAAK,4DAC5B,0BAAMpT,KAAK,WAAWqT,QAAQ,+CAE9B,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOC,KAAK,WAAWC,OAAO,EAAMC,OAAQ,SAAAjW,GAC1C,GAAKmB,aAAaoB,GAAuC,OAAO,kBAACiT,GAAYxV,GAArDA,EAAMqB,QAAQ6U,QAAQ,QAGhD,kBAAC,IAAD,CAAOH,KAAK,IAAIC,OAAO,EAAMC,OAAQ,SAACjW,GAAD,OAAW,kBAACE,EAAUF,SCd/CmW,QACW,cAA7BpH,OAAOqH,SAASC,UAEe,UAA7BtH,OAAOqH,SAASC,UAEhBtH,OAAOqH,SAASC,SAASC,MACvB,2DCZNC,IAASN,OAAO,kBAAC,GAAD,MAASP,SAASc,eAAe,SD6H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrB3V,MAAK,SAAA4V,GACJA,EAAaC,gBAEdtV,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAMsV,c","file":"static/js/main.91ac7a71.chunk.js","sourcesContent":["import { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  app: {\r\n    flexGrow: 1,\r\n    backgroundColor: \"#f8f8f8\",\r\n  },\r\n}));\r\nexport default useStyles;\r\n","import Typography from '@material-ui/core/Typography';\r\nimport React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nexport default function Copyright() {\r\n    return (<div className=\"copyright\">\r\n        <Typography variant=\"body2\" color=\"textSecondary\" >\r\n            {'Copyright © '}\r\n            <Link color=\"inherit\" to=\"http://itdsoftware.com/\">\r\n                ITD Software\r\n      </Link>{' '}\r\n            {new Date().getFullYear()}\r\n            {'.'}\r\n        </Typography>\r\n    </div>\r\n    );\r\n}","import React, { useState, ReactNode } from \"react\"\r\nimport Typography from \"@material-ui/core/Typography/Typography\"\r\nimport \"./style.scss\"\r\n\r\nexport default function useSpinner() {\r\n\r\n    const [loading, setLoading] = useState(false)\r\n\r\n    function Spinner(props: { children?: ReactNode }) {\r\n        return <div className=\"Spinner\">{props.children}{loading\r\n            ? <div className=\"overlay\">\r\n                <div className=\"text\"><Typography >Loading...</Typography></div>\r\n            </div>\r\n            : null\r\n        }</div>\r\n    }\r\n    return {\r\n        setLoading,\r\n        Spinner\r\n    }\r\n}","import './style.scss';\r\n\r\nimport { Paper } from '@material-ui/core';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Button from '@material-ui/core/Button';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport React, { useEffect, useState } from 'react';\r\nimport { RouteComponentProps } from 'react-router-dom';\r\n\r\nimport Copyright from './copyright';\r\nimport useLogin from './logic';\r\n\r\nexport default function Login(props: RouteComponentProps) {\r\n  const { login, data, Spinner } = useLogin()\r\n\r\n  function Field() {\r\n    const [username, setUsername] = useState(\"\")\r\n    const [password, setPassword] = useState(\"\")\r\n    return <>\r\n      <form onSubmit={login.bind(this, username, password, props)}>\r\n        <TextField\r\n          variant=\"outlined\"\r\n          margin=\"normal\"\r\n          required\r\n          fullWidth\r\n          id=\"email\"\r\n          label=\"Email Address\"\r\n          name=\"email\"\r\n          autoComplete=\"email\"\r\n          autoFocus\r\n          onChange={e => setUsername(e.target.value)}\r\n        />\r\n      </form>\r\n\r\n      <form onSubmit={login.bind(this, username, password, props)}>\r\n        <TextField\r\n          variant=\"outlined\"\r\n          margin=\"normal\"\r\n          required\r\n          fullWidth\r\n          name=\"password\"\r\n          label=\"Password\"\r\n          type=\"password\"\r\n          id=\"password\"\r\n          autoComplete=\"current-password\"\r\n          onChange={(e) => setPassword(e.target.value)}\r\n        />\r\n      </form>\r\n      <Typography className=\"error\">{data.toString()}</Typography>\r\n      <Button\r\n        type=\"submit\"\r\n        fullWidth\r\n        variant=\"contained\"\r\n        className=\"submit\"\r\n        onClick={login.bind(this, username, password, props)}\r\n      >\r\n        Submit\r\n          </Button>\r\n    </>\r\n  }\r\n\r\n  return (<div className=\"Login\">\r\n    <Spinner>\r\n      <Paper className=\"papersurround\">\r\n        <Avatar className=\"avatar\">\r\n          <img className=\"logo\" src='ITDlogo.jpg' alt='logo'></img>\r\n        </Avatar>\r\n        <Typography className=\"signin\" component=\"h1\" variant=\"h5\">\r\n          Sign in\r\n        </Typography>\r\n        <Field />\r\n        <form className=\"form\" noValidate>\r\n          <Grid container>\r\n            <Grid item xs>\r\n            </Grid>\r\n          </Grid>\r\n        </form>\r\n        <Copyright />\r\n\r\n      </Paper >\r\n    </Spinner>\r\n  </div>\r\n  );\r\n}","import React, { useEffect, useState } from 'react';\r\nimport { RouteComponentProps } from 'react-router-dom';\r\n\r\nimport useSpinner from '../../../lib/usespinner/usespinner';\r\n\r\nexport interface UserData {\r\n    id: number,\r\n    username: string\r\n}\r\n\r\nexport default function useLogin() {\r\n\r\n    const [data, setData] = useState<UserData[]>([])\r\n    const { Spinner, setLoading } = useSpinner()\r\n\r\n    async function login(username: string, password: string, props: RouteComponentProps) {\r\n\r\n        setLoading(true)\r\n\r\n        const header = {\r\n            method: 'POST',\r\n            headers: {\r\n                'Accept': 'application/json',\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify({ username: username, password: password })\r\n        }\r\n        fetch(`api/login`, header)\r\n            .then(res => res.json())\r\n            .then(data => {\r\n                setData(data)\r\n                setLoading(false)\r\n                if (data[0] && data[0][\"id\"]) {\r\n                    localStorage.setItem(\"id\", data[0][\"id\"])\r\n                    props.history.push(\"/reports\")\r\n                }\r\n            })\r\n            .catch((error) => {\r\n                console.log(error)\r\n                setTimeout(1000)\r\n                login(username, password, props)\r\n            });\r\n    }\r\n\r\n    return {\r\n        Spinner,\r\n        data,\r\n        login,\r\n    }\r\n}","import './style.scss';\r\n\r\nimport { Typography } from '@material-ui/core';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport ArrowDropDownIcon from '@material-ui/icons/ArrowDropDown';\r\nimport React, { HTMLAttributes, useRef } from 'react';\r\nimport { ReactNode, useEffect } from 'react';\r\n\r\n// import Div from './style';\r\nexport default function useSimpleSelect(items: string[], color?: string) {\r\n\r\n    const [selected, setSelected] = React.useState(\r\n        items[0]\r\n            ? items[0]\r\n            : 'empty'\r\n    );\r\n\r\n    useEffect(() => {\r\n        if (selected === 'empty' && items[0])\r\n            setSelected(items[0])\r\n    }, [items])\r\n\r\n    function Items(props: {}) {\r\n        return <>{\r\n            items.map((s, index) => {\r\n                return <MenuItem className = \"item\"\r\n                    aria-haspopup\r\n                    key={index}\r\n                    onMouseDown={\r\n                        () => {\r\n                            setSelected(s);\r\n                        }\r\n                    }>\r\n                    {s}\r\n                </MenuItem>\r\n            })\r\n        }</>\r\n    }\r\n\r\n    function Select(props: HTMLAttributes<HTMLDivElement>) {\r\n        const ref = useRef(null) as any\r\n        return (\r\n            <div className=\"Select\" ref={ref}>\r\n                <div className=\"head\"><div className=\"text\"><Typography >{selected}<ArrowDropDownIcon /></Typography></div>\r\n                    <div >\r\n                        <Paper className=\"Items\" >\r\n                            <Items />\r\n                        </Paper>\r\n                    </div>\r\n                </div>\r\n            </div >\r\n        );\r\n    }\r\n\r\n    return {\r\n        selected,\r\n        Select\r\n    }\r\n\r\n}","import React, { useState, useEffect, ReactNode } from 'react'\r\nimport Typography from \"@material-ui/core/Typography/Typography\"\r\nimport useSpinner from \"../usespinner/usespinner\"\r\n\r\nexport interface obj {\r\n    [key: string]: any\r\n}\r\n\r\nexport default function useData(url: string, body?: RequestInit) {\r\n\r\n    const [data, setData] = useState<obj[]>([]);\r\n    const { Spinner, setLoading } = useSpinner()\r\n\r\n    async function fetchData() {\r\n        setLoading(true)\r\n        try {\r\n            fetch(`${url}`, body)\r\n                .then(res => res.json())\r\n                .then(data => {\r\n                    data != null\r\n                        ? setData(data)\r\n                        : setData([])\r\n                })\r\n                .catch((error) => {\r\n                    console.log(error)\r\n                    console.log(\"Reattempting Connection...\")\r\n                    setTimeout(() => { }, 1000)\r\n                    fetchData()\r\n                })\r\n        } catch (err) {\r\n            setData([])\r\n            console.error(err)\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        fetchData();\r\n    }, [url]);\r\n\r\n    useEffect(() => {\r\n        setLoading(false)\r\n    }, [data])\r\n\r\n    return {\r\n        data,\r\n        setData,\r\n        fetchData,\r\n        Spinner,\r\n\r\n    }\r\n\r\n}\r\n","import AppBar from '@material-ui/core/AppBar/AppBar';\r\nimport React, { useState, useEffect, ReactNode } from 'react';\r\nimport Div from './style'\r\nimport Typography from '@material-ui/core/Typography/Typography'\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport { Link, } from 'react-router-dom';\r\nimport useDBMenu from \"./usedbmenu/useDBMenu\"\r\nimport \"./style.scss\"\r\n\r\nexport default function useNavBar() {\r\n\r\n    const { Select, selected } = useDBMenu()\r\n    const [db, setDb] = useState('itdepos');\r\n\r\n    useEffect(() => {\r\n        if (selected !== \"empty\") setDb(selected)\r\n    }, [selected])\r\n\r\n    function NavBar() {\r\n        return (\r\n            // <Div><AppBar position={\"fixed\"}>\r\n            <div className=\"NavBar\">\r\n                <AppBar position=\"fixed\">\r\n                    <div className='left'>\r\n                        <img src='ITDlogo.jpg' alt='logo'></img>\r\n                        <Typography className=\"text\">Branch: </Typography><Select />\r\n                    </div>\r\n                    <div className=\"right\">\r\n                        <Link className=\"link\" to={\"/\"}><Typography >Logout</Typography></Link>\r\n                    </div>\r\n                </AppBar>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    return {\r\n        db,\r\n        NavBar\r\n    }\r\n}\r\n","import useSelect from '../../../../../lib/useselect/useselect'\r\nimport React, { useEffect, useState } from 'react'\r\nimport useData, { obj } from '../../../../../lib/usedata/usedata'\r\n\r\nexport default function useDBMenu() {\r\n    const { data } = useData(`api/databases`)\r\n    const [DBList, setDBList] = useState([] as string[])\r\n    const { Select, selected } = useSelect(DBList, \"white\");\r\n\r\n    useEffect(() => {\r\n        setDBList(createDBList(data))\r\n    }, [data])\r\n\r\n    return {\r\n        Select,\r\n        selected\r\n    }\r\n}\r\n\r\nexport function createDBList(data: obj[]): string[] {\r\n    let dbList: string[] = data.map(e => {\r\n        return e.schema_name\r\n    })\r\n    return dbList\r\n}","\r\n\r\nexport interface obj {\r\n    [key: string]: any\r\n}\r\n\r\nexport function addRows(data: obj[], newRows: obj[]): obj[] {\r\n    return [...data, ...newRows]\r\n}\r\n\r\nexport function notEmpty(data: obj[]): number {\r\n    return (data && data.length);\r\n}\r\n\r\nexport function getColumn(data: obj[], col: string): number[] | string[] {\r\n    return (notEmpty(data)) ? data.map(e => { return e[col] }) : [0];\r\n}\r\n\r\nexport function sumColumn(data: obj[], col: string) {\r\n    let column = getColumn(data, col) as number[]\r\n    return column.reduce((acc, n) => { return acc + n });\r\n}\r\n\r\nexport function setColumn(data: obj[], column: string, f: (v: any) => any) {\r\n    let copy: obj[] = JSON.parse(JSON.stringify(data));\r\n    copy.forEach(e => e[column] = f(e[column]));\r\n    return copy;\r\n}\r\n\r\nexport function addColumn(data: obj[], column: string, newColumn: string, f: (v: any) => any) {\r\n    let copy: obj[] = JSON.parse(JSON.stringify(data));\r\n    copy.forEach(e => Object.assign(e, { [newColumn]: f(e[column]) }));\r\n    return copy;\r\n}\r\n\r\nexport function removeColumns(data: obj[], ...col: string[]) {\r\n    const _data: obj[] = JSON.parse(JSON.stringify(data));\r\n    return (notEmpty(_data)) ? _data.map(e => { col.map(c => { return delete e[c] }); return e }) : [];\r\n}\r\n\r\nexport function columns(data: obj[], ...cols: string[]) {\r\n    return notEmpty(data)\r\n        ? data.map(e => { let en = {}; cols.map(c => { return Object.assign(en, { [c]: e[c] }) }); return en })\r\n        : []\r\n}\r\n\r\nexport function sumAndGroup(data: obj[], col: string, ...dontSum: string[]) {\r\n    let groups = getUniqueValues(data, col);\r\n    let split = groups.map(e => { return getElementsWithValue(data, col, e) });\r\n    const sumObjectsByKey = (obj1: obj, obj2: obj) => {\r\n        Object.keys(obj1).forEach(k => { obj1[k] = (typeof obj1[k] === 'number' && k !== col && !dontSum.includes(k)) ? obj1[k] + obj2[k] : obj1[k] });\r\n        return obj1;\r\n    }\r\n    split = JSON.parse(JSON.stringify(split));\r\n    let grouped = split.map(a => { return a.reduce(sumObjectsByKey) });\r\n    return grouped;\r\n}\r\n\r\nexport function split(data: obj[], col: string) {\r\n    let groups = getUniqueValues(data, col);\r\n    return groups.map(e => { return getElementsWithValue(data, col, e) });\r\n}\r\n\r\nexport function getUniqueValues(data: obj[], col: string): any[] {\r\n    let arr: any[] = []\r\n    if (notEmpty(data)) {\r\n        let uniqueVals: Set<any> = new Set()\r\n        data.forEach(e => uniqueVals.add(e[col]))\r\n        uniqueVals.forEach(v => arr.push(v))\r\n    }\r\n    return arr\r\n}\r\n\r\nexport function getElementsWithValue(data: obj[], key: string, value: any) {\r\n    return data.filter(e =>\r\n        e[key] === value)\r\n}\r\n\r\nexport function sort(data: obj[], property: any, order: string) {\r\n    return data.sort(sortByProperty(property, order))\r\n}\r\n\r\nexport function sortByProperty(property: any, ordstr: string) {\r\n    let order: number = (ordstr === 'asc') ? -1 : 1;\r\n    return function (a: obj, b: obj) {\r\n        if (a[property] > b[property])\r\n            return order;\r\n        else if (a[property] < b[property])\r\n            return -order;\r\n        return 0;\r\n    }\r\n}","export function todaysDate() {\r\n    var today = new Date();\r\n    var date = today.getFullYear() + '-' + ('0' + (today.getMonth() + 1)).slice(-2) + '-' + ('0' + (today.getDate())).slice(-2);\r\n    return date;\r\n}\r\n\r\nexport function formatDate(date: string) {\r\n    let d = new Date(date as string);\r\n    let formatted = d.getFullYear() + '-' + ('0' + (d.getMonth() + 1)).slice(-2) + '-' + ('0' + (d.getDate())).slice(-2)\r\n    return formatted;\r\n}","import './style.scss';\r\n\r\nimport EventIcon from '@material-ui/icons/Event';\r\nimport React, { EventHandler, useEffect } from 'react';\r\nimport { useState } from 'react';\r\n\r\nimport { formatDate, todaysDate } from './logic';\r\n\r\nexport default function useDate() {\r\n\r\n    const [date, setDate] = useState({ start: todaysDate(), end: todaysDate() })\r\n\r\n    function Dates(props: {}) {\r\n        return <div className=\"Dates\">\r\n            <DateField handleChange={(e) => setDate({\r\n                ...date, start: formatDate(e.currentTarget.value), end: date.end\r\n            })} defaultValue={date.start} />\r\n            <div>-</div>\r\n            <DateField handleChange={(e) => setDate({\r\n                ...date, start: date.start, end: formatDate(e.currentTarget.value)\r\n            })} defaultValue={date.end} />\r\n        </div>\r\n    }\r\n\r\n    function Date(props: {}) {\r\n        return <DateField handleChange={(e) => setDate({\r\n            ...date, start: formatDate(e.currentTarget.value), end: formatDate(e.currentTarget.value)\r\n        })} defaultValue={date.end} />\r\n    }\r\n\r\n    function DateField(props: { handleChange: (e: React.FormEvent<HTMLInputElement>) => void, defaultValue: string }) {\r\n        return <div className=\"datefield\"><input type=\"date\"\r\n            required\r\n            defaultValue={props.defaultValue}\r\n            onChange={props.handleChange}\r\n\r\n        />\r\n            <EventIcon className=\"icon\" />\r\n        </div>\r\n    }\r\n\r\n    return {\r\n        startDate: date.start,\r\n        endDate: date.end,\r\n        Dates,\r\n        // Date\r\n    }\r\n\r\n}\r\n","import './style.scss';\r\n\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport React, { HTMLAttributes, ReactHTMLElement, ReactNode } from 'react';\r\n\r\nexport default function HeaderBar(props: { children: ReactNode }) {\r\n\r\n    return <div className=\"HeaderBar\"><AppBar >{props.children}</AppBar></div>\r\n\r\n}\r\n","\r\nexport function getUniqueValues(objArr, key) {\r\n    return [...new Set(objArr.map(i => {\r\n        return getValue(i, key);\r\n    }))];\r\n}\r\n\r\nexport function getElementsWithValue(objArr, key, value) {\r\n    return objArr.filter(e =>\r\n        getValue(e, key) === value)\r\n}\r\n\r\nexport function getData(url) {\r\n    fetch(url)\r\n        .then(res => res.json())\r\n        .catch((error) => {\r\n        })\r\n}\r\n\r\nexport function add(total, n) {\r\n    return total + n\r\n}\r\n\r\nexport function colors(subArr) {\r\n    let colors = [\r\n        'rgba(0,0,0, 0.6)',\r\n        'rgba(128,128,128, 0.6)',\r\n        'rgba(128,128,0, 0.6)',\r\n        'rgba(128,0,128, 0.6)',\r\n        'rgba(128,0,0, 0.6)',\r\n        'rgba(0,128,128, 0.6)',\r\n        'rgba(0,128,0, 0.6)',\r\n        'rgba(0,0,128, 0.6)',\r\n\r\n        'rgba(255,255,255, 0.6)',\r\n        'rgba(255,255,0, 0.6)',\r\n        'rgba(255,0,255, 0.6)',\r\n        'rgba(255,0,0, 0.6)',\r\n        'rgba(0,255,255, 0.6)',\r\n        'rgba(0,255,0, 0.6)',\r\n        'rgba(0,0,255, 0.6)',\r\n\r\n        'rgba(255,255,128, 0.6)',\r\n        'rgba(255,128,255, 0.6)',\r\n        'rgba(255,128,128, 0.6)',\r\n        'rgba(128,255,255, 0.6)',\r\n        'rgba(128,255,128, 0.6)',\r\n        'rgba(128,128,255, 0.6)',\r\n\r\n        'rgba(128,0,255, 0.6)',\r\n        'rgba(0,128,255, 0.6)',\r\n        'rgba(255,128,0, 0.6)',\r\n\r\n\r\n        'rgba(64,64,64, 0.6)',\r\n        'rgba(192,192,192, 0.6)',\r\n        'rgba(192,192,64, 0.6)',\r\n        'rgba(192,64,192, 0.6)',\r\n        'rgba(192,64,64, 0.6)',\r\n        'rgba(64,192,192, 0.6)',\r\n        'rgba(64,192,64, 0.6)',\r\n        'rgba(64,64,192, 0.6)',\r\n\r\n        'rgba(255,255,64, 0.6)',\r\n        'rgba(255,64,255, 0.6)',\r\n        'rgba(255,64,64, 0.6)',\r\n        'rgba(64,255,255, 0.6)',\r\n        'rgba(64,255,64, 0.6)',\r\n        'rgba(64,64,255, 0.6)',\r\n\r\n        'rgba(255,255,192, 0.6)',\r\n        'rgba(255,192,255, 0.6)',\r\n        'rgba(255,192,192, 0.6)',\r\n        'rgba(192,255,255, 0.6)',\r\n        'rgba(192,255,192, 0.6)',\r\n        'rgba(192,192,255, 0.6)',\r\n\r\n        'rgba(192,64,255, 0.6)',\r\n        'rgba(64,192,255, 0.6)',\r\n        'rgba(255,192,64, 0.6)',\r\n\r\n\r\n        'rgba(64,64,0, 0.6)',\r\n        'rgba(64,0,64, 0.6)',\r\n        'rgba(64,0,0, 0.6)',\r\n        'rgba(0,64,64, 0.6)',\r\n        'rgba(0,64,0, 0.6)',\r\n        'rgba(0,0,64, 0.6)',\r\n\r\n        'rgba(192,192,0, 0.6)',\r\n        'rgba(192,0,192, 0.6)',\r\n        'rgba(192,0,0, 0.6)',\r\n        'rgba(0,192,192, 0.6)',\r\n        'rgba(0,192,0, 0.6)',\r\n        'rgba(0,0,192, 0.6)',\r\n\r\n\r\n        'rgba(64,0,192, 0.6)',\r\n        'rgba(0,64,192, 0.6)',\r\n        'rgba(192,64,0, 0.6)',\r\n\r\n\r\n        'rgba(102,51,0, 0.6)',\r\n        'rgba(255,229,204, 0.6)',\r\n        'rgba(255,153,153, 0.6)',\r\n    ];\r\n    return subArr.map(i => { return colors[colors.length - (i % colors.length) - 1] });\r\n}\r\n\r\nexport function notEmpty(data) {\r\n    return (data && data.length)\r\n}\r\n\r\nexport function exists(data) {\r\n    return (data) ? true : false;\r\n}\r\n\r\nexport function getColumn(data, col) {\r\n    return (notEmpty(data)) ? data.map(e => { return getValue(e, col) }) : []\r\n}\r\n\r\nexport function removeColumns(refData, ...col) {\r\n    const data = JSON.parse(JSON.stringify(refData));\r\n    return (notEmpty(data)) ? data.map(e => { col.map(c => { return delete e[c] }); return e }) : [];\r\n}\r\n\r\nexport function sum(arr) {\r\n    return (notEmpty(arr)) ? arr.reduce((acc, n) => { return acc + n }) : 0;\r\n}\r\n\r\nexport function getValue(e, key) {\r\n    return e[key];\r\n}\r\n\r\nexport function convertDate(date) {\r\n    return date.getFullYear() + '-' + ('0' + (date.getMonth() + 1)).slice(-2) + '-' + ('0' + (date.getDate())).slice(-2);\r\n}\r\n\r\nexport function sizeOf(e) {\r\n    return Object.keys(e).length;\r\n}\r\n\r\nexport function viewport(small, large) {\r\n    return (window.innerWidth > 1024) ? small : large;\r\n}\r\n\r\nexport function sumAndGroup(refData, groupBy) {\r\n    const data = JSON.parse(JSON.stringify(refData));\r\n    let groups = getUniqueValues(data, groupBy);\r\n    let split = groups.map(e => { return getElementsWithValue(data, groupBy, e) });\r\n    const sumObjectsByKey = (obj1, obj2) => {\r\n        Object.keys(obj1).forEach(k => { obj1[k] = (typeof obj1[k] === 'number' && k !== groupBy) ? obj1[k] + obj2[k] : obj1[k] });\r\n        return obj1;\r\n    }\r\n    let grouped = split.map(a => { return a.reduce(sumObjectsByKey) });\r\n    return grouped;\r\n}\r\n\r\n","import Typography from '@material-ui/core/Typography';\r\nimport React, { SetStateAction } from 'react';\r\n\r\nimport * as d from '../datafns';\r\n\r\nexport interface EnhancedTableHeadProps {\r\n    order: false | \"desc\" | \"asc\" | undefined,\r\n    orderBy: string,\r\n    onRequestSort: (event: React.MouseEvent, property: string) => void,\r\n    data: d.obj[],\r\n    rowCount: number\r\n    className?: string\r\n}\r\n\r\nexport interface HeadCell {\r\n    id: string,\r\n    numeric: boolean,\r\n    disablePadding: false,\r\n    label: string\r\n}\r\n\r\nexport interface Classes {\r\n    root?: any\r\n    hilight?: any\r\n    visuallyHidden?: any\r\n}\r\n\r\nexport interface EnhancedTableProps {\r\n    sortCallback?: React.Dispatch<SetStateAction<any>>\r\n    bufferCallback?: () => void\r\n    data: d.obj[]\r\n}\r\n\r\nexport interface EmptyMessageProps {\r\n    data: d.obj[]\r\n}\r\n\r\nexport function sortByProperty(property: string, order: string) {\r\n    let ord = (order === 'asc') ? -1 : 1;\r\n    return function (a: d.obj, b: d.obj) {\r\n        if (a[property] > b[property])\r\n            return ord;\r\n        else if (a[property] < b[property])\r\n            return -ord;\r\n\r\n        return 0;\r\n    }\r\n}\r\n\r\nexport function EmptyMessage(props: EmptyMessageProps) {\r\n    return d.notEmpty(props.data)\r\n        ? <></>\r\n        : <div className='emptyMessage'><Typography >Empty</Typography></div>\r\n}\r\n\r\n","import \"./style.scss\"\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport TableSortLabel from '@material-ui/core/TableSortLabel';\r\nimport React from 'react';\r\n\r\nimport * as d from '../datafns';\r\nimport * as _ from './logic';\r\n\r\nexport default function EnhancedTableHead(props: _.EnhancedTableHeadProps) {\r\n  const { order, orderBy, onRequestSort } = props;\r\n  const createSortHandler = (property: string) => (event: React.MouseEvent) => {\r\n    onRequestSort(event, property);\r\n  };\r\n  const [headCells, setHeadCells] = React.useState<_.HeadCell[]>([]);\r\n  const [data, setData] = React.useState<d.obj[]>([]);\r\n\r\n  React.useEffect(() => {\r\n    if (d.notEmpty(props.data) && data !== props.data) {\r\n      setHeadCells(Object.keys(props.data[0]).map((e, index) => {\r\n        let isNum = (typeof props.data[0][e] == 'number') ? true : false\r\n        return {\r\n          id: index + 1 + '',\r\n          numeric: isNum,\r\n          disablePadding: false,\r\n          label: e\r\n        }\r\n      }));\r\n      setData(props.data);\r\n    } else setHeadCells([]);\r\n  }, [props.data]);\r\n\r\n  return (\r\n      <TableHead  >\r\n        <TableRow>\r\n          {headCells.map((headCell) => (\r\n            <TableCell\r\n              key={headCell.id}\r\n              align={'left'}\r\n              padding={headCell.disablePadding ? 'none' : 'default'}\r\n              sortDirection={orderBy === headCell.id ? order : false}\r\n              onClick={createSortHandler(headCell.id)}\r\n            >\r\n              <TableSortLabel\r\n                active={orderBy === headCell.id}\r\n                direction={orderBy === headCell.id ? order as \"desc\" | \"asc\" | undefined : 'asc'}\r\n              >\r\n                {headCell.label}\r\n              </TableSortLabel>\r\n            </TableCell>\r\n          ))}\r\n        </TableRow>\r\n      </TableHead>\r\n  );\r\n}\r\n","\r\nimport \"./style.scss\"\r\n// import Div from \"./style\"\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport KeyboardArrowDownIcon from '@material-ui/icons/KeyboardArrowDown';\r\nimport React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles'\r\n\r\nimport * as f from '../../components/functions';\r\nimport * as d from '../datafns';\r\nimport * as _ from './logic';\r\nimport EnhancedTableHead from './tablehead';\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  head: {\r\n    backgroundColor: \"blue\"\r\n  },\r\n}))\r\n\r\nexport default function EnhancedTable(props: _.EnhancedTableProps) {\r\n\r\n  const classes = useStyles();\r\n  const rowsPerBuffer = 100;\r\n  const [displayBuffer, setDisplayBuffer] = React.useState(true)\r\n  const [data, setData] = React.useState<d.obj[]>([]);\r\n  const [order, setOrder] = React.useState<false | \"desc\" | \"asc\" | undefined>('asc');\r\n  const [orderBy, setOrderBy] = React.useState('calories');\r\n  const dense = false;\r\n  const [rowCount, setRowCount] = React.useState(0);\r\n  const [rows, setRows] = React.useState<d.obj[]>([]);\r\n  const [bufferCount, setBufferCount] = React.useState(1)\r\n\r\n  const handleRequestSort = (event: React.MouseEvent, property: string) => {\r\n    const isAsc = order === 'asc';\r\n    setOrder(isAsc ? 'desc' : 'asc');\r\n    setOrderBy(property);\r\n    if (props.sortCallback) {\r\n      props.sortCallback({ by: event.currentTarget.textContent, order: isAsc ? 'desc' : 'asc' })\r\n    }\r\n    else {\r\n      let header = event.currentTarget.firstChild!.firstChild as any\r\n      let label = header.data as string\r\n      let sorted = (data.sort(_.sortByProperty(label, order as string)));\r\n      setRows(sorted.map((e: d.obj) => {\r\n        return Object.values(e).map((e, index) => {\r\n          if (typeof e === 'number' && e % 1 !== 0) e = e.toFixed(2)\r\n          return <TableCell key={index} align=\"left\">{e}</TableCell>\r\n        })\r\n      }));\r\n    }\r\n  };\r\n\r\n  function Buffer() {\r\n    return displayBuffer\r\n      ? <KeyboardArrowDownIcon onClick={() => {\r\n        setBufferCount(bufferCount + 1)\r\n      }} />\r\n      : <></>\r\n  }\r\n\r\n  React.useEffect(() => {\r\n    if (f.notEmpty(props.data)) {\r\n      setData(props.data);\r\n      setRows(props.data.map(e => {\r\n        return Object.values(e).map((e, index) => {\r\n          if (typeof e === 'number') e = + (Math.round(e * 100) / 100)\r\n          return <TableCell key={index} align=\"left\">{e as string | number}</TableCell>\r\n        })\r\n      }));\r\n      setDisplayBuffer(true)\r\n    } else {\r\n      setData([]);\r\n      setRows([]);\r\n      setRowCount(0);\r\n      setBufferCount(1)\r\n    }\r\n  }, [props.data]);\r\n\r\n  React.useEffect(() => {\r\n    setRowCount(rowsPerBuffer * bufferCount);\r\n    if (rowCount > props.data.length) setDisplayBuffer(false)\r\n    if (props.bufferCallback && bufferCount > 1) props.bufferCallback()\r\n  }, [bufferCount])\r\n\r\n  return (\r\n    <div className=\"Table\">\r\n\r\n      <Table\r\n        stickyHeader\r\n        aria-labelledby=\"tableTitle\"\r\n        size={dense ? 'small' : 'medium'}\r\n        aria-label=\"enhanced table\"\r\n      >\r\n\r\n        <EnhancedTableHead className={classes.head}\r\n          order={order}\r\n          orderBy={orderBy}\r\n          onRequestSort={handleRequestSort}\r\n          rowCount={rows.length}\r\n          data={data}\r\n        />\r\n\r\n        <TableBody className=\"tableBody\">\r\n          {rows\r\n            .map((row, index) => {\r\n              return (\r\n                <TableRow\r\n                  key={index}\r\n                  hover\r\n                  role=\"checkbox\"\r\n                  tabIndex={-1}\r\n                >\r\n                  {rows[index]}\r\n                </TableRow>\r\n              );\r\n            })}\r\n        </TableBody>\r\n\r\n      </Table>\r\n      <Buffer />\r\n      <_.EmptyMessage data={props.data} />\r\n    </div>\r\n  );\r\n}\r\n\r\n","import styled from 'styled-components';\r\nimport useSimpleSelect from '../../../../lib/useselect/useselect'\r\nimport * as d from '../../../../lib/datafns'\r\nimport { useState, useEffect } from 'react'\r\nimport Typography from '@material-ui/core/Typography'\r\nimport useData from '../../../../lib/usedata/usedata';\r\nimport useDate from '../../../../lib/usedate/usedate';\r\nimport React from 'react';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport HeaderBar from './headerbar/headerbar'\r\nimport SimpleSelect from '../../../../lib/useselect/useselect'\r\nimport Table from '../../../../lib/table/table'\r\nimport { ReportProps } from \"./logic\";\r\n\r\nexport default function CashierHistory(props: ReportProps) {\r\n\r\n    const [tableData, setTableData] = useState([] as d.obj[][]);\r\n    const {\r\n        startDate,\r\n        endDate,\r\n        Dates\r\n    } = useDate();\r\n    const {\r\n        data,\r\n        Spinner\r\n    } = useData(`/api/salesByProduct/${props.db}/${startDate}/${endDate}`);\r\n    const {\r\n        selected,\r\n        Select,\r\n    } = useSimpleSelect(d.getUniqueValues(data, 'Cashier'), \"black\");\r\n\r\n    function formatTableData(data: d.obj[], cashier: string) {\r\n        let filterColumns = d.columns(data, 'Receipt', 'Product', 'Sales', 'Qty', 'Refund', 'Discount', 'TillDate', 'TillTime', 'Cashier')\r\n        let filterRows = d.getElementsWithValue(filterColumns, 'Cashier', cashier)\r\n        let sortByReceipt = d.sort(filterRows, 'Receipt', \"desc\")\r\n        return d.split(sortByReceipt, 'Receipt')\r\n    }\r\n\r\n    function Tables() {\r\n        let lastDate = '00-00-00'\r\n        function PrintDate(date: string) {\r\n            if (date === lastDate)\r\n                return <></>\r\n            else {\r\n                lastDate = date;\r\n                return <DateLabel><Typography>{date}</Typography></DateLabel>\r\n            }\r\n        }\r\n\r\n        return (<>{\r\n            tableData.map((e, index) => {\r\n                return < div key={index}>\r\n                    {PrintDate(e[0]['TillDate'])}\r\n                    <TableLabel>\r\n                        <Typography>{'Receipt ' + e[0]['Receipt']}</Typography>\r\n                        <Typography>{e[0]['TillTime']}</Typography>\r\n                    </TableLabel>\r\n                    <Table data={d.columns(e, 'Product', 'Qty', 'Sales')} />\r\n                </div>\r\n            })\r\n        }</>)\r\n    }\r\n\r\n    useEffect(() => {\r\n        setTableData(formatTableData(data, selected));\r\n    }, [data, selected])\r\n\r\n    return (\r\n        <div className='report' >\r\n            <Spinner >\r\n                <Paper className='reportContainer'>\r\n                    <HeaderBar ><Typography className='text' variant=\"h6\">{props.header}</Typography><Dates /></HeaderBar>\r\n                    <div className='reportBody' id=\"cashierHistory\">\r\n                        <Select />\r\n                        <Tables />\r\n                    </div>\r\n                </Paper>\r\n            </Spinner>\r\n        </div >\r\n    );\r\n}\r\n\r\nconst DateLabel = styled.div`\r\n.MuiTypography-root{\r\ntext-align: left;\r\nfont-weight: bold;\r\ncolor: #004064;\r\nfont-size: 1.25em; \r\nmargin: 5px;\r\n}\r\n`;\r\n\r\nconst TableLabel = styled.div`\r\ndisplay: flex;\r\nflex-direction: row;\r\njustify-content: space-between;\r\ntext-align: left;\r\nbackground-color:#004064;\r\ncolor: white;\r\n\r\n.MuiTypography-body1 {\r\n    font-size: 1em;\r\n    margin-left: 5px;\r\n    margin-right: 5px;\r\n}\r\n\r\n`;\r\n","\r\nimport { useState, useEffect } from 'react'\r\nimport Typography from '@material-ui/core/Typography'\r\nimport useData from '../../../../lib/usedata/usedata';\r\nimport useDate from '../../../../lib/usedate/usedate';\r\nimport React from 'react';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport HeaderBar from './headerbar/headerbar'\r\nimport SimpleSelect from '../../../../lib/useselect/useselect'\r\nimport Table from '../../../../lib/table/table'\r\nimport * as d from \"../../../../lib/datafns\"\r\nimport { ReportProps } from './logic';\r\n\r\nexport default function ExpiryDates(props: ReportProps) {\r\n\r\n    const {\r\n        startDate,\r\n        endDate,\r\n        Dates\r\n    } = useDate();\r\n\r\n    const {\r\n        data,\r\n        Spinner\r\n    } = useData(`/api/expiry/${props.db}/${startDate}/${endDate}`);\r\n\r\n\r\n    return (\r\n        <div className='report'>\r\n            <Spinner>\r\n                <Paper className='reportContainer'>\r\n                    <HeaderBar ><Typography className='text' variant=\"h6\">{props.header}</Typography><Dates /></HeaderBar>\r\n                    <div className='reportBody'>\r\n                        <Table data={data} />\r\n                    </div>\r\n                </Paper>\r\n            </Spinner>\r\n        </div>\r\n    );\r\n}","import { useState, useEffect } from 'react'\r\nimport Typography from '@material-ui/core/Typography'\r\nimport useData from '../../../../lib/usedata/usedata';\r\nimport useDate from '../../../../lib/usedate/usedate';\r\nimport React from 'react';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport HeaderBar from './headerbar/headerbar'\r\nimport SimpleSelect from '../../../../lib/useselect/useselect'\r\nimport Table from '../../../../lib/table/table'\r\nimport { ReportProps } from './logic'\r\nexport default function PriceOverride(props: ReportProps) {\r\n\r\n    const {\r\n        startDate,\r\n        endDate,\r\n        Dates\r\n    } = useDate();\r\n\r\n    const {\r\n        data,\r\n        Spinner\r\n    } = useData(`/api/priceoverride/${props.db}/${startDate}/${endDate}`);\r\n\r\n    return (\r\n        <div className='PriceOverride'>\r\n            <Spinner>\r\n                <Paper className='reportContainer'>\r\n                    <HeaderBar ><Typography className='text' variant=\"h6\">{props.header}</Typography><Dates /></HeaderBar>\r\n                    <div className='reportBody'>\r\n                        <Table data={data} />\r\n                    </div>\r\n                </Paper>\r\n            </Spinner>\r\n        </div>\r\n    );\r\n}\r\n","import { useState, useEffect } from 'react'\r\nimport Typography from '@material-ui/core/Typography'\r\nimport useData from '../../../../lib/usedata/usedata';\r\nimport useDate from '../../../../lib/usedate/usedate';\r\nimport React from 'react';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport HeaderBar from './headerbar/headerbar'\r\nimport SimpleSelect from '../../../../lib/useselect/useselect'\r\nimport Table from '../../../../lib/table/table'\r\nimport { ReportProps } from './logic'\r\nexport default function Refund(props: ReportProps) {\r\n\r\n    const {\r\n        startDate,\r\n        endDate,\r\n        Dates\r\n    } = useDate();\r\n\r\n    const {\r\n        data,\r\n        Spinner\r\n    } = useData(`/api/refund/${props.db}/${startDate}/${endDate}`);\r\n\r\n    return (\r\n        <div className='report'>\r\n            <Spinner>\r\n                <Paper className='reportContainer'>\r\n                    <HeaderBar ><Typography className='text' variant=\"h6\">{props.header}</Typography><Dates /></HeaderBar>\r\n                    <div className='reportBody'>\r\n                        <Table data={data} />\r\n                    </div>\r\n                </Paper>\r\n            </Spinner>\r\n        </div>\r\n    );\r\n}","import React from 'react';\r\n\r\nimport * as d from \"../../datafns\";\r\nimport * as _ from './logic';\r\n\r\nexport default function Legend(props: { chartData: _.ChartData }) {\r\n    if (d.notEmpty(props.chartData.datasets)) {\r\n        let colorStrings = props.chartData.datasets[0].backgroundColor;\r\n        let labels = props.chartData.labels\r\n        let legendItems = colorStrings.map((c: string, key: number) => {\r\n            return <div key={key++} className='legendItem'>\r\n                <span key={key++} className=\"dot\" style={{ backgroundColor: c }}></span>\r\n                <label key={key++} className=\"label\" >{labels[colorStrings.indexOf(c)]}</label>\r\n            </div>\r\n        })\r\n        return <div className=\"Legend\">\r\n            <ul>{legendItems}</ul>\r\n            <div className=\"cover-bar\"></div>\r\n        </div>;\r\n    }\r\n    else return <div></div>\r\n}","\r\nexport function viewport(small: number, large: number) {\r\n  return (window.innerWidth > 1024) ? small : large;\r\n}\r\n\r\nexport function toInt(s: string | number): number {\r\n  if (typeof s === 'number')\r\n    return s\r\n  else {\r\n    let chars = [...s]\r\n    let byteArr = chars.map((c: string) => { return c.charCodeAt(0) })\r\n    return parseInt(byteArr.join(\"\"), 10)\r\n  }\r\n}\r\n\r\nexport function colors(subArr: number[]) {\r\n  let colors = [\r\n    'rgba(0,0,0, 0.6)',\r\n    'rgba(128,128,128, 0.6)',\r\n    'rgba(128,128,0, 0.6)',\r\n    'rgba(128,0,128, 0.6)',\r\n    'rgba(128,0,0, 0.6)',\r\n    'rgba(0,128,128, 0.6)',\r\n    'rgba(0,128,0, 0.6)',\r\n    'rgba(0,0,128, 0.6)',\r\n    'rgba(255,255,255, 0.6)',\r\n    'rgba(255,255,0, 0.6)',\r\n    'rgba(255,0,255, 0.6)',\r\n    'rgba(255,0,0, 0.6)',\r\n    'rgba(0,255,255, 0.6)',\r\n    'rgba(0,255,0, 0.6)',\r\n    'rgba(0,0,255, 0.6)',\r\n    'rgba(255,255,128, 0.6)',\r\n    'rgba(255,128,255, 0.6)',\r\n    'rgba(255,128,128, 0.6)',\r\n    'rgba(128,255,255, 0.6)',\r\n    'rgba(128,255,128, 0.6)',\r\n    'rgba(128,128,255, 0.6)',\r\n    'rgba(128,0,255, 0.6)',\r\n    'rgba(0,128,255, 0.6)',\r\n    'rgba(255,128,0, 0.6)',\r\n    'rgba(64,64,64, 0.6)',\r\n    'rgba(192,192,192, 0.6)',\r\n    'rgba(192,192,64, 0.6)',\r\n    'rgba(192,64,192, 0.6)',\r\n    'rgba(192,64,64, 0.6)',\r\n    'rgba(64,192,192, 0.6)',\r\n    'rgba(64,192,64, 0.6)',\r\n    'rgba(64,64,192, 0.6)',\r\n    'rgba(255,255,64, 0.6)',\r\n    'rgba(255,64,255, 0.6)',\r\n    'rgba(255,64,64, 0.6)',\r\n    'rgba(64,255,255, 0.6)',\r\n    'rgba(64,255,64, 0.6)',\r\n    'rgba(64,64,255, 0.6)',\r\n    'rgba(255,255,192, 0.6)',\r\n    'rgba(255,192,255, 0.6)',\r\n    'rgba(255,192,192, 0.6)',\r\n    'rgba(192,255,255, 0.6)',\r\n    'rgba(192,255,192, 0.6)',\r\n    'rgba(192,192,255, 0.6)',\r\n    'rgba(192,64,255, 0.6)',\r\n    'rgba(64,192,255, 0.6)',\r\n    'rgba(255,192,64, 0.6)',\r\n    'rgba(64,64,0, 0.6)',\r\n    'rgba(64,0,64, 0.6)',\r\n    'rgba(64,0,0, 0.6)',\r\n    'rgba(0,64,64, 0.6)',\r\n    'rgba(0,64,0, 0.6)',\r\n    'rgba(0,0,64, 0.6)',\r\n    'rgba(192,192,0, 0.6)',\r\n    'rgba(192,0,192, 0.6)',\r\n    'rgba(192,0,0, 0.6)',\r\n    'rgba(0,192,192, 0.6)',\r\n    'rgba(0,192,0, 0.6)',\r\n    'rgba(0,0,192, 0.6)',\r\n    'rgba(64,0,192, 0.6)',\r\n    'rgba(0,64,192, 0.6)',\r\n    'rgba(192,64,0, 0.6)',\r\n    'rgba(102,51,0, 0.6)',\r\n    'rgba(255,229,204, 0.6)',\r\n    'rgba(255,153,153, 0.6)',\r\n  ];\r\n  return subArr.map(i => { return colors[colors.length - (i % colors.length) - 1] });\r\n}","import '../style.scss';\r\n\r\nimport React from 'react';\r\nimport { Pie } from 'react-chartjs-2';\r\n\r\nimport * as d from '../../datafns';\r\nimport Legend from './legend';\r\nimport * as _ from './logic';\r\n\r\nexport default function PieChart(props: { data: d.obj[], groupBy: string, values: string }) {\r\n  let grouped = d.sumAndGroup(props.data, props.groupBy);\r\n  let x: number[] = d.getColumn(grouped, props.values) as number[]\r\n  let labels: string[] = d.getColumn(grouped, props.groupBy) as string[]\r\n  let colorIds: number[] = d.notEmpty(props.data) ? labels.map(s => { return _.toInt(s) }) : []\r\n  let chartData: _.ChartData = _.formatChartData(x, labels, colorIds)\r\n  let total = x.reduce((acc, n) => { return acc + n })\r\n  let toolTipSize = _.viewport(12, 12)\r\n  if (d.notEmpty(chartData.datasets))\r\n    return (\r\n      <div className=\"PieChart\">\r\n        <div className=\"chart\">\r\n          <Pie\r\n            height={1} width={1}\r\n            data={chartData}\r\n            options={\r\n              {\r\n                layout: {\r\n                },\r\n                labels: { display: false },\r\n                legend: {\r\n                  display: false,\r\n                  position: 'top',\r\n                  align: 'center',\r\n                  labels: {\r\n                    usePointStyle: true,\r\n                    fontSize: 24\r\n                  },\r\n                  fullWidth: true\r\n                },\r\n                tooltips: {\r\n                  bodyFontSize: toolTipSize,\r\n                  mode: 'index',\r\n                  callbacks: {\r\n                    label: (tooltipItem: any, data: _.ChartData) => {\r\n                      var label = data.labels[tooltipItem.index];\r\n                      return label;\r\n                    },\r\n                    afterLabel: (tooltipItem: any, data: _.ChartData) => {\r\n                      var value = data.datasets[tooltipItem.datasetIndex].data[tooltipItem.index];\r\n                      var percent: number | string = data.datasets[tooltipItem.datasetIndex].data[tooltipItem.index] / total * 100;\r\n                      percent = percent.toFixed(2); // make a nice string\r\n                      return (!Number.isInteger(value)) ? '£ ' + value.toFixed(2) + ' (' + percent + '%)' : value + ' (' + percent + '%)';\r\n                    }\r\n                  },\r\n                  fontSize: 24\r\n                }\r\n              }\r\n            }\r\n          />\r\n        </div>\r\n        <Legend chartData={chartData} />\r\n      </div>\r\n    )\r\n  else return (\r\n    <div className=\"chart\">\r\n      <Pie\r\n        data={chartData}\r\n      />\r\n    </div>\r\n  )\r\n}","import {colors} from '../logic'\r\nexport * from \"../logic\"\r\n\r\nexport interface DataSet {\r\n  label: string\r\n  data: number[]\r\n  backgroundColor: string[]\r\n}\r\n\r\nexport interface ChartData {\r\n  labels: string[]\r\n  datasets: DataSet[]\r\n}\r\n\r\n\r\nexport function formatChartData(x: number[], labels: string[], colorIds: number[]): ChartData {\r\n  return {\r\n    labels: labels,\r\n    datasets: [\r\n      {\r\n        label: 'Net Sales £',\r\n        data: x,\r\n        backgroundColor: colors(colorIds)\r\n      }\r\n    ]\r\n  };\r\n}\r\n\r\n","import { ChartData } from \"./logic\";\r\nimport React from \"react\"\r\n\r\nexport default function Legend(props: { chartData: ChartData }) {\r\n    let key = 0;\r\n    let colorStrings = props.chartData.datasets.map(i => { return i.backgroundColor });\r\n    let labels = props.chartData.datasets.map(i => { return i.label });\r\n    let legendItems = colorStrings.map(c => {\r\n        return <div key={key++} className='legendItem'>\r\n            <span key={key++} className=\"dot\" style={{ backgroundColor: c }}></span>\r\n            <label key={key++} className=\"label\" >{labels[colorStrings.indexOf(c)]}</label>\r\n        </div>\r\n    })\r\n    return <div className=\"Legend\">\r\n        <ul>{legendItems}</ul>\r\n        <div className=\"cover-bar\"></div>\r\n    </div>;\r\n}","import React from 'react';\r\nimport { Bar } from 'react-chartjs-2';\r\n\r\nimport * as d from '../../datafns';\r\nimport Legend from './legend';\r\nimport { ChartData, formatChartData, getLabelSize, viewport } from './logic';\r\nimport \"../style.scss\"\r\n\r\nexport default function StackedBarChart(props: { className?: string, data: d.obj[], x: string[], groupBy: string, values: string }) {\r\n\r\n  let { data, x, groupBy, values } = props\r\n  let chartData: ChartData = formatChartData(data, x, groupBy, values)\r\n  let total = d.sumColumn(data, values)\r\n  let labelSize = getLabelSize()\r\n\r\n  if (chartData.datasets !== undefined)\r\n    return (\r\n      <div className=\"BarChart\">\r\n        <div className=\"chart\">\r\n          <Bar\r\n            data={chartData}\r\n            options={\r\n              {\r\n                scales: {\r\n                  xAxes: [{\r\n                    stacked: true,\r\n                    ticks:\r\n                    {\r\n                      fontSize: labelSize\r\n                    },\r\n                  },\r\n                  ],\r\n                  yAxes: [{\r\n                    stacked: true,\r\n                    ticks:\r\n                    {\r\n                      fontSize: labelSize\r\n                    }\r\n                  }]\r\n                },\r\n                labels: {\r\n                  display: false,\r\n                  fontSize: 24\r\n                },\r\n                legend: {\r\n                  display: false,\r\n                  position: 'right',\r\n                  align: 'center',\r\n                  labels: {\r\n                    usePointStyle: true,\r\n                  },\r\n                  fullWidth: true\r\n                },\r\n                tooltips: {\r\n                  bodyFontSize: viewport(12, 12),\r\n                  mode: 'single',\r\n                  callbacks: {\r\n                    label: (tooltipItem: any, data: ChartData) => {\r\n                      let item = data.datasets[tooltipItem.datasetIndex]\r\n                      var label = item.label;\r\n                      if (item.data[tooltipItem.index] > 0)\r\n                        return label;\r\n                      else return '';\r\n                    },\r\n                    afterLabel: (tooltipItem: any, data: ChartData) => {\r\n                      let item = data.datasets[tooltipItem.datasetIndex]\r\n                      var sales = item.data[tooltipItem.index];\r\n                      var percent: number = item.data[tooltipItem.index] / total * 100;\r\n                      var percentString = percent.toFixed(2); // make a nice string\r\n                      if (item.data[tooltipItem.index] > 0)\r\n                        return (!Number.isInteger(sales)) ? '£ ' + sales.toFixed(2) + ' (' + percentString + '%)' : sales + ' (' + percentString + '%)';\r\n                      else return '';\r\n                    }\r\n                  },\r\n                }\r\n              }\r\n            }\r\n          />\r\n        </div>\r\n        <Legend chartData={chartData} />\r\n      </div>\r\n    )\r\n  else return (\r\n    <div className=\"chart\">\r\n      <Bar\r\n        data={chartData}\r\n      />\r\n    </div>\r\n  )\r\n\r\n}\r\n","import {\r\n    notEmpty,\r\n    getUniqueValues,\r\n    obj,\r\n    getElementsWithValue,\r\n    getColumn,\r\n} from \"../../datafns\"\r\n\r\nimport { colors, toInt, viewport } from \"../logic\"\r\n\r\nexport * from \"../logic\"\r\n\r\nexport function getLabelSize(): number {\r\n    return viewport(12, 12);\r\n}\r\n\r\nexport interface DataSet {\r\n    label: string,\r\n    data: number[],\r\n    backgroundColor: string,\r\n    datasetKeyProvider: number\r\n}\r\n\r\nexport interface ChartData {\r\n    labels: string[],\r\n    datasets: DataSet[]\r\n}\r\n\r\nexport function formatChartData(data: obj[], x: string[], groupBy: string, values: string): ChartData {\r\n    // let stacks = d.getUniqueValues(data, groupBy);\r\n    let stackNames: string[] = getUniqueValues(data, groupBy);\r\n    let stackIds: number[] = stackNames.map(s => { return toInt(s) })\r\n    let clrs: string[] = colors(stackIds)\r\n    let dataSets = stackNames.map((name, index) => {\r\n        let color: string = clrs[index]\r\n        let valuesArr: number[] = x.map((t: string) => {\r\n            let atHour: obj[] = getElementsWithValue(data, 'TillHour', t);\r\n            let withCategory: obj[] = getElementsWithValue(atHour, groupBy, stackNames[index]);\r\n            let withValue: number[] = getColumn(withCategory, values) as number[];\r\n            return notEmpty(withCategory) ? withValue.reduce((acc, n) => acc + n) : 0;\r\n        })\r\n        return {\r\n            label: stackNames[stackNames.indexOf(name)] as string,\r\n            data: valuesArr,\r\n            backgroundColor: color,\r\n            datasetKeyProvider: index\r\n        }\r\n    });\r\n    return {\r\n        labels: x,\r\n        datasets: dataSets\r\n    };\r\n}","import './style.scss';\r\n\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Radio from '@material-ui/core/Radio';\r\nimport RadioGroup from '@material-ui/core/RadioGroup';\r\nimport React, { ChangeEvent, SetStateAction } from 'react';\r\n\r\nexport default function RadioButtons(props: { value: string, handleChange: (e: ChangeEvent<HTMLInputElement>) => void }) {\r\n\r\n    return (\r\n        <div className= \"RadioButtons\">\r\n            <FormControl component=\"fieldset\">\r\n                <RadioGroup color=\"#004064\" aria-label=\"gender\" name=\"gender1\" value={props.value} onChange={props.handleChange}>\r\n                    <FormControlLabel color=\"#004064\" value=\"Sales\" control={<Radio />} label=\"Sales\" />\r\n                    <FormControlLabel color=\"#004064\" value=\"Profit\" control={<Radio />} label=\"Profit\" />\r\n                    <FormControlLabel color=\"#004064\" value=\"Qty\" control={<Radio />} label=\"Quantity\" />\r\n                </RadioGroup>\r\n            </FormControl>\r\n        </div>\r\n    );\r\n}\r\n\r\n","import './style.scss';\r\nimport 'date-fns';\r\nimport useSelect from '../../../../../lib/useselect/useselect'\r\nimport CalendarTodayIcon from '@material-ui/icons/CalendarToday';\r\nimport { Paper, Container, Typography } from '@material-ui/core';\r\nimport { BarChart as BarChartIcon, PieChart as PieChartIcon } from '@material-ui/icons';\r\nimport React, { SetStateAction, useContext, useEffect, useState } from 'react';\r\n\r\nimport PieChart from '../../../../../lib/chart/piechart/piechart';\r\nimport StackedBarChart from '../../../../../lib/chart/stackedbarchart/bar_chart';\r\nimport * as d from '../../../../../lib/datafns';\r\nimport Table from '../../../../../lib/table/table';\r\nimport useData, { obj } from '../../../../../lib/usedata/usedata';\r\nimport useDate from '../../../../../lib/usedate/usedate';\r\nimport DropDown from '../../../../drop_down';\r\nimport HeaderBar from '../headerbar/headerbar';\r\nimport useIconSwitch from './icon_switch';\r\nimport RadioButtons from '../radio_buttons/radio_buttons.';\r\nimport { ReportProps } from '../logic';\r\nimport { formatTableData, GetChartProps } from './logic';\r\nimport Div from './style';\r\n\r\nexport function SalesBreakdown(props: ReportProps) {\r\n\r\n  const {\r\n    startDate,\r\n    endDate,\r\n    Dates,\r\n  } = useDate();\r\n\r\n  const { Select, selected } = useSelect(['Category', 'Product', 'PriceMark', 'Cashier', 'Receipt'], \"black\")\r\n\r\n  const { data, Spinner } = useData(`/api/salesByProduct/${props.db}/${startDate}/${endDate}`)\r\n\r\n  const [groupBy, setGroupBy] = useState<string>('Category');\r\n  const [total, setTotal] = useState<number>(0);\r\n  const [dataChoice, setDataChoice] = useState<string>('Sales');\r\n  const [tableData, setTableData] = useState<obj[]>([]);\r\n  const [chart, setChart] = useState('pie');\r\n  const {\r\n    IconSwitch\r\n  } = useIconSwitch(\r\n    [\r\n      { icon: <BarChartIcon />, callBack: setChart.bind(this, 'bar') },\r\n      { icon: <PieChartIcon />, callBack: setChart.bind(this, 'pie') }\r\n    ]\r\n  );\r\n\r\n  useEffect(() => {\r\n    setTableData(formatTableData(data, groupBy));\r\n    setTotal(d.sumColumn(data, dataChoice));\r\n  }, [groupBy, dataChoice, data]);\r\n\r\n  useEffect(() => {\r\n    setGroupBy(selected)\r\n  }, [selected])\r\n\r\n  function Total() {\r\n    return (\r\n      <div className='sales'>\r\n        <Select />\r\n        <RadioButtons\r\n          handleChange={(event: React.ChangeEvent<HTMLInputElement>) => setDataChoice(event.target.value)}\r\n          value={dataChoice} />\r\n        <h1>Total: {(dataChoice === 'Qty') ? total : '£' + total.toFixed(2)}</h1>\r\n      </div>);\r\n  }\r\n\r\n  function GetChart(props: GetChartProps) {\r\n    let barChartX = Array.from(Array(24).keys()).map(obj => { return ('0' + obj + ':00').slice(-5) })\r\n    return props.chart === 'pie' ? <PieChart data={data} groupBy={groupBy} values={dataChoice} />\r\n      : <StackedBarChart data={data} x={barChartX} groupBy={groupBy} values={dataChoice} />\r\n  }\r\n\r\n  return (\r\n    <div className=\"salesBreakdown\">\r\n      <Spinner >\r\n        <Paper className='reportContainer'>\r\n          <HeaderBar  >\r\n            <div className=\"left\">\r\n              <Typography className='text' variant=\"h6\"> {props.header}</Typography>\r\n              <Dates />\r\n              {/* <div><input type=\"date\"></input><CalendarTodayIcon /></div> */}\r\n            </div>\r\n            <div className=\"right\">\r\n              <IconSwitch />\r\n            </div>\r\n          </HeaderBar>\r\n          <div className='reportBody'>\r\n            <><Total /><GetChart chart={chart} /></>\r\n            <Table data={tableData} />\r\n          </div>\r\n        </Paper>\r\n      </Spinner >\r\n    </div>\r\n  );\r\n}","import React, { useState, useEffect, HTMLAttributes } from 'react';\r\n\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport BarChartIcon from '@material-ui/icons/BarChart';\r\nimport PieChartIcon from '@material-ui/icons/PieChart';\r\nimport { PropTypes } from '@material-ui/core';\r\n\r\nexport default function useIconSwitch(buttons: { icon: React.ReactNode, callBack: () => any }[]) {\r\n\r\n    const [a, b] = buttons;\r\n    const [icon, setIcon] = useState('a');\r\n\r\n    function handle() {\r\n        if (icon === 'a') {\r\n            setIcon('b');\r\n            a.callBack();\r\n        }\r\n        else {\r\n            setIcon('a');\r\n            b.callBack();\r\n        }\r\n    }\r\n\r\n    function IconSwitch() {\r\n        return <button className = \"IconSwitch\" onClick={handle}>{icon === 'a' ? a.icon : b.icon}</button>\r\n    }\r\n\r\n    return {\r\n        IconSwitch\r\n    }\r\n\r\n}","import React from 'react'\r\nimport * as d from \"../../../../../lib/datafns\"\r\n\r\n\r\nexport function formatTableData(data: d.obj[], groupBy: string): d.obj[] {\r\n    let format = d.sumAndGroup(data, groupBy, 'Id', 'CashierNum');\r\n    switch (groupBy) {\r\n        case 'PriceMark': return d.columns(format, 'PriceMark', 'Sales', 'Cost', 'Discount', 'Refund', 'Profit', 'Qty');\r\n        case 'Cashier': return d.columns(format, 'Cashier', 'Sales', 'Cost', 'Discount', 'Refund', 'Profit', 'Qty');\r\n        case 'Product': return d.columns(format, 'Product', 'Id', 'Category', 'PriceMark', 'Sales', 'Cost', 'Discount', 'Refund', 'Profit', 'Qty');\r\n        case 'Category': return d.columns(format, 'Category', 'Sales', 'Cost', 'Discount', 'Refund', 'Profit', 'Qty');\r\n        case 'Receipt': return d.columns(format, 'Receipt', 'Cashier', 'TillDate', 'TillTime', 'Sales', 'Cost', 'Discount', 'DsctReason', 'Refund', 'Profit', 'Qty');\r\n        default: return d.columns(format, 'Sales', 'Cost', 'Discount', 'Refund', 'Profit', 'Qty');\r\n    }\r\n}\r\n\r\nexport interface GetDateFieldProps {\r\n    chart: string\r\n}\r\n\r\nexport interface GetChartProps {\r\n    chart: string\r\n}\r\n\r\nexport interface SalesBreakdownProps {\r\n    header: string\r\n    db: string\r\n    display: React.Dispatch<any>\r\n    phoneDisplay: string\r\n}\r\n\r\nexport function convertPM(data: d.obj[]) {\r\n    let priceMark = d.addColumn(data, 'AssocProdID', 'PriceMark', (cell) => { return cell ? 'PM' : 'Non PM' });\r\n    priceMark.forEach(e => { Object.assign(e, { ['Profit']: (e['Sales'] - e['Discount'] - e['Cost']) }) });\r\n    return priceMark;\r\n}\r\n","import { ReportProps } from './logic'\r\nimport { useState, useEffect } from 'react'\r\nimport Typography from '@material-ui/core/Typography'\r\nimport useData from '../../../../lib/usedata/usedata';\r\nimport useDate from '../../../../lib/usedate/usedate';\r\nimport React from 'react';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport HeaderBar from './headerbar/headerbar'\r\nimport SimpleSelect from '../../../../lib/useselect/useselect'\r\nimport Table from '../../../../lib/table/table'\r\nexport default function StaffHours(props: ReportProps) {\r\n\r\n    const {\r\n        startDate,\r\n        endDate,\r\n        Dates\r\n    } = useDate();\r\n\r\n    const {\r\n        data,\r\n        Spinner\r\n    } = useData(`/api/staffhours/${props.db}/${startDate}/${endDate}`);\r\n\r\n    return (\r\n        <div className='report'>\r\n            <Spinner>\r\n                <Paper className='reportContainer'>\r\n                    <HeaderBar ><Typography className='text' variant=\"h6\">{props.header}</Typography><Dates /></HeaderBar>\r\n                    <div className='reportBody'>\r\n                        <Table data={data} />\r\n                    </div>\r\n                </Paper>\r\n            </Spinner>\r\n        </div>\r\n    );\r\n}","import React, { useEffect, useState } from 'react';\r\nimport useSpinner from \"../../../../lib/usespinner/usespinner\"\r\n\r\nexport interface obj {\r\n    [key: string]: any\r\n}\r\n\r\n\r\nexport default function useDataBuffer(route: string, rowsPerBuffer: number) {\r\n    const [data, setData] = useState([] as obj[])\r\n    const [bufferCount, setBufferCount] = useState(0)\r\n    const { Spinner, setLoading } = useSpinner()\r\n\r\n    async function fetchData() {\r\n        setLoading(true)\r\n        setBufferCount(0)\r\n        fetch(`${route}/${rowsPerBuffer}/${bufferCount}`)\r\n            .then(res => res.json())\r\n            .then(rows => setData(rows))\r\n            .catch(error => {\r\n                console.error(error)\r\n                setTimeout(1000)\r\n                fetchData()\r\n            })\r\n    }\r\n\r\n    async function fetchBuffer() {\r\n        setLoading(true)\r\n        fetch(`${route}/${rowsPerBuffer}/${bufferCount}`)\r\n            .then(res => res.json())\r\n            .then(rows => setData([...data, ...rows]))\r\n            .catch(error => {\r\n                console.log(error)\r\n                setTimeout(1000)\r\n                fetchBuffer()\r\n            })\r\n    }\r\n\r\n    useEffect(() => {\r\n        fetchBuffer()\r\n    }, [bufferCount])\r\n\r\n    useEffect(() => {\r\n        fetchData()\r\n    }, [route])\r\n\r\n    useEffect(() => {\r\n        setLoading(false)\r\n    }, [data])\r\n\r\n\r\n    function getNextBuffer() {\r\n        setBufferCount(bufferCount + 1)\r\n    }\r\n\r\n    return {\r\n        data,\r\n        getNextBuffer,\r\n        Spinner\r\n\r\n    }\r\n\r\n}","\r\nimport useDataBuffer from '../usedatabuffer'\r\nimport Table from '../../../../../lib/table/table'\r\nimport React, { useState, useContext } from 'react'\r\nimport { ctx } from './stockreport'\r\n\r\nexport default function NonScan() {\r\n\r\n    const [sort, setSort] = useState({ by: \"id\", order: \"desc\" })\r\n    const { db } = useContext(ctx)\r\n\r\n    const {\r\n        data,\r\n        getNextBuffer,\r\n        Spinner\r\n    } = useDataBuffer(`api/nonscan/${db}/${sort.by}/${sort.order}`, 100);\r\n\r\n    return <Spinner><Table data={data} bufferCallback={getNextBuffer} sortCallback={setSort} /></Spinner>\r\n}","import useDataBuffer from '../usedatabuffer'\r\nimport Table from '../../../../../lib/table/table'\r\nimport React, { useState, useContext } from 'react'\r\nimport { ctx } from './stockreport'\r\n\r\nexport default function Reorder() {\r\n    //NEXT: Implement sortCallBack in Table\r\n    const [sort, setSort] = useState({ by: \"id\", order: \"desc\" })\r\n    const { db } = useContext(ctx)\r\n\r\n    const {\r\n        data,\r\n        getNextBuffer,\r\n        Spinner\r\n    } = useDataBuffer(`api/reorder/${db}/${sort.by}/${sort.order}`, 100);\r\n\r\n    return <Spinner><Table data={data} bufferCallback={getNextBuffer} sortCallback={setSort} /></Spinner>\r\n}","import useDataBuffer from '../usedatabuffer'\r\nimport Table from '../../../../../lib/table/table'\r\nimport React, { useState, useContext } from 'react'\r\nimport { ctx } from './stockreport'\r\n\r\nexport default function Stock() {\r\n\r\n    const [sort, setSort] = useState({ by: \"id \", order: \"desc\" })\r\n    const { db } = useContext(ctx)\r\n\r\n    const {\r\n        data,\r\n        getNextBuffer,\r\n        Spinner\r\n    } = useDataBuffer(`api/stock/${db}/${sort.by}/${sort.order}`, 100);\r\n\r\n    return <Spinner><Table data={data} bufferCallback={getNextBuffer} sortCallback={setSort} /></Spinner>\r\n}","import useDataBuffer from '../usedatabuffer'\r\nimport Table from '../../../../../lib/table/table'\r\nimport React, { useState, useContext } from 'react'\r\nimport { ctx } from './stockreport'\r\nimport useDate from '../../../../../lib/usedate/usedate'\r\n\r\nexport default function StockAdjust() {\r\n\r\n    const [sort, setSort] = useState({ by: \"id\", order: \"desc\" })\r\n    const { db } = useContext(ctx)\r\n    const { startDate, endDate, Dates } = useDate();\r\n\r\n    const {\r\n        data,\r\n        getNextBuffer,\r\n        Spinner\r\n    } = useDataBuffer(`api/adjust/${db}/${startDate}/${endDate}/${sort.by}/${sort.order}`, 100);\r\n\r\n    return (<Spinner>\r\n        <Dates />\r\n        <Table data={data} bufferCallback={getNextBuffer} sortCallback={setSort} />\r\n    </Spinner>)\r\n}","import 'date-fns';\r\n\r\nimport Paper from '@material-ui/core/Paper';\r\nimport React, { useEffect, useState } from 'react';\r\n\r\nimport useSimpleSelect from '../../../../../lib/useselect/useselect';\r\nimport HeaderBar from '../headerbar/headerbar';\r\nimport { ReportProps } from '../logic';\r\nimport NonScan from './nonscan';\r\nimport Reorder from './reorder';\r\nimport Stock from './stock';\r\nimport StockAdjust from './stockadjust';\r\n\r\nexport const ctx = React.createContext({ db: \"itdepos\" })\r\n\r\nexport function StockReport(props: ReportProps) {\r\n\r\n    const { selected, Select } = useSimpleSelect(\r\n        [\r\n            \"Stock\",\r\n            \"Reorder\",\r\n            \"Non Scan\",\r\n            \"Stock Adjust\"\r\n        ],\r\n        \"white\"\r\n    );\r\n\r\n    function render() {\r\n        return (\r\n            <div className='StockReport'>\r\n                <Paper className='reportContainer'>\r\n                    <HeaderBar ><Select /></HeaderBar>\r\n                    <div className='reportBody'>\r\n                        <ctx.Provider value={{ db: props.db }}>\r\n                            <TableChoice selected={selected} db={props.db} />\r\n                        </ctx.Provider>\r\n                    </div>\r\n                </Paper>\r\n            </div>\r\n        );\r\n    }\r\n\r\n\r\n    function TableChoice(props: { selected: string, db: string }) {\r\n        switch (selected) {\r\n\r\n            case \"Stock\": return <Stock />\r\n            case \"Reorder\": return <Reorder />\r\n            case \"Non Scan\": return <NonScan />\r\n            case \"Stock Adjust\": return <StockAdjust />\r\n            default: return <Stock />\r\n        }\r\n    }\r\n\r\n    return render()\r\n}\r\n\r\n","import { ReportProps } from '../logic';\r\nimport 'date-fns';\r\nimport \"./vat.scss\"\r\n\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nimport HeaderBar from '../headerbar/headerbar';\r\nimport { columns, obj, removeColumns, sumAndGroup } from '../../../../../lib/datafns';\r\nimport Table from '../../../../../lib/table/table';\r\nimport useDate from '../../../../../lib/usedate/usedate';\r\nimport useData from '../../../../../lib/usedata/usedata';\r\n\r\n\r\nexport function VAT(props: ReportProps) {\r\n\r\n    const {\r\n        startDate,\r\n        endDate,\r\n        Dates,\r\n        ...date\r\n    } = useDate()\r\n\r\n    const { data, Spinner } = useData(`/api/VAT/${props.db}/${startDate}/${endDate}`)\r\n\r\n    const tableData = columns(data, 'VatRate', 'Receipt_No', 'Total_Sales', 'Quantity', 'Total_VAT', 'Nett')\r\n    const totalVat: obj[] = sumAndGroup(removeColumns(tableData, 'Receipt_No'), 'VatRate')\r\n    const receipts: obj[] = sumAndGroup(removeColumns(tableData, 'VatRate'), 'Receipt_No')\r\n\r\n    return (\r\n        <div className='report'>\r\n            <Spinner>\r\n                <Paper className='reportContainer'>\r\n                    <HeaderBar>\r\n                        <Typography className='text' variant=\"h6\">{props.header}</Typography>\r\n                        <Dates />\r\n                    </HeaderBar>\r\n                    <div className='reportBody'>\r\n                        <H1>Total VAT</H1>\r\n                        <div className=\"total\"> <Table data={totalVat} /></div>\r\n                        <H1>VAT Receipts</H1>\r\n                        <Table data={receipts} />\r\n                    </div>\r\n                </Paper>\r\n            </Spinner>\r\n        </div>\r\n    );\r\n\r\n}\r\n\r\nconst H1 = styled.h1`\r\n\r\ncolor: #004064;;\r\ntext-align:left;\r\nmargin-left: 1em;\r\nfont-size: 1em;\r\n\r\n`;\r\n\r\n\r\n","import { ReportProps } from './logic';\r\nimport { useState, useEffect } from 'react'\r\nimport Typography from '@material-ui/core/Typography'\r\nimport useData from '../../../../lib/usedata/usedata';\r\nimport useDate from '../../../../lib/usedate/usedate';\r\nimport React from 'react';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport HeaderBar from './headerbar/headerbar'\r\nimport SimpleSelect from '../../../../lib/useselect/useselect'\r\nimport Table from '../../../../lib/table/table'\r\n\r\nexport default function Wastage(props: ReportProps) {\r\n\r\n    const {\r\n        startDate,\r\n        endDate,\r\n        Dates\r\n    } = useDate();\r\n\r\n    const {\r\n        data,\r\n        Spinner\r\n    } = useData(`/api/wastage/${props.db}/${startDate}/${endDate}`);\r\n\r\n    return (\r\n        <div className='report'>\r\n            <Spinner>\r\n                <Paper className='reportContainer'>\r\n                    <HeaderBar ><Typography className='text' variant=\"h6\">{props.header}</Typography><Dates /></HeaderBar>\r\n                    <div className='reportBody'>\r\n                        <Table data={data} />\r\n                    </div>\r\n                </Paper>\r\n            </Spinner>\r\n        </div>\r\n    );\r\n}","\r\nimport React, { useState } from 'react';\r\nimport useNavBar from './navbar/navbar'\r\nimport { RouteComponentProps } from \"react-router-dom\"\r\nimport CashierHistory from './components/cashier_history'\r\nimport VoidSales from './components/cashier_history';\r\nimport CustomerCredit from './components/customer_credit';\r\nimport ExpiryDates from './components/expiry_dates';\r\nimport PriceOverride from './components/price_override';\r\nimport ProductExchange from './components/product_exchange';\r\nimport Refund from './components/refund';\r\nimport ReturnToSupplier from './components/return_to_supplier';\r\nimport { SalesBreakdown } from './components/salesbreakdown/sales_breakdown';\r\nimport StaffHours from './components/staff_hours';\r\nimport { StockReport } from './components/stockreport/stockreport';\r\nimport { VAT } from './components/vat_report/vat_report';\r\nimport VoucherSales from './components/voucher_sales';\r\nimport Wastage from './components/wastage';\r\n// import Div from './style';\r\nimport './style.scss'\r\n\r\nexport default function Reports(props: RouteComponentProps) {\r\n    const { db, NavBar } = useNavBar()\r\n    return (\r\n        <div className=\"reportspage\">\r\n            <NavBar />\r\n            < div className=\"reports\">\r\n                <SalesBreakdown header={'Sales Breakdown'} db={db} />\r\n                <StockReport id=\"stock\" header={'Stock'} db={db} />\r\n                <CashierHistory header={'Cashier History'} db={db} />\r\n                <VAT header={'VAT'} db={db} />\r\n                <PriceOverride header={'Price Override Report'} db={db} />\r\n                <Wastage header={'Wastage'} db={db} />\r\n                <Refund header={'Refund Report'} db={db} />\r\n                <StaffHours header={'Staff Hours'} db={db} />\r\n                <ExpiryDates header={'Expiry Dates'} db={db} />\r\n\r\n                {/* <VoidSales header={'Void Sales'} db={db} /> */}\r\n                {/* <ReturnToSupplier header={'Return To Supplier'} db={db} />\r\n                <CustomerCredit header={'Customer Credit'} db={db} />\r\n                <ProductExchange header={'Product Exchange'} db={db} />\r\n                <VoucherSales header={'Voucher Sales'} db={db} /> */}\r\n            </div>\r\n        </div >\r\n    )\r\n}\r\n","import TestRoute from \"./testroute\"\r\nimport \"./sandbox.scss\"\r\nimport './App.scss';\r\nimport 'typeface-roboto';\r\nimport Container from \"@material-ui/core/Container\"\r\nimport useStyles from './style'\r\nimport React from 'react';\r\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\r\nimport SandBox from \"./sandbox\"\r\n\r\nimport Login from './components/pages/login/login';\r\nimport Reports from './components/pages/reports/reports';\r\n\r\nfunction App() {\r\n  const classes = useStyles()\r\n  document.body.style.zoom = \"1.0\"\r\n  return (\r\n    <div className={classes.app} >\r\n      <link rel=\"stylesheet\" href=\"https://fonts.googleapis.com/icon?family=Material+Icons\" />\r\n      <meta name=\"viewport\" content=\"width=600, initial-scale=1 maximum-scale=1\" />\r\n\r\n      <Router>\r\n        <Route path=\"/reports\" exact={true} render={props => {\r\n          if (!localStorage.id) { props.history.replace(\"/\")} else return <Reports {...props} />\r\n        }} />\r\n\r\n        <Route path=\"/\" exact={true} render={(props) => <Login {...props} />} />\r\n      </Router>\r\n\r\n      {/* <Router>\r\n        <Route path=\"/\" exact={true} render={props => <TestRoute {...props} />} />\r\n        <Route path=\"/sandbox\" exact={true} render={props => <SandBox {...props} />} />\r\n      </Router> */}\r\n\r\n    </div >\r\n  );\r\n}\r\n\r\nexport default App;\r\n//","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}