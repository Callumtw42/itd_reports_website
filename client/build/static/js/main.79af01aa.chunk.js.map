{"version":3,"sources":["style.ts","components/pages/login/copyright.tsx","components/pages/login/style.ts","components/pages/login/login.tsx","components/pages/login/logic.tsx","lib/useselect/style.ts","lib/useselect/useselect.tsx","lib/usedata.tsx","components/pages/reports/navbar/navbar.tsx","components/pages/reports/navbar/usedbmenu/useDBMenu.tsx","lib/datafns.tsx","lib/usedate/logic.tsx","lib/usedate/usedate.tsx","components/pages/reports/components/headerbar/headerbar.tsx","lib/table/style.ts","components/functions.js","lib/table/logic.tsx","lib/table/tablehead.tsx","lib/table/table.tsx","components/pages/reports/components/cashier_history.tsx","components/pages/reports/components/expiry_dates.tsx","components/pages/reports/components/price_override.tsx","components/pages/reports/components/refund.tsx","lib/chart/piechart/legend.tsx","lib/chart/logic.tsx","lib/chart/piechart/piechart.tsx","lib/chart/piechart/logic.tsx","lib/chart/stackedbarchart/legend.tsx","lib/chart/stackedbarchart/bar_chart.tsx","lib/chart/stackedbarchart/logic.tsx","components/pages/reports/components/radio_buttons/radio_buttons..tsx","components/pages/reports/components/salesbreakdown/sales_breakdown.tsx","components/pages/reports/components/salesbreakdown/icon_switch.tsx","components/pages/reports/components/salesbreakdown/logic.tsx","components/pages/reports/components/staff_hours.tsx","components/pages/reports/components/usedatabuffer.tsx","components/pages/reports/components/stockreport/stock.tsx","components/pages/reports/components/stockreport/reorder.tsx","components/pages/reports/components/stockreport/nonscan.tsx","components/pages/reports/components/stockreport/stockadjust.tsx","components/pages/reports/components/stockreport/stockreport.tsx","components/pages/reports/components/vat_report.tsx","components/pages/reports/components/wastage.tsx","components/pages/reports/reports.tsx","App.tsx","serviceWorker.js","index.js"],"names":["useStyles","makeStyles","theme","app","flexGrow","backgroundColor","Copyright","Typography","variant","color","align","to","Date","getFullYear","papersurround","margin","width","paper","marginTop","spacing","padding","display","flexDirection","alignItems","avatar","height","form","submit","background","error","Login","props","classes","useState","username","setUsername","password","setPassword","data","setData","a","console","log","fetch","process","method","headers","body","JSON","stringify","then","res","json","catch","login","useLogin","history","push","Paper","className","Container","component","maxWidth","CssBaseline","Avatar","src","alt","noValidate","TextField","required","fullWidth","id","label","name","autoComplete","autoFocus","onChange","e","target","value","type","toString","Button","onClick","bind","this","Grid","container","item","xs","Link","href","Box","mt","Div","styled","div","useSimpleSelect","items","React","selected","setSelected","useEffect","Select","FormControl","displayEmpty","renderValue","map","s","index","MenuItem","key","onMouseDown","useData","url","fetchData","err","useNavBar","DBList","setDBList","useSelect","schema_name","createDBList","useDBMenu","db","setDb","NavBar","position","notEmpty","length","getColumn","col","sumColumn","reduce","acc","n","removeColumns","_data","parse","c","columns","cols","en","Object","assign","sumAndGroup","dontSum","groups","getUniqueValues","split","getElementsWithValue","sumObjectsByKey","obj1","obj2","keys","forEach","k","includes","grouped","arr","uniqueVals","Set","add","v","filter","todaysDate","today","getMonth","slice","getDate","formatDate","date","d","useDate","start","end","setDate","DateField","defaultValue","handleChange","startDate","endDate","Dates","currentTarget","HeaderBar","children","EmptyMessage","EnhancedTableHead","order","orderBy","onRequestSort","headCells","setHeadCells","numeric","disablePadding","TableHead","TableRow","headCell","TableCell","sortDirection","property","event","TableSortLabel","active","direction","head","EnhancedTable","displayBuffer","setDisplayBuffer","setOrder","setOrderBy","rowCount","setRowCount","rows","setRows","bufferCount","setBufferCount","Buffer","f","values","Math","round","bufferCallback","Table","stickyHeader","aria-labelledby","size","aria-label","isAsc","sortCallback","by","textContent","firstChild","sorted","sort","ord","b","_","toFixed","TableBody","row","hover","role","tabIndex","CashierHistory","tableData","setTableData","formatTableData","cashier","ordstr","sortByProperty","Tables","lastDate","DateLabel","TableLabel","header","ExpiryDates","PriceOverride","Refund","Legend","chartData","datasets","colorStrings","labels","legendItems","style","indexOf","viewport","small","large","window","innerWidth","toInt","byteArr","charCodeAt","parseInt","join","colors","subArr","i","PieChart","groupBy","x","colorIds","total","toolTipSize","options","layout","legend","usePointStyle","fontSize","tooltips","bodyFontSize","mode","callbacks","tooltipItem","afterLabel","datasetIndex","percent","Number","isInteger","StackedBarChart","stackNames","clrs","dataSets","valuesArr","t","atHour","withCategory","withValue","datasetKeyProvider","formatChartData","labelSize","undefined","scales","xAxes","stacked","ticks","yAxes","sales","percentString","RadioButtons","RadioGroup","FormControlLabel","control","Radio","SalesBreakdown","setGroupBy","setTotal","dataChoice","setDataChoice","chart","setChart","IconSwitch","buttons","icon","setIcon","handle","callBack","useIconSwitch","BarChart","Total","GetChart","barChartX","Array","from","obj","format","StaffHours","useDataBuffer","route","rowsPerBuffer","getNextBuffer","Stock","setSort","useContext","ctx","Reorder","NonScan","StockAdjust","createContext","StockReport","TableChoice","Provider","VAT","totalVat","receipts","H1","h1","Wastage","Reports","App","document","zoom","rel","content","path","exact","render","Boolean","location","hostname","match","ReactDOM","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"0ZAQeA,EANGC,aAAW,SAACC,GAAD,MAAY,CACvCC,IAAK,CACHC,SAAU,EACVC,gBAAiB,e,0GCDN,SAASC,IACpB,OACI,kBAACC,EAAA,EAAD,CAAYC,QAAQ,QAAQC,MAAM,gBAAgBC,MAAM,UACnD,kBACD,kBAAC,IAAD,CAAMD,MAAM,UAAUE,GAAG,2BAAzB,gBAEE,KACD,IAAIC,MAAOC,cACX,K,oCCVN,IAAMb,EAAYC,aAAW,SAACC,GAAD,MAAY,CAC9CY,cAAe,CACbC,OAAQ,OACRC,MAAO,SAGTC,MAAO,CACLC,UAAWhB,EAAMiB,QAAQ,GACzBC,QAAS,OACTC,QAAS,OACTC,cAAe,SACfC,WAAY,UAGdC,OAAQ,CACNT,OAAQb,EAAMiB,QAAQ,GACtBC,QAASlB,EAAMiB,QAAQ,GACvBd,gBAAiB,UACjBW,MAAO,QACPS,OAAQ,SAGVC,KAAM,CACJV,MAAO,OACPE,UAAWhB,EAAMiB,QAAQ,IAG3BQ,OAAQ,CACNZ,OAAQb,EAAMiB,QAAQ,EAAG,EAAG,GAC5BV,MAAO,QACPmB,WAAY,WAGdC,MAAO,CACLpB,MAAO,OAGT,6BAA8B,CAC7BiB,KAAK,CACHV,MAAO,aCvBG,SAASc,EAAMC,GAC5B,IAAMC,EAAUhC,IADwC,ECX3C,WAAqB,IAAD,EACCiC,mBAAS,IADV,mBACxBC,EADwB,KACdC,EADc,OAECF,mBAAS,IAFV,mBAExBG,EAFwB,KAEdC,EAFc,OAGPJ,mBAAqB,IAHd,mBAGxBK,EAHwB,KAGlBC,EAHkB,iDAK/B,WAAqBL,EAAkBE,GAAvC,SAAAI,EAAA,sDACIC,QAAQC,IAAIR,GACZO,QAAQC,IAAIN,GAEZO,MAAM,GAAD,OAAIC,0CAAJ,aAA6C,CAC9CC,OAAQ,OACRC,QAAS,CACL,OAAU,mBACV,eAAgB,oBAEpBC,KAAMC,KAAKC,UAAU,CAAEf,SAAUA,EAAUE,SAAUA,MAEpDc,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MAAK,SAAAZ,GACFC,EAAQD,MAEXe,OAAM,SAACxB,GAAD,OAAWY,QAAQC,IAAIb,MAhBtC,4CAL+B,sBAuB/B,MAAO,CACHM,cACAE,cACAC,OACAC,UACAe,MA5B2B,8CA6B3BpB,WACAE,YDjBgEmB,GAA9DD,EAFgD,EAEhDA,MAAOhB,EAFyC,EAEzCA,KAAMF,EAFmC,EAEnCA,SAAUC,EAFyB,EAEzBA,YAAaH,EAFY,EAEZA,SAAUC,EAFE,EAEFA,YAItD,OAFIG,EAAK,IAAMA,EAAK,GAAL,IAAeP,EAAMyB,QAAQC,KAAd,YAG5B,kBAACC,EAAA,EAAD,CAAOC,UAAW3B,EAAQlB,eACxB,kBAAC8C,EAAA,EAAD,CAAWC,UAAU,OAAOC,SAAS,KAAKH,UAAW3B,EAAQf,OAC3D,kBAAC8C,EAAA,EAAD,MACA,yBAAKJ,UAAW3B,EAAQf,OACtB,kBAACV,EAAA,EAAD,gBACA,kBAACyD,EAAA,EAAD,CAAQL,UAAW3B,EAAQR,QAEzB,yBAAKyC,IAAI,cAAcC,IAAI,UAE7B,kBAAC3D,EAAA,EAAD,CAAYsD,UAAU,KAAKrD,QAAQ,MAAnC,WAGA,0BAAMmD,UAAW3B,EAAQN,KAAMyC,YAAU,GACvC,kBAACC,EAAA,EAAD,CACE5D,QAAQ,WACRO,OAAO,SACPsD,UAAQ,EACRC,WAAS,EACTC,GAAG,QACHC,MAAM,gBACNC,KAAK,QACLC,aAAa,QACbC,WAAS,EACTC,SAAU,SAACC,GAAD,OAAO1C,EAAY0C,EAAEC,OAAOC,UAExC,kBAACX,EAAA,EAAD,CACE5D,QAAQ,WACRO,OAAO,SACPsD,UAAQ,EACRC,WAAS,EACTG,KAAK,WACLD,MAAM,WACNQ,KAAK,WACLT,GAAG,WACHG,aAAa,mBACbE,SAAU,SAACC,GAAD,OAAOxC,EAAYwC,EAAEC,OAAOC,UAGxC,kBAACxE,EAAA,EAAD,CAAYoD,UAAW3B,EAAQH,OAAQS,EAAK2C,YAC5C,kBAACC,EAAA,EAAD,CACEZ,WAAS,EACT9D,QAAQ,YACRmD,UAAW3B,EAAQL,OACnBwD,QAAS7B,EAAM8B,KAAKC,KAAMnD,EAAUE,IAJtC,WAQA,kBAACkD,EAAA,EAAD,CAAMC,WAAS,GACb,kBAACD,EAAA,EAAD,CAAME,MAAI,EAACC,IAAE,GACX,kBAACC,EAAA,EAAD,CAAMC,KAAK,IAAInF,QAAQ,SAAvB,qBAIF,kBAAC8E,EAAA,EAAD,CAAME,MAAI,GACR,kBAACE,EAAA,EAAD,CAAMC,KAAK,IAAInF,QAAQ,SACpB,sCAMX,kBAACoF,EAAA,EAAD,CAAKC,GAAI,GACP,kBAACvF,EAAD,S,y5BErFV,IA6CewF,EA7CHC,IAAOC,IAAV,KACI,SAACjE,GAAD,OAAWA,EAAMtB,SCKf,SAASwF,EAAgBC,EAAiBzF,GAAiB,IAAD,EAErC0F,IAAMlE,SAClCiE,EAAM,GACAA,EAAM,GACN,SAL2D,mBAE9DE,EAF8D,KAEpDC,EAFoD,KA4CrE,OApCAC,qBAAU,WACW,UAAbF,GAAwBF,EAAM,IAC9BG,EAAYH,EAAM,MACvB,CAACA,IAiCG,CACHE,WACAG,OAnBJ,SAAgBxE,GACZ,OACI,kBAAC,EAAD,CAAKtB,MAAOA,EAAOkD,UAAU,UACzB,kBAAC6C,EAAA,EAAD,KACI,kBAAC,IAAD,CACIzB,MAAO,GACP0B,cAAY,EACZjC,MAAO4B,EACPM,YAAa,WAAQ,OAAON,IArBrCF,EAAMS,KAAI,SAACC,EAAGC,GACjB,OAAO,kBAACC,EAAA,EAAD,CACHC,IAAKF,EACLG,YACI,WACIX,EAAYO,KAGnBA,WCxBF,SAASK,EAAQC,GAA+C,IAAD,EAElDjF,mBAAgB,IAFkC,mBAEnEK,EAFmE,KAE7DC,EAF6D,cAI3D4E,IAJ2D,2EAI1E,sBAAA3E,EAAA,sDACI,IACIG,MAAM,GAAD,OAAIC,2CAAJ,OAAmCsE,IACnChE,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MAAK,SAAAZ,GAEIC,EADE,MAARD,EACcA,EACA,OAEjBe,OAAM,SAACxB,GACJY,QAAQZ,MAAMA,MAExB,MAAOuF,GACL7E,EAAQ,IACRE,QAAQZ,MAAMuF,GAdtB,4CAJ0E,sBA0B1E,OAJAd,qBAAU,WACNa,MACD,CAACD,IAEG,CACH5E,OACAC,UACA4E,a,OC1BO,SAASE,IAAa,IAAD,ECLrB,WAAsB,IACzB/E,EAAS2E,EAAQ,iBAAjB3E,KADwB,EAEJL,mBAAS,IAFL,mBAEzBqF,EAFyB,KAEjBC,EAFiB,OAGHC,EAAUF,EAAQ,SAAvCf,EAHwB,EAGxBA,OAAQH,EAHgB,EAGhBA,SAMhB,OAJAE,qBAAU,WACNiB,EASD,SAAsBjF,GAIzB,OAHuBA,EAAKqE,KAAI,SAAA9B,GAC5B,OAAOA,EAAE4C,eAXCC,CAAapF,MACxB,CAACA,IAEG,CACHiE,SACAH,YDJyBuB,GAArBpB,EAFwB,EAExBA,OAAQH,EAFgB,EAEhBA,SAFgB,EAGZnE,mBAAS,WAHG,mBAGzB2F,EAHyB,KAGrBC,EAHqB,KA0BhC,OArBAvB,qBAAU,WACW,UAAbF,GAAsByB,EAAMzB,KACjC,CAACA,IAmBG,CACHwB,KACAE,OAnBJ,WACI,OAEI,yBAAKnE,UAAU,UACX,kBAAC,IAAD,CAAQoE,SAAS,SACb,yBAAKpE,UAAU,QACX,yBAAKM,IAAI,cAAcC,IAAI,SAC3B,kBAAC,IAAD,CAAYP,UAAU,QAAtB,YAAkD,kBAAC4C,EAAD,OAEtD,yBAAK5C,UAAU,SACX,kBAAC,IAAD,CAAMA,UAAU,OAAOhD,GAAI,KAAK,kBAAC,IAAD,qB,oBElBjD,SAASqH,EAAS1F,GACrB,OAAQA,GAAQA,EAAK2F,OAGlB,SAASC,EAAU5F,EAAa6F,GACnC,OAAQH,EAAS1F,GAASA,EAAKqE,KAAI,SAAA9B,GAAO,OAAOA,EAAEsD,MAAU,CAAC,GAG3D,SAASC,EAAU9F,EAAa6F,GAEnC,OADaD,EAAU5F,EAAM6F,GACfE,QAAO,SAACC,EAAKC,GAAQ,OAAOD,EAAMC,KAe7C,SAASC,EAAclG,GAAgC,IAAD,uBAAf6F,EAAe,iCAAfA,EAAe,kBACzD,IAAMM,EAAezF,KAAK0F,MAAM1F,KAAKC,UAAUX,IAC/C,OAAQ0F,EAASS,GAAUA,EAAM9B,KAAI,SAAA9B,GAA6C,OAAtCsD,EAAIxB,KAAI,SAAAgC,GAAO,cAAc9D,EAAE8D,MAAc9D,KAAO,GAG7F,SAAS+D,EAAQtG,GAAiC,IAAD,uBAAhBuG,EAAgB,iCAAhBA,EAAgB,kBACpD,OAAOb,EAAS1F,GACVA,EAAKqE,KAAI,SAAA9B,GAAO,IAAIiE,EAAK,GAAgE,OAA5DD,EAAKlC,KAAI,SAAAgC,GAAO,OAAOI,OAAOC,OAAOF,EAAdC,OAAA,IAAAA,CAAA,GAAqBJ,EAAI9D,EAAE8D,QAAiBG,KAChG,GAGH,SAASG,EAAY3G,EAAa6F,GAAoC,IAAD,uBAAnBe,EAAmB,iCAAnBA,EAAmB,kBACxE,IAAIC,EAASC,EAAgB9G,EAAM6F,GAC/BkB,EAAQF,EAAOxC,KAAI,SAAA9B,GAAO,OAAOyE,EAAqBhH,EAAM6F,EAAKtD,MAC/D0E,EAAkB,SAACC,EAAWC,GAEhC,OADAV,OAAOW,KAAKF,GAAMG,SAAQ,SAAAC,GAAOJ,EAAKI,GAAyB,kBAAZJ,EAAKI,IAAmBA,IAAMzB,GAAQe,EAAQW,SAASD,GAA0BJ,EAAKI,GAAzBJ,EAAKI,GAAKH,EAAKG,MACxHJ,GAGPM,GADJT,EAAQrG,KAAK0F,MAAM1F,KAAKC,UAAUoG,KACd1C,KAAI,SAAAnE,GAAO,OAAOA,EAAE6F,OAAOkB,MAC/C,OAAOO,EAQJ,SAASV,EAAgB9G,EAAa6F,GACzC,IAAI4B,EAAa,GACjB,GAAI/B,EAAS1F,GAAO,CAChB,IAAI0H,EAAuB,IAAIC,IAC/B3H,EAAKqH,SAAQ,SAAA9E,GAAC,OAAImF,EAAWE,IAAIrF,EAAEsD,OACnC6B,EAAWL,SAAQ,SAAAQ,GAAC,OAAIJ,EAAItG,KAAK0G,MAErC,OAAOJ,EAGJ,SAAST,EAAqBhH,EAAayE,EAAahC,GAC3D,OAAOzC,EAAK8H,QAAO,SAAAvF,GAAC,OAChBA,EAAEkC,KAAShC,K,wCC3EZ,SAASsF,KACZ,IAAIC,EAAQ,IAAI1J,KAEhB,OADW0J,EAAMzJ,cAAgB,KAAO,KAAOyJ,EAAMC,WAAa,IAAIC,OAAO,GAAK,KAAO,IAAOF,EAAMG,WAAYD,OAAO,GAItH,SAASE,GAAWC,GACvB,IAAIC,EAAI,IAAIhK,KAAK+J,GAEjB,OADgBC,EAAE/J,cAAgB,KAAO,KAAO+J,EAAEL,WAAa,IAAIC,OAAO,GAAK,KAAO,IAAOI,EAAEH,WAAYD,OAAO,GCAvG,SAASK,KAAW,IAAD,EAEN5I,mBAAS,CAAE6I,MAAOT,KAAcU,IAAKV,OAF/B,mBAEvBM,EAFuB,KAEjBK,EAFiB,KAwB9B,SAASC,EAAUlJ,GACf,OAAO,yBAAK4B,UAAU,aAAY,2BAAOqB,KAAK,OAC1CX,UAAQ,EACR6G,aAAcP,EAAKG,MACnBlG,SAAU7C,EAAMoJ,eAEhB,kBAAC,KAAD,CAAWxH,UAAU,UAI7B,MAAO,CACHyH,UAAWT,EAAKG,MAChBO,QAASV,EAAKI,IACdO,MAjCJ,SAAevJ,GACX,OAAO,oCACH,yBAAK4B,UAAU,aACX,kBAACsH,EAAD,CAAWE,aAAc,SAACtG,GAAD,OAAOmG,EAAQ,2BACjCL,GADgC,IAC1BG,MAAOJ,GAAW7F,EAAE0G,cAAexG,OAAQgG,IAAKL,GAAWC,EAAKI,WAE7E,mCACA,kBAACE,EAAD,CAAWE,aAAc,SAACtG,GAAD,OAAOmG,EAAQ,2BACjCL,GADgC,IAC1BG,MAAOJ,GAAWC,EAAKG,OAAQC,IAAKL,GAAW7F,EAAE0G,cAAcxG,gBA0BpFnE,KApBJ,SAAcmB,GACV,OAAO,kBAACkJ,EAAD,CAAWE,aAAc,SAACtG,GAAD,OAAOmG,EAAQ,2BACxCL,GADuC,IACjCG,MAAOJ,GAAW7F,EAAE0G,cAAcxG,OAAQgG,IAAKL,GAAW7F,EAAE0G,cAAcxG,e,qBCvBhF,SAASyG,GAAUzJ,GAE9B,OAAO,yBAAK4B,UAAU,aAAY,kBAAC,KAAD,KAAU5B,EAAM0J,W,8XCLtD,IAsBe3F,GAtBHC,IAAOC,IAAV,M,6DC2GF,SAASgC,GAAS1F,GACrB,OAAQA,GAAQA,EAAK2F,OC7DlB,SAASyD,GAAa3J,GACzB,OAAO6I,EAAW7I,EAAMO,MAClB,qCACA,yBAAKqB,UAAU,gBAAe,kBAACpD,EAAA,EAAD,e,wBCzCzB,SAASoL,GAAkB5J,GAAkC,IAClE6J,EAAkC7J,EAAlC6J,MAAOC,EAA2B9J,EAA3B8J,QAASC,EAAkB/J,EAAlB+J,cADiD,EAKvC3F,IAAMlE,SAAuB,IALU,mBAKlE8J,EALkE,KAKvDC,EALuD,OAMjD7F,IAAMlE,SAAkB,IANyB,mBAMlEK,EANkE,KAM5DC,EAN4D,KAuBzE,OAfA4D,IAAMG,WAAU,WACVsE,EAAW7I,EAAMO,OAASA,IAASP,EAAMO,MAC3C0J,EAAajD,OAAOW,KAAK3H,EAAMO,KAAK,IAAIqE,KAAI,SAAC9B,EAAGgC,GAE9C,MAAO,CACLtC,GAAIsC,EAAQ,EAAI,GAChBoF,QAHsC,iBAApBlK,EAAMO,KAAK,GAAGuC,GAIhCqH,gBAAgB,EAChB1H,MAAOK,OAGXtC,EAAQR,EAAMO,OACT0J,EAAa,MACnB,CAACjK,EAAMO,OAIR,kBAAC6J,GAAA,EAAD,KACE,kBAACC,GAAA,EAAD,KACGL,EAAUpF,KAAI,SAAC0F,GAAD,OACb,kBAACC,GAAA,EAAD,CACEvF,IAAKsF,EAAS9H,GACd7D,MAAO,OACPU,QAASiL,EAASH,eAAiB,OAAS,UAC5CK,cAAeV,IAAYQ,EAAS9H,IAAKqH,EACzCzG,SA/BiBqH,EA+BUH,EAAS9H,GA/BE,SAACkI,GAC/CX,EAAcW,EAAOD,MAgCb,kBAACE,GAAA,EAAD,CACEC,OAAQd,IAAYQ,EAAS9H,GAC7BqI,UAAWf,IAAYQ,EAAS9H,GAAKqH,EAAsC,OAE1ES,EAAS7H,QArCI,IAACgI,OCK7B,IAAMxM,GAAYC,aAAW,SAACC,GAAD,MAAY,CACvC2M,KAAM,CACJxM,gBAAiB,YAKN,SAASyM,GAAc/K,GAEpC,IAAMC,EAAUhC,KAFiD,EAIvBmG,IAAMlE,UAAS,GAJQ,mBAI1D8K,EAJ0D,KAI3CC,EAJ2C,OAKzC7G,IAAMlE,SAAkB,IALiB,mBAK1DK,EAL0D,KAKpDC,EALoD,OAMvC4D,IAAMlE,SAA6C,OANZ,mBAM1D2J,EAN0D,KAMnDqB,EANmD,OAOnC9G,IAAMlE,SAAS,YAPoB,mBAO1D4J,EAP0D,KAOjDqB,EAPiD,OASjC/G,IAAMlE,SAAS,GATkB,mBAS1DkL,EAT0D,KAShDC,EATgD,OAUzCjH,IAAMlE,SAAkB,IAViB,mBAU1DoL,EAV0D,KAUpDC,EAVoD,OAW3BnH,IAAMlE,SAAS,GAXY,mBAW1DsL,EAX0D,KAW7CC,EAX6C,KAiCjE,SAASC,IACP,OAAOV,EACH,kBAAC,KAAD,CAAuB5H,QAAS,WAChCqI,EAAeD,EAAc,MAE7B,qCA2BN,OAxBApH,IAAMG,WAAU,WACVoH,GAAW3L,EAAMO,OACnBC,EAAQR,EAAMO,MACdgL,EAAQvL,EAAMO,KAAKqE,KAAI,SAAA9B,GACrB,OAAOkE,OAAO4E,OAAO9I,GAAG8B,KAAI,SAAC9B,EAAGgC,GAE9B,MADiB,kBAANhC,IAAgBA,GAAO+I,KAAKC,MAAU,IAAJhJ,GAAW,KACjD,kBAACyH,GAAA,EAAD,CAAWvF,IAAKF,EAAOnG,MAAM,QAAQmE,UAGhDmI,GAAiB,KAEjBzK,EAAQ,IACR+K,EAAQ,IACRF,EAAY,GACZI,EAAe,MAEhB,CAACzL,EAAMO,OAEV6D,IAAMG,WAAU,WACd8G,EAzDoB,IAyDQG,GACxBJ,EAAWpL,EAAMO,KAAK2F,QAAQ+E,GAAiB,GAC/CjL,EAAM+L,gBAAkBP,EAAc,GAAGxL,EAAM+L,mBAClD,CAACP,IAGF,kBAAC,GAAD,CAAK5J,UAAU,SACb,kBAACoK,GAAA,EAAD,CAAOC,cAAY,EACjBC,kBAAgB,aAChBC,KAAwB,SACxBC,aAAW,kBAEX,kBAACxC,GAAD,CAAmBhI,UAAW3B,EAAQ6K,KACpCjB,MAAOA,EACPC,QAASA,EACTC,cA9DkB,SAACW,EAAyBD,GAClD,IAAM4B,EAAkB,QAAVxC,EAGd,GAFAqB,EAASmB,EAAQ,OAAS,OAC1BlB,EAAWV,GACPzK,EAAMsM,aACRtM,EAAMsM,aAAa,CAAEC,GAAI7B,EAAMlB,cAAcgD,YAAa3C,MAAOwC,EAAQ,OAAS,YAE/E,CACH,IACI5J,EADSiI,EAAMlB,cAAciD,WAAYA,WAC1BlM,KACfmM,EAAUnM,EAAKoM,KFXlB,SAAwBlC,EAAkBZ,GAC7C,IAAI+C,EAAiB,QAAV/C,GAAoB,EAAI,EACnC,OAAO,SAAUpJ,EAAUoM,GACvB,OAAIpM,EAAEgK,GAAYoC,EAAEpC,GACTmC,EACFnM,EAAEgK,GAAYoC,EAAEpC,IACbmC,EAEL,GEGeE,CAAiBrK,EAAOoH,IAChD0B,EAAQmB,EAAO9H,KAAI,SAAC9B,GAClB,OAAOkE,OAAO4E,OAAO9I,GAAG8B,KAAI,SAAC9B,EAAGgC,GAE9B,MADiB,kBAANhC,GAAkBA,EAAI,IAAM,IAAGA,EAAIA,EAAEiK,QAAQ,IACjD,kBAACxC,GAAA,EAAD,CAAWvF,IAAKF,EAAOnG,MAAM,QAAQmE,YAiD5CsI,SAAUE,EAAKpF,OACf3F,KAAMA,IAGR,kBAACyM,GAAA,EAAD,CAAWpL,UAAU,aAClB0J,EACE1G,KAAI,SAACqI,EAAKnI,GACT,OACE,kBAACuF,GAAA,EAAD,CACErF,IAAKF,EACLoI,OAAK,EACLC,KAAK,WACLC,UAAW,GAEV9B,EAAKxG,SAMlB,kBAAC4G,EAAD,MACA,kBAAC,GAAD,CAAgBnL,KAAMP,EAAMO,Q,6eCvGnB,SAAS8M,GAAerN,GAAqB,IAAD,EAErBE,mBAAS,IAFY,mBAEhDoN,EAFgD,KAErCC,EAFqC,OAOnDzE,KAHAO,EAJmD,EAInDA,UACAC,EALmD,EAKnDA,QACAC,EANmD,EAMnDA,MAGAhJ,EACA2E,EAAQ,uBAAD,OAAwBlF,EAAM6F,GAA9B,YAAoCwD,EAApC,YAAiDC,IADxD/I,KATmD,EAcnD2D,EAAgB2E,EAAkBtI,EAAM,WAAY,SAFpD8D,EAZmD,EAYnDA,SACAG,EAbmD,EAanDA,OAGJ,SAASgJ,EAAgBjN,EAAekN,GAIpC,OTmBD,SAAelN,EAAa6F,GAE/B,OADaiB,EAAgB9G,EAAM6F,GACrBxB,KAAI,SAAA9B,GAAO,OAAOyE,EAAqBhH,EAAM6F,EAAKtD,MSrBrD+F,CTuCR,SAActI,EAAakK,EAAeZ,GAC7C,OAAOtJ,EAAKoM,KAGT,SAAwBlC,EAAeiD,GAC1C,IAAI7D,EAA4B,QAAX6D,GAAqB,EAAI,EAC9C,OAAO,SAAUjN,EAAQoM,GACrB,OAAIpM,EAAEgK,GAAYoC,EAAEpC,GACTZ,EACFpJ,EAAEgK,GAAYoC,EAAEpC,IACbZ,EACL,GAVM8D,CAAelD,EAAUZ,ISzClBhB,CADHA,EADGA,EAAUtI,EAAM,UAAW,UAAW,QAAS,MAAO,SAAU,WAAY,WAAY,WAAY,WACjE,UAAWkN,GAC3B,UAAW,QACpB,WAGlC,SAASG,IACL,IAAIC,EAAW,WAUf,OAAQ,oCACJP,EAAU1I,KAAI,SAAC9B,EAAGgC,GACd,OAAO,yBAAME,IAAKF,IAXP8D,EAYI9F,EAAE,GAAF,YAXN+K,EACF,sCAEPA,EAAWjF,EACJ,kBAACkF,GAAD,KAAW,kBAACtP,EAAA,EAAD,KAAaoK,KAQ3B,kBAACmF,GAAD,KACI,kBAACvP,EAAA,EAAD,KAAa,WAAasE,EAAE,GAAF,SAC1B,kBAACtE,EAAA,EAAD,KAAasE,EAAE,GAAF,WAEjB,kBAAC,GAAD,CAAOvC,KAAMsI,EAAU/F,EAAG,UAAW,MAAO,YAjBxD,IAAmB8F,MA2BvB,OAJArE,qBAAU,WACNgJ,EAAaC,EAAgBjN,EAAM8D,MACpC,CAAC9D,EAAM8D,IAGN,yBAAKzC,UAAU,UACX,kBAACD,EAAA,EAAD,CAAOC,UAAU,mBACb,kBAAC6H,GAAD,KAAY,kBAACjL,EAAA,EAAD,CAAYoD,UAAU,OAAOnD,QAAQ,MAAMuB,EAAMgO,QAAoB,kBAACzE,EAAD,OACjF,yBAAK3H,UAAU,aAAaY,GAAG,kBAC3B,kBAACgC,EAAD,MACA,kBAACoJ,EAAD,SAOpB,IAAME,GAAY9J,IAAOC,IAAV,MAUT8J,GAAa/J,IAAOC,IAAV,MCjFD,SAASgK,GAAYjO,GAAqB,IAAD,EAMhD8I,KAHAO,EAHgD,EAGhDA,UACAC,EAJgD,EAIhDA,QACAC,EALgD,EAKhDA,MAIAhJ,EACA2E,EAAQ,eAAD,OAAgBlF,EAAM6F,GAAtB,YAA4BwD,EAA5B,YAAyCC,IADhD/I,KAUJ,OACI,yBAAKqB,UAAU,UACX,kBAACD,EAAA,EAAD,CAAOC,UAAU,mBACb,kBAAC6H,GAAD,KAAY,kBAACjL,EAAA,EAAD,CAAYoD,UAAU,OAAOnD,QAAQ,MAAMuB,EAAMgO,QAAoB,kBAACzE,EAAD,OACjF,yBAAK3H,UAAU,cACX,kBAAC,GAAD,CAAOrB,KAAMA,OC3BlB,SAAS2N,GAAclO,GAAqB,IAAD,EAMlD8I,KAHAO,EAHkD,EAGlDA,UACAC,EAJkD,EAIlDA,QACAC,EALkD,EAKlDA,MAIAhJ,EACA2E,EAAQ,sBAAD,OAAuBlF,EAAM6F,GAA7B,YAAmCwD,EAAnC,YAAgDC,IADvD/I,KAGJ,OACI,yBAAKqB,UAAU,UACX,kBAACD,EAAA,EAAD,CAAOC,UAAU,mBACb,kBAAC6H,GAAD,KAAY,kBAACjL,EAAA,EAAD,CAAYoD,UAAU,OAAOnD,QAAQ,MAAMuB,EAAMgO,QAAoB,kBAACzE,EAAD,OACjF,yBAAK3H,UAAU,cACX,kBAAC,GAAD,CAAOrB,KAAMA,OCjBlB,SAAS4N,GAAOnO,GAAqB,IAAD,EAM3C8I,KAHAO,EAH2C,EAG3CA,UACAC,EAJ2C,EAI3CA,QACAC,EAL2C,EAK3CA,MAIAhJ,EACA2E,EAAQ,eAAD,OAAgBlF,EAAM6F,GAAtB,YAA4BwD,EAA5B,YAAyCC,IADhD/I,KAUJ,OACI,yBAAKqB,UAAU,UACX,kBAACD,EAAA,EAAD,CAAOC,UAAU,mBACb,kBAAC6H,GAAD,KAAY,kBAACjL,EAAA,EAAD,CAAYoD,UAAU,OAAOnD,QAAQ,MAAMuB,EAAMgO,QAAoB,kBAACzE,EAAD,OACjF,yBAAK3H,UAAU,cACX,kBAAC,GAAD,CAAOrB,KAAMA,O,iDC7BlB,SAAS6N,GAAOpO,GAC3B,GAAI6I,EAAW7I,EAAMqO,UAAUC,UAAW,CACtC,IAAIC,EAAevO,EAAMqO,UAAUC,SAAS,GAAGhQ,gBAC3CkQ,EAASxO,EAAMqO,UAAUG,OACzBC,EAAcF,EAAa3J,KAAI,SAACgC,EAAW5B,GAC3C,OAAO,yBAAKA,IAAKA,IAAOpD,UAAU,cAC9B,0BAAMoD,IAAKA,IAAOpD,UAAU,MAAM8M,MAAO,CAAEpQ,gBAAiBsI,KAC5D,2BAAO5B,IAAKA,IAAOpD,UAAU,SAAU4M,EAAOD,EAAaI,QAAQ/H,SAG3E,OAAO,yBAAKhF,UAAU,UAClB,4BAAK6M,GACL,yBAAK7M,UAAU,eAGlB,OAAO,8BCnBT,SAASgN,GAASC,EAAeC,GACtC,OAAQC,OAAOC,WAAa,KAAQH,EAAQC,EAGvC,SAASG,GAAMpK,GACpB,GAAiB,kBAANA,EACT,OAAOA,EAEP,IACIqK,EADK,YAAOrK,GACID,KAAI,SAACgC,GAAgB,OAAOA,EAAEuI,WAAW,MAC7D,OAAOC,SAASF,EAAQG,KAAK,IAAK,IAI/B,SAASC,GAAOC,GACrB,IAAID,EAAS,CACX,mBACA,yBACA,uBACA,uBACA,qBACA,uBACA,qBACA,qBACA,yBACA,uBACA,uBACA,qBACA,uBACA,qBACA,qBACA,yBACA,yBACA,yBACA,yBACA,yBACA,yBACA,uBACA,uBACA,uBACA,sBACA,yBACA,wBACA,wBACA,uBACA,wBACA,uBACA,uBACA,wBACA,wBACA,uBACA,wBACA,uBACA,uBACA,yBACA,yBACA,yBACA,yBACA,yBACA,yBACA,wBACA,wBACA,wBACA,qBACA,qBACA,oBACA,qBACA,oBACA,oBACA,uBACA,uBACA,qBACA,uBACA,qBACA,qBACA,sBACA,sBACA,sBACA,sBACA,yBACA,0BAEF,OAAOC,EAAO3K,KAAI,SAAA4K,GAAO,OAAOF,EAAOA,EAAOpJ,OAAUsJ,EAAIF,EAAOpJ,OAAU,MC1EhE,SAASuJ,GAASzP,GAC/B,IAAI+H,EAAUc,EAAc7I,EAAMO,KAAMP,EAAM0P,SAC1CC,EAAc9G,EAAYd,EAAS/H,EAAM4L,QACzC4C,EAAmB3F,EAAYd,EAAS/H,EAAM0P,SAC9CE,EAAqB/G,EAAW7I,EAAMO,MAAQiO,EAAO5J,KAAI,SAAAC,GAAO,OAAOiI,GAAQjI,MAAQ,GACvFwJ,ECCC,SAAyBsB,EAAanB,EAAkBoB,GAC7D,MAAO,CACLpB,OAAQA,EACRF,SAAU,CACR,CACE7L,MAAO,iBACPlC,KAAMoP,EACNrR,gBAAiBgR,GAAOM,MDRD9C,CAAkB6C,EAAGnB,EAAQoB,GACtDC,EAAQF,EAAErJ,QAAO,SAACC,EAAKC,GAAQ,OAAOD,EAAMC,KAC5CsJ,EAAchD,GAAW,GAAI,IACjC,OAAIjE,EAAWwF,EAAUC,UAErB,yBAAK1M,UAAU,YACb,yBAAKA,UAAU,SACb,kBAAC,KAAD,CACElC,OAAQ,EAAGT,MAAO,EAClBsB,KAAM8N,EACN0B,QACE,CACEC,OAAQ,GAERxB,OAAQ,CAAElP,SAAS,GACnB2Q,OAAQ,CACN3Q,SAAS,EACT0G,SAAU,MACVrH,MAAO,SACP6P,OAAQ,CACN0B,eAAe,EACfC,SAAU,IAEZ5N,WAAW,GAEb6N,SAAU,CACRC,aAAcP,EACdQ,KAAM,QACNC,UAAW,CACT9N,MAAO,SAAC+N,EAAkBjQ,GACxB,IAAIkC,EAAQlC,EAAKiO,OAAOgC,EAAY1L,OACpC,OAAOrC,GAETgO,WAAY,SAACD,EAAkBjQ,GAC7B,IAAIyC,EAAQzC,EAAK+N,SAASkC,EAAYE,cAAcnQ,KAAKiQ,EAAY1L,OACjE6L,EAA2BpQ,EAAK+N,SAASkC,EAAYE,cAAcnQ,KAAKiQ,EAAY1L,OAAS+K,EAAQ,IAEzG,OADAc,EAAUA,EAAQ5D,QAAQ,GACjB6D,OAAOC,UAAU7N,GAA4DA,EAAQ,KAAO2N,EAAU,KAA3E,QAAO3N,EAAM+J,QAAQ,GAAK,KAAO4D,EAAU,OAGnFR,SAAU,QAMpB,kBAAC/B,GAAD,CAAQC,UAAWA,KAIvB,yBAAKzM,UAAU,SACb,kBAAC,KAAD,CACErB,KAAM8N,KE/DC,SAASD,GAAOpO,GAC3B,IAAIgF,EAAM,EACNuJ,EAAevO,EAAMqO,UAAUC,SAAS1J,KAAI,SAAA4K,GAAO,OAAOA,EAAElR,mBAC5DkQ,EAASxO,EAAMqO,UAAUC,SAAS1J,KAAI,SAAA4K,GAAO,OAAOA,EAAE/M,SACtDgM,EAAcF,EAAa3J,KAAI,SAAAgC,GAC/B,OAAO,yBAAK5B,IAAKA,IAAOpD,UAAU,cAC9B,0BAAMoD,IAAKA,IAAOpD,UAAU,MAAM8M,MAAO,CAAEpQ,gBAAiBsI,KAC5D,2BAAO5B,IAAKA,IAAOpD,UAAU,SAAU4M,EAAOD,EAAaI,QAAQ/H,SAG3E,OAAO,yBAAKhF,UAAU,UAClB,4BAAK6M,GACL,yBAAK7M,UAAU,eCPR,SAASkP,GAAgB9Q,GAA6F,IAE7HO,EAA6BP,EAA7BO,KAAMoP,EAAuB3P,EAAvB2P,EAAGD,EAAoB1P,EAApB0P,QAAS9D,EAAW5L,EAAX4L,OACpByC,ECiBC,SAAyB9N,EAAaoP,EAAaD,EAAiB9D,GAEvE,IAAImF,EAAuB1J,EAAgB9G,EAAMmP,GAE7CsB,EAAiB1B,GADIyB,EAAWnM,KAAI,SAAAC,GAAO,OAAOoK,GAAMpK,OAExDoM,EAAWF,EAAWnM,KAAI,SAAClC,EAAMoC,GACjC,IAAIpG,EAAgBsS,EAAKlM,GACrBoM,EAAsBvB,EAAE/K,KAAI,SAACuM,GAC7B,IAAIC,EAAgB7J,EAAqBhH,EAAM,WAAY4Q,GACvDE,EAAsB9J,EAAqB6J,EAAQ1B,EAASqB,EAAWjM,IACvEwM,EAAsBnL,EAAUkL,EAAczF,GAClD,OAAO3F,EAASoL,GAAgBC,EAAUhL,QAAO,SAACC,EAAKC,GAAN,OAAYD,EAAMC,KAAK,KAE5E,MAAO,CACH/D,MAAOsO,EAAWA,EAAWpC,QAAQjM,IACrCnC,KAAM2Q,EACN5S,gBAAiBI,EACjB6S,mBAAoBzM,MAG5B,MAAO,CACH0J,OAAQmB,EACRrB,SAAU2C,GDvCWO,CAAgBjR,EAAMoP,EAAGD,EAAS9D,GACzDiE,EAAQhH,EAAYtI,EAAMqL,GAC1B6F,ECAK7C,GAAS,GAAI,IDEtB,YAA2B8C,IAAvBrD,EAAUC,SAEV,yBAAK1M,UAAU,YACb,yBAAKA,UAAU,SACb,kBAAC,KAAD,CACErB,KAAM8N,EACN0B,QACE,CACE4B,OAAQ,CACNC,MAAO,CAAC,CACNC,SAAS,EACTC,MACA,CACE3B,SAAUsB,KAIdM,MAAO,CAAC,CACNF,SAAS,EACTC,MACA,CACE3B,SAAUsB,MAIhBjD,OAAQ,CACNlP,SAAS,EACT6Q,SAAU,IAEZF,OAAQ,CACN3Q,SAAS,EACT0G,SAAU,QACVrH,MAAO,SACP6P,OAAQ,CACN0B,eAAe,GAEjB3N,WAAW,GAEb6N,SAAU,CACRC,aAAczB,GAAS,GAAI,IAC3B0B,KAAM,SACNC,UAAW,CACT9N,MAAO,SAAC+N,EAAkBjQ,GACxB,IAAIkD,EAAOlD,EAAK+N,SAASkC,EAAYE,cACjCjO,EAAQgB,EAAKhB,MACjB,OAAIgB,EAAKlD,KAAKiQ,EAAY1L,OAAS,EAC1BrC,EACG,IAEdgO,WAAY,SAACD,EAAkBjQ,GAC7B,IAAIkD,EAAOlD,EAAK+N,SAASkC,EAAYE,cACjCsB,EAAQvO,EAAKlD,KAAKiQ,EAAY1L,OAE9BmN,GADkBxO,EAAKlD,KAAKiQ,EAAY1L,OAAS+K,EAAQ,KACjC9C,QAAQ,GACpC,OAAItJ,EAAKlD,KAAKiQ,EAAY1L,OAAS,EACxB8L,OAAOC,UAAUmB,GAAkEA,EAAQ,KAAOC,EAAgB,KAAvF,QAAOD,EAAMjF,QAAQ,GAAK,KAAOkF,EAAgB,KAC3E,UAQ1B,kBAAC,GAAD,CAAQ5D,UAAWA,KAIvB,yBAAKzM,UAAU,SACb,kBAAC,KAAD,CACErB,KAAM8N,K,yCE7EC,SAAS6D,GAAalS,GAEjC,OACI,yBAAK4B,UAAW,gBACZ,kBAAC6C,EAAA,EAAD,CAAa3C,UAAU,YACnB,kBAACqQ,GAAA,EAAD,CAAYzT,MAAM,UAAU0N,aAAW,SAAS1J,KAAK,UAAUM,MAAOhD,EAAMgD,MAAOH,SAAU7C,EAAMoJ,cAC/F,kBAACgJ,GAAA,EAAD,CAAkB1T,MAAM,UAAUsE,MAAM,QAAQqP,QAAS,kBAACC,GAAA,EAAD,MAAW7P,MAAM,UAC1E,kBAAC2P,GAAA,EAAD,CAAkB1T,MAAM,UAAUsE,MAAM,SAASqP,QAAS,kBAACC,GAAA,EAAD,MAAW7P,MAAM,WAC3E,kBAAC2P,GAAA,EAAD,CAAkB1T,MAAM,UAAUsE,MAAM,MAAMqP,QAAS,kBAACC,GAAA,EAAD,MAAW7P,MAAM,gBCMrF,SAAS8P,GAAevS,GAAqB,IAAD,EAM7C8I,KAHFO,EAH+C,EAG/CA,UACAC,EAJ+C,EAI/CA,QACAC,EAL+C,EAK/CA,MAL+C,EAQpB9D,EAAU,CAAC,WAAY,UAAW,YAAa,UAAW,WAAY,SAA3FjB,EARyC,EAQzCA,OAAQH,EARiC,EAQjCA,SAER9D,EAAS2E,EAAQ,uBAAD,OAAwBlF,EAAM6F,GAA9B,YAAoCwD,EAApC,YAAiDC,IAAjE/I,KAVyC,EAYnBL,mBAAiB,YAZE,mBAY1CwP,EAZ0C,KAYjC8C,EAZiC,OAavBtS,mBAAiB,GAbM,mBAa1C2P,EAb0C,KAanC4C,EAbmC,OAcbvS,mBAAiB,SAdJ,mBAc1CwS,EAd0C,KAc9BC,EAd8B,OAefzS,mBAAgB,IAfD,mBAe1CoN,EAf0C,KAe/BC,EAf+B,OAgBvBrN,mBAAS,OAhBc,mBAgB1C0S,EAhB0C,KAgBnCC,EAhBmC,KAkB/CC,EC9BW,SAAuBC,GAA4D,IAAD,cAE9EA,EAF8E,GAEtFtS,EAFsF,KAEnFoM,EAFmF,OAGrE3M,mBAAS,KAH4D,mBAGtF8S,EAHsF,KAGhFC,EAHgF,KAK7F,SAASC,IACQ,MAATF,GACAC,EAAQ,KACRxS,EAAE0S,aAGFF,EAAQ,KACRpG,EAAEsG,YAQV,MAAO,CACHL,WALJ,WACI,OAAO,4BAAQlR,UAAY,aAAawB,QAAS8P,GAAkB,MAATF,EAAevS,EAAEuS,KAAOnG,EAAEmG,QDctFI,CACF,CACE,CAAEJ,KAAM,kBAACK,GAAA,EAAD,MAAkBF,SAAUN,EAASxP,KAAKC,KAAM,QACxD,CAAE0P,KAAM,kBAACvD,GAAA,EAAD,MAAkB0D,SAAUN,EAASxP,KAAKC,KAAM,UAJ1DwP,WAiBF,SAASQ,IACP,OACE,yBAAK1R,UAAU,SACb,kBAAC4C,EAAD,MACA,kBAAC0N,GAAD,CACE9I,aAAc,SAACsB,GAAD,OAAgDiI,EAAcjI,EAAM3H,OAAOC,QACzFA,MAAO0P,IACT,sCAA4B,QAAfA,EAAwB7C,EAAQ,OAAMA,EAAM9C,QAAQ,KAIvE,SAASwG,EAASvT,GAChB,IAAIwT,EAAYC,MAAMC,KAAKD,MAAM,IAAI9L,QAAQ/C,KAAI,SAAA+O,GAAS,OAAQ,IAAMA,EAAM,OAAOlL,OAAO,MAC5F,MAAuB,QAAhBzI,EAAM4S,MAAkB,kBAAC,GAAD,CAAUrS,KAAMA,EAAMmP,QAASA,EAAS9D,OAAQ8G,IAC3E,kBAAC5B,GAAD,CAAiBvQ,KAAMA,EAAMoP,EAAG6D,EAAW9D,QAASA,EAAS9D,OAAQ8G,IAG3E,OA1BAnO,qBAAU,WACRgJ,EE7CG,SAAyBhN,EAAemP,GAC3C,IAAIkE,EAAS/K,EAActI,EAAMmP,EAAS,KAAM,cAChD,OAAQA,GACJ,IAAK,YAAa,OAAO7G,EAAU+K,EAAQ,YAAa,QAAS,OAAQ,WAAY,SAAU,SAAU,OACzG,IAAK,UAAW,OAAO/K,EAAU+K,EAAQ,UAAW,QAAS,OAAQ,WAAY,SAAU,SAAU,OACrG,IAAK,UAAW,OAAO/K,EAAU+K,EAAQ,UAAW,KAAM,WAAY,YAAa,QAAS,OAAQ,WAAY,SAAU,SAAU,OACpI,IAAK,WAAY,OAAO/K,EAAU+K,EAAQ,WAAY,QAAS,OAAQ,WAAY,SAAU,SAAU,OACvG,IAAK,UAAW,OAAO/K,EAAU+K,EAAQ,UAAW,UAAW,WAAY,WAAY,QAAS,OAAQ,WAAY,aAAc,SAAU,SAAU,OACtJ,QAAS,OAAO/K,EAAU+K,EAAQ,QAAS,OAAQ,WAAY,SAAU,SAAU,QFqC1EpG,CAAgBjN,EAAMmP,IACnC+C,EAAS5J,EAAYtI,EAAMmS,MAC1B,CAAChD,EAASgD,EAAYnS,IAEzBgE,qBAAU,WACRiO,EAAWnO,KACV,CAACA,IAoBF,yBAAKzC,UAAU,kBACb,kBAACD,EAAA,EAAD,CAAOC,UAAU,mBACf,kBAAC6H,GAAD,KACE,yBAAK7H,UAAU,QACb,kBAACpD,EAAA,EAAD,CAAYoD,UAAU,OAAOnD,QAAQ,MAArC,IAA4CuB,EAAMgO,QAClD,kBAACzE,EAAD,OAGF,yBAAK3H,UAAU,SACb,kBAACkR,EAAD,QAGJ,yBAAKlR,UAAU,cACb,oCAAE,kBAAC0R,EAAD,MAAS,kBAACC,EAAD,CAAUX,MAAOA,KAC5B,kBAAC,GAAD,CAAOrS,KAAM+M,OG/ER,SAASuG,GAAW7T,GAAqB,IAAD,EAM/C8I,KAHAO,EAH+C,EAG/CA,UACAC,EAJ+C,EAI/CA,QACAC,EAL+C,EAK/CA,MAIAhJ,EACA2E,EAAQ,mBAAD,OAAoBlF,EAAM6F,GAA1B,YAAgCwD,EAAhC,YAA6CC,IADpD/I,KAUJ,OACI,yBAAKqB,UAAU,UACX,kBAACD,EAAA,EAAD,CAAOC,UAAU,mBACb,kBAAC6H,GAAD,KAAY,kBAACjL,EAAA,EAAD,CAAYoD,UAAU,OAAOnD,QAAQ,MAAMuB,EAAMgO,QAAoB,kBAACzE,EAAD,OACjF,yBAAK3H,UAAU,cACX,kBAAC,GAAD,CAAOrB,KAAMA,OC1BlB,SAASuT,GAAcC,EAAeC,GAAwB,IAAD,EAChD9T,mBAAS,IADuC,mBACjEK,EADiE,KAC3DC,EAD2D,OAElCN,mBAAS,GAFyB,mBAEjEsL,EAFiE,KAEpDC,EAFoD,KA0BxE,OAtBAlH,qBAAU,WACN3D,MAAM,GAAD,OAAIC,2CAAJ,OAAmCkT,EAAnC,YAA4CC,EAA5C,YAA6DxI,IAC7DrK,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MAAK,SAAAmK,GAAI,OAAI9K,EAAQ,GAAD,mBAAKD,GAAL,YAAc+K,QAClChK,OAAM,SAAAxB,GAAK,OAAIY,QAAQC,IAAIb,QAGjC,CAAC0L,IAEJjH,qBAAU,WACNkH,EAAe,GACf7K,MAAM,GAAD,OAAIC,2CAAJ,OAAmCkT,EAAnC,YAA4CC,EAA5C,YAA6DxI,IAC7DrK,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MAAK,SAAAmK,GAAI,OAAI9K,EAAQ8K,MACrBhK,OAAM,SAAAxB,GAAK,OAAIY,QAAQC,IAAIb,QACjC,CAACiU,IAOG,CACHxT,OACA0T,cANJ,WACIxI,EAAeD,EAAc,KC1BtB,SAAS0I,KAAS,IAAD,EAEJhU,mBAAS,CAAEqM,GAAI,MAAO1C,MAAO,SAFzB,mBAErB8C,EAFqB,KAEfwH,EAFe,KAGpBtO,EAAOuO,qBAAWC,IAAlBxO,GAHoB,EAQxBiO,GAAc,aAAD,OAAcjO,EAAd,YAAoB8G,EAAKJ,GAAzB,YAA+BI,EAAK9C,OAAS,KAF1DtJ,EANwB,EAMxBA,KACA0T,EAPwB,EAOxBA,cAGJ,OAAO,kBAAC,GAAD,CAAO1T,KAAMA,EAAMwL,eAAgBkI,EAAe3H,aAAc6H,ICV5D,SAASG,KAAU,MAENpU,mBAAS,CAAEqM,GAAI,KAAM1C,MAAO,SAFtB,mBAEvB8C,EAFuB,KAEjBwH,EAFiB,KAGtBtO,EAAOuO,qBAAWC,IAAlBxO,GAHsB,EAQ1BiO,GAAc,eAAD,OAAgBjO,EAAhB,YAAsB8G,EAAKJ,GAA3B,YAAiCI,EAAK9C,OAAS,KAF5DtJ,EAN0B,EAM1BA,KACA0T,EAP0B,EAO1BA,cAGJ,OAAO,kBAAC,GAAD,CAAO1T,KAAMA,EAAMwL,eAAgBkI,EAAe3H,aAAc6H,ICT5D,SAASI,KAAW,IAAD,EAENrU,mBAAS,CAAEqM,GAAI,KAAM1C,MAAO,SAFtB,mBAEvB8C,EAFuB,KAEjBwH,EAFiB,KAGtBtO,EAAOuO,qBAAWC,IAAlBxO,GAHsB,EAQ1BiO,GAAc,eAAD,OAAgBjO,EAAhB,YAAsB8G,EAAKJ,GAA3B,YAAiCI,EAAK9C,OAAS,KAF5DtJ,EAN0B,EAM1BA,KACA0T,EAP0B,EAO1BA,cAGJ,OAAO,kBAAC,GAAD,CAAO1T,KAAMA,EAAMwL,eAAgBkI,EAAe3H,aAAc6H,ICV5D,SAASK,KAAe,IAAD,EAEVtU,mBAAS,CAAEqM,GAAI,KAAM1C,MAAO,SAFlB,mBAE3B8C,EAF2B,KAErBwH,EAFqB,KAG1BtO,EAAOuO,qBAAWC,IAAlBxO,GAH0B,EAIIiD,KAA9BO,EAJ0B,EAI1BA,UAAWC,EAJe,EAIfA,QAASC,EAJM,EAINA,MAJM,EAS9BuK,GAAc,cAAD,OAAejO,EAAf,YAAqBwD,EAArB,YAAkCC,EAAlC,YAA6CqD,EAAKJ,GAAlD,YAAwDI,EAAK9C,OAAS,KAFnFtJ,EAP8B,EAO9BA,KACA0T,EAR8B,EAQ9BA,cAGJ,OAAQ,oCACJ,kBAAC1K,EAAD,MACA,kBAAC,GAAD,CAAOhJ,KAAMA,EAAMwL,eAAgBkI,EAAe3H,aAAc6H,KCFjE,IAAME,GAAMjQ,IAAMqQ,cAAc,CAAE5O,GAAI,YAEtC,SAAS6O,GAAY1U,GAAqB,IAAD,EAEhBE,mBAASF,EAAMgO,QAFC,gCAGf9J,EACzB,CACI,QACA,UACA,WACA,gBAEJ,UAPIG,EAHoC,EAGpCA,SAAUG,EAH0B,EAG1BA,OAgClB,SAASmQ,EAAY3U,GACjB,OAAQqE,GAEJ,IAAK,QAAS,OAAO,kBAAC6P,GAAD,MACrB,IAAK,UAAW,OAAO,kBAACI,GAAD,MACvB,IAAK,WAAY,OAAO,kBAACC,GAAD,MACxB,IAAK,eAAgB,OAAO,kBAACC,GAAD,MAC5B,QAAS,OAAO,kBAACN,GAAD,OAIxB,OAzBQ,yBAAKtS,UAAU,UACX,kBAACD,EAAA,EAAD,CAAOC,UAAU,mBACb,kBAAC6H,GAAD,KAAY,kBAACjF,EAAD,OACZ,yBAAK5C,UAAU,cACX,kBAACyS,GAAIO,SAAL,CAAc5R,MAAO,CAAE6C,GAAI7F,EAAM6F,KAC7B,kBAAC8O,EAAD,CAAatQ,SAAUA,EAAUwB,GAAI7F,EAAM6F,S,mKC9BhE,SAASgP,GAAI7U,GAAqB,IAAD,EAOhC8I,KAJAO,EAHgC,EAGhCA,UACAC,EAJgC,EAIhCA,QACAC,EALgC,EAKhCA,MAME+D,GAX8B,gDAWlBzG,EAFD3B,EAAQ,YAAD,OAAalF,EAAM6F,GAAnB,YAAyBwD,EAAzB,YAAsCC,IAAtD/I,KAEwB,UAAW,aAAc,cAAe,WAAY,YAAa,SAC3FuU,EAAkB5N,EAAYT,EAAc6G,EAAW,cAAe,WACtEyH,EAAkB7N,EAAYT,EAAc6G,EAAW,WAAY,cAEzE,OACI,yBAAK1L,UAAU,UACX,kBAACD,EAAA,EAAD,CAAOC,UAAU,mBACb,kBAAC6H,GAAD,KACI,kBAACjL,EAAA,EAAD,CAAYoD,UAAU,OAAOnD,QAAQ,MAAMuB,EAAMgO,QACjD,kBAACzE,EAAD,OAEJ,yBAAK3H,UAAU,cACX,kBAACoT,GAAD,kBACA,kBAAC,GAAD,CAAOzU,KAAMuU,IACb,kBAACE,GAAD,qBACA,kBAAC,GAAD,CAAOzU,KAAMwU,OAQjC,IAAMC,GAAKhR,IAAOiR,GAAV,MCtCO,SAASC,GAAQlV,GAAqB,IAAD,EAM5C8I,KAHAO,EAH4C,EAG5CA,UACAC,EAJ4C,EAI5CA,QACAC,EAL4C,EAK5CA,MAIAhJ,EACA2E,EAAQ,gBAAD,OAAiBlF,EAAM6F,GAAvB,YAA6BwD,EAA7B,YAA0CC,IADjD/I,KAGJ,OACI,yBAAKqB,UAAU,UACX,kBAACD,EAAA,EAAD,CAAOC,UAAU,mBACb,kBAAC6H,GAAD,KAAY,kBAACjL,EAAA,EAAD,CAAYoD,UAAU,OAAOnD,QAAQ,MAAMuB,EAAMgO,QAAoB,kBAACzE,EAAD,OACjF,yBAAK3H,UAAU,cACX,kBAAC,GAAD,CAAOrB,KAAMA,O,OCPlB,SAAS4U,GAAQnV,GAA6B,IAAD,EACjCsF,IAAfO,EADgD,EAChDA,GAAIE,EAD4C,EAC5CA,OAEZ,OACI,yBAAKnE,UAAY,eACb,kBAACmE,EAAD,MACA,yBAAMnE,UAAU,WACZ,kBAAC2Q,GAAD,CAAgBvE,OAAQ,kBAAmBnI,GAAIA,IAC/C,kBAAC6O,GAAD,CAAalS,GAAG,QAAQwL,OAAQ,QAASnI,GAAIA,IAC7C,kBAACwH,GAAD,CAAgBW,OAAQ,kBAAmBnI,GAAIA,IAC/C,kBAACgP,GAAD,CAAK7G,OAAQ,MAAOnI,GAAIA,IACxB,kBAACqI,GAAD,CAAeF,OAAQ,wBAAyBnI,GAAIA,IACpD,kBAACqP,GAAD,CAASlH,OAAQ,UAAWnI,GAAIA,IAChC,kBAACsI,GAAD,CAAQH,OAAQ,gBAAiBnI,GAAIA,IACrC,kBAACgO,GAAD,CAAY7F,OAAQ,cAAenI,GAAIA,IACvC,kBAAC,GAAD,CAAWmI,OAAQ,aAAcnI,GAAIA,IACrC,kBAACoI,GAAD,CAAaD,OAAQ,eAAgBnI,GAAIA,MCZ1CuP,OAff,WACE,IAAMnV,EAAUhC,IAEhB,OADAoX,SAASrU,KAAK0N,MAAM4G,KAAO,MAEzB,yBAAK1T,UAAW3B,EAAQ7B,KACtB,0BAAMmX,IAAI,aAAa3R,KAAK,4DAC5B,0BAAMlB,KAAK,WAAW8S,QAAQ,+CAC9B,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOC,KAAK,IAAIC,OAAO,EAAMC,OAAQ,SAAA3V,GAAK,OAAI,kBAACD,EAAUC,MACzD,kBAAC,IAAD,CAAOyV,KAAK,WAAWC,OAAO,EAAMC,OAAQ,SAAA3V,GAAK,OAAI,kBAACmV,GAAYnV,SCPtD4V,QACW,cAA7B7G,OAAO8G,SAASC,UAEe,UAA7B/G,OAAO8G,SAASC,UAEhB/G,OAAO8G,SAASC,SAASC,MACvB,2DCZNC,IAASL,OAAO,kBAAC,GAAD,MAASN,SAASY,eAAe,SD6H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBjV,MAAK,SAAAkV,GACJA,EAAaC,gBAEdhV,OAAM,SAAAxB,GACLY,QAAQZ,MAAMA,EAAMyW,c","file":"static/js/main.79af01aa.chunk.js","sourcesContent":["import { makeStyles } from \"@material-ui/core/styles\";\n\nconst useStyles = makeStyles((theme) => ({\n  app: {\n    flexGrow: 1,\n    backgroundColor: \"#f8f8f8\",\n  },\n}));\nexport default useStyles;\n","import Typography from '@material-ui/core/Typography';\nimport React from 'react';\nimport { Link } from 'react-router-dom';\n\nexport default function Copyright() {\n    return (\n        <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\n            {'Copyright © '}\n            <Link color=\"inherit\" to=\"http://itdsoftware.com/\">\n                ITD Software\n      </Link>{' '}\n            {new Date().getFullYear()}\n            {'.'}\n        </Typography>\n    );\n}","import { makeStyles } from \"@material-ui/core/styles\";\n\nexport const useStyles = makeStyles((theme) => ({\n  papersurround: {\n    margin: \"auto\",\n    width: \"500px\",\n  },\n\n  paper: {\n    marginTop: theme.spacing(8),\n    padding: \"auto\",\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n  },\n\n  avatar: {\n    margin: theme.spacing(2),\n    padding: theme.spacing(1),\n    backgroundColor: \"#004064\",\n    width: \"100px\",\n    height: \"100px\",\n  },\n\n  form: {\n    width: \"100%\", // Fix IE 11 issue.\n    marginTop: theme.spacing(1),\n  },\n\n  submit: {\n    margin: theme.spacing(3, 0, 2),\n    color: \"white\",\n    background: \"#004064\",\n  },\n\n  error: {\n    color: \"red\",\n  },\n\n  \"@media (max-width: 1024px)\": {\n   form:{\n     width: '100%'\n   } \n  },\n}));\n","import { Paper } from '@material-ui/core';\nimport Avatar from '@material-ui/core/Avatar';\nimport Box from '@material-ui/core/Box';\nimport Button from '@material-ui/core/Button';\nimport Container from '@material-ui/core/Container';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Grid from '@material-ui/core/Grid';\nimport Link from '@material-ui/core/Link';\nimport TextField from '@material-ui/core/TextField';\nimport Typography from '@material-ui/core/Typography';\nimport React from 'react';\nimport { RouteComponentProps } from 'react-router-dom';\n\nimport Copyright from './copyright';\nimport useLogin from './logic';\nimport { useStyles } from './style';\n\n\nexport default function Login(props: RouteComponentProps) {\n  const classes = useStyles();\n  const { login, data, password, setPassword, username, setUsername } = useLogin()\n\n  if (data[0] && data[0][\"id\"]) props.history.push(`/reports`)\n\n  return (\n    <Paper className={classes.papersurround}>\n      <Container component=\"main\" maxWidth=\"xs\" className={classes.paper}>\n        <CssBaseline />\n        <div className={classes.paper}>\n          <Typography>Updated</Typography>\n          <Avatar className={classes.avatar}>\n            {/* <LockOutlinedIcon /> */}\n            <img src='ITDlogo.jpg' alt='logo'></img>\n          </Avatar>\n          <Typography component=\"h1\" variant=\"h5\">\n            Sign in\n        </Typography>\n          <form className={classes.form} noValidate>\n            <TextField\n              variant=\"outlined\"\n              margin=\"normal\"\n              required\n              fullWidth\n              id=\"email\"\n              label=\"Email Address\"\n              name=\"email\"\n              autoComplete=\"email\"\n              autoFocus\n              onChange={(e) => setUsername(e.target.value)}\n            />\n            <TextField\n              variant=\"outlined\"\n              margin=\"normal\"\n              required\n              fullWidth\n              name=\"password\"\n              label=\"Password\"\n              type=\"password\"\n              id=\"password\"\n              autoComplete=\"current-password\"\n              onChange={(e) => setPassword(e.target.value)}\n            />\n\n            <Typography className={classes.error}>{data.toString()}</Typography>\n            <Button\n              fullWidth\n              variant=\"contained\"\n              className={classes.submit}\n              onClick={login.bind(this, username, password)}\n            >\n              Sign In\n          </Button>\n            <Grid container>\n              <Grid item xs>\n                <Link href=\"#\" variant=\"body2\">\n                  Forgot password?\n              </Link>\n              </Grid>\n              <Grid item>\n                <Link href=\"#\" variant=\"body2\">\n                  {\"Don't have an account? Sign Up\"}\n                </Link>\n              </Grid>\n            </Grid>\n          </form>\n        </div>\n        <Box mt={8}>\n          <Copyright />\n        </Box>\n      </Container>\n\n    </Paper >\n\n  );\n}","import { useState } from 'react';\n\nexport interface UserData {\n    id: number,\n    username: string\n}\n\nexport default function useLogin() {\n    const [username, setUsername] = useState(\"\")\n    const [password, setPassword] = useState(\"\")\n    const [data, setData] = useState<UserData[]>([])\n\n    async function login(username: string, password: string) {\n        console.log(username);\n        console.log(password);\n\n        fetch(`${process.env.REACT_APP_DOMAIN}api/login`, {\n            method: 'POST',\n            headers: {\n                'Accept': 'application/json',\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({ username: username, password: password })\n        })\n            .then(res => res.json())\n            .then(data => {\n                setData(data)\n            })\n            .catch((error) => console.log(error));\n    }\n    return {\n        setUsername,\n        setPassword,\n        data,\n        setData,\n        login,\n        username,\n        password\n    }\n}","import styled from \"styled-components\";\n\nconst Div = styled.div`\n  --color: ${(props) => props.color};\n  text-align: left;\n\n  .MuiFormControl-root {\n    margin: 2px 8px;\n  }\n\n  .MuiInputBase-root {\n    color: var(--color);\n  }\n\n  .MuiSvgIcon-root {\n    fill: var(--color);\n  }\n\n  .MuiInput-underline::before {\n    border-bottom: 1px solid var(--color);\n  }\n\n  .makeStyles-selectEmpty-275 {\n    margin-top: 0;\n  }\n\n  .makeStyles-formControl-274 {\n    margin: 0;\n  }\n\n  .MuiInput-underline::after {\n    border-bottom: 1px solid var(--color);\n  }\n\n  .MuiInput-underline:hover:not(.Mui-disabled)::before {\n    border-bottom: 2px solid var(--color);\n    border-bottom-color: var(--color);\n  }\n\n  .Mui-selected:hover {\n    background-color: var(--color);\n  }\n\n  .makeStyles-formControl-274 {\n    margin: 2px 5px;\n  }\n`;\nexport default Div","import FormControl from '@material-ui/core/FormControl';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport MuiSelect from '@material-ui/core/Select';\r\nimport React, { HTMLAttributes } from 'react';\r\nimport { useEffect, ReactNode } from 'react';\r\n\r\nimport Div from './style';\r\n\r\nexport default function useSimpleSelect(items: string[], color?: string) {\r\n\r\n    const [selected, setSelected] = React.useState(\r\n        items[0]\r\n            ? items[0]\r\n            : 'empty'\r\n    );\r\n\r\n    useEffect(() => {\r\n        if (selected === 'empty' && items[0])\r\n            setSelected(items[0])\r\n    }, [items])\r\n\r\n    function Items() {\r\n        return items.map((s, index) => {\r\n            return <MenuItem\r\n                key={index}\r\n                onMouseDown={\r\n                    () => {\r\n                        setSelected(s);\r\n                    }\r\n                }>\r\n                {s}\r\n            </MenuItem>\r\n        });\r\n    }\r\n\r\n    function Select(props: HTMLAttributes<HTMLDivElement>) {\r\n        return (\r\n            <Div color={color} className=\"select\">\r\n                <FormControl >\r\n                    <MuiSelect\r\n                        value={''}\r\n                        displayEmpty\r\n                        label={selected}\r\n                        renderValue={() => { return selected }}\r\n                    >\r\n                        {Items()}\r\n                    </MuiSelect>\r\n                </FormControl>\r\n            </Div>\r\n        );\r\n    }\r\n\r\n    return {\r\n        selected,\r\n        Select\r\n    }\r\n\r\n}","import { useState, useEffect } from 'react'\r\n\r\nexport interface obj {\r\n    [key: string]: any\r\n}\r\n\r\nexport default function useData(url: string, /*format: (d: obj[]) => obj[]*/) {\r\n\r\n    const [data, setData] = useState<obj[]>([]);\r\n\r\n    async function fetchData() {\r\n        try {\r\n            fetch(`${process.env.REACT_APP_DOMAIN}${url}`)\r\n                .then(res => res.json())\r\n                .then(data => {\r\n                    data != null\r\n                        ? setData(data)\r\n                        : setData([])\r\n                })\r\n                .catch((error) => {\r\n                    console.error(error)\r\n                })\r\n        } catch (err) {\r\n            setData([])\r\n            console.error(err)\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        fetchData();\r\n    }, [url]);\r\n\r\n    return {\r\n        data,\r\n        setData,\r\n        fetchData,\r\n    }\r\n\r\n}\r\n","import AppBar from '@material-ui/core/AppBar/AppBar';\nimport React, { useState, useEffect, ReactNode } from 'react';\nimport Div from './style'\nimport Typography from '@material-ui/core/Typography/Typography'\nimport Toolbar from '@material-ui/core/Toolbar';\nimport { Link, } from 'react-router-dom';\nimport useDBMenu from \"./usedbmenu/useDBMenu\"\nimport \"./style.scss\"\n\nexport default function useNavBar() {\n\n    const { Select, selected } = useDBMenu()\n    const [db, setDb] = useState('itdepos');\n\n    useEffect(() => {\n        if (selected !== \"empty\") setDb(selected)\n    }, [selected])\n\n    function NavBar() {\n        return (\n            // <Div><AppBar position={\"fixed\"}>\n            <div className=\"NavBar\">\n                <AppBar position=\"fixed\">\n                    <div className='left'>\n                        <img src='ITDlogo.jpg' alt='logo'></img>\n                        <Typography className=\"text\">Branch: </Typography><Select />\n                    </div>\n                    <div className=\"right\">\n                        <Link className=\"link\" to={\"/\"}><Typography >Logout</Typography></Link>\n                    </div>\n                </AppBar>\n            </div>\n        )\n    }\n\n    return {\n        db,\n        NavBar\n    }\n}\n","import useSelect from '../../../../../lib/useselect/useselect'\nimport React, { useEffect, useState } from 'react'\nimport useData, { obj } from '../../../../../lib/usedata'\n\nexport default function useDBMenu() {\n    const { data } = useData(`api/databases`)\n    const [DBList, setDBList] = useState([] as string[])\n    const { Select, selected } = useSelect(DBList, \"white\");\n\n    useEffect(() => {\n        setDBList(createDBList(data))\n    }, [data])\n\n    return {\n        Select,\n        selected\n    }\n}\n\nexport function createDBList(data: obj[]): string[] {\n    let dbList: string[] = data.map(e => {\n        return e.schema_name\n    })\n    return dbList\n}","\r\n\r\nexport interface obj {\r\n    [key: string]: any\r\n}\r\n\r\nexport function addRows(data: obj[], newRows: obj[]): obj[] {\r\n    return [...data, ...newRows]\r\n}\r\n\r\nexport function notEmpty(data: obj[]): number {\r\n    return (data && data.length);\r\n}\r\n\r\nexport function getColumn(data: obj[], col: string): number[] | string[] {\r\n    return (notEmpty(data)) ? data.map(e => { return e[col] }) : [0];\r\n}\r\n\r\nexport function sumColumn(data: obj[], col: string) {\r\n    let column = getColumn(data, col) as number[]\r\n    return column.reduce((acc, n) => { return acc + n });\r\n}\r\n\r\nexport function setColumn(data: obj[], column: string, f: (v: any) => any) {\r\n    let copy: obj[] = JSON.parse(JSON.stringify(data));\r\n    copy.forEach(e => e[column] = f(e[column]));\r\n    return copy;\r\n}\r\n\r\nexport function addColumn(data: obj[], column: string, newColumn: string, f: (v: any) => any) {\r\n    let copy: obj[] = JSON.parse(JSON.stringify(data));\r\n    copy.forEach(e => Object.assign(e, { [newColumn]: f(e[column]) }));\r\n    return copy;\r\n}\r\n\r\nexport function removeColumns(data: obj[], ...col: string[]) {\r\n    const _data: obj[] = JSON.parse(JSON.stringify(data));\r\n    return (notEmpty(_data)) ? _data.map(e => { col.map(c => { return delete e[c] }); return e }) : [];\r\n}\r\n\r\nexport function columns(data: obj[], ...cols: string[]) {\r\n    return notEmpty(data)\r\n        ? data.map(e => { let en = {}; cols.map(c => { return Object.assign(en, { [c]: e[c] }) }); return en })\r\n        : []\r\n}\r\n\r\nexport function sumAndGroup(data: obj[], col: string, ...dontSum: string[]) {\r\n    let groups = getUniqueValues(data, col);\r\n    let split = groups.map(e => { return getElementsWithValue(data, col, e) });\r\n    const sumObjectsByKey = (obj1: obj, obj2: obj) => {\r\n        Object.keys(obj1).forEach(k => { obj1[k] = (typeof obj1[k] === 'number' && k !== col && !dontSum.includes(k)) ? obj1[k] + obj2[k] : obj1[k] });\r\n        return obj1;\r\n    }\r\n    split = JSON.parse(JSON.stringify(split));\r\n    let grouped = split.map(a => { return a.reduce(sumObjectsByKey) });\r\n    return grouped;\r\n}\r\n\r\nexport function split(data: obj[], col: string) {\r\n    let groups = getUniqueValues(data, col);\r\n    return groups.map(e => { return getElementsWithValue(data, col, e) });\r\n}\r\n\r\nexport function getUniqueValues(data: obj[], col: string): any[] {\r\n    let arr: any[] = []\r\n    if (notEmpty(data)) {\r\n        let uniqueVals: Set<any> = new Set()\r\n        data.forEach(e => uniqueVals.add(e[col]))\r\n        uniqueVals.forEach(v => arr.push(v))\r\n    }\r\n    return arr\r\n}\r\n\r\nexport function getElementsWithValue(data: obj[], key: string, value: any) {\r\n    return data.filter(e =>\r\n        e[key] === value)\r\n}\r\n\r\nexport function sort(data: obj[], property: any, order: string) {\r\n    return data.sort(sortByProperty(property, order))\r\n}\r\n\r\nexport function sortByProperty(property: any, ordstr: string) {\r\n    let order: number = (ordstr === 'asc') ? -1 : 1;\r\n    return function (a: obj, b: obj) {\r\n        if (a[property] > b[property])\r\n            return order;\r\n        else if (a[property] < b[property])\r\n            return -order;\r\n        return 0;\r\n    }\r\n}","export function todaysDate() {\n    var today = new Date();\n    var date = today.getFullYear() + '-' + ('0' + (today.getMonth() + 1)).slice(-2) + '-' + ('0' + (today.getDate())).slice(-2);\n    return date;\n}\n\nexport function formatDate(date: string) {\n    let d = new Date(date as string);\n    let formatted = d.getFullYear() + '-' + ('0' + (d.getMonth() + 1)).slice(-2) + '-' + ('0' + (d.getDate())).slice(-2)\n    return formatted;\n}","import './style.scss';\r\n\r\nimport EventIcon from '@material-ui/icons/Event';\r\nimport React, { EventHandler, useEffect } from 'react';\r\nimport { useState } from 'react';\r\n\r\nimport { formatDate, todaysDate } from './logic';\r\n\r\nexport default function useDate() {\r\n\r\n    const [date, setDate] = useState({ start: todaysDate(), end: todaysDate() })\r\n\r\n    function Dates(props: {}) {\r\n        return <>\r\n            <div className=\"container\">\r\n                <DateField handleChange={(e) => setDate({\r\n                    ...date, start: formatDate(e.currentTarget!.value), end: formatDate(date.end)\r\n                })} />\r\n                <text>-</text>\r\n                <DateField handleChange={(e) => setDate({\r\n                    ...date, start: formatDate(date.start), end: formatDate(e.currentTarget.value)\r\n                })} />\r\n            </div>\r\n        </>\r\n    }\r\n\r\n    function Date(props: {}) {\r\n        return <DateField handleChange={(e) => setDate({\r\n            ...date, start: formatDate(e.currentTarget.value), end: formatDate(e.currentTarget.value)\r\n        })} />\r\n    }\r\n\r\n    function DateField(props: { handleChange: (e: React.FormEvent<HTMLInputElement>) => void }) {\r\n        return <div className=\"container\"><input type=\"date\"\r\n            required\r\n            defaultValue={date.start}\r\n            onChange={props.handleChange}\r\n        />\r\n            <EventIcon className=\"icon\" />\r\n        </div>\r\n    }\r\n\r\n    return {\r\n        startDate: date.start,\r\n        endDate: date.end,\r\n        Dates,\r\n        Date\r\n    }\r\n\r\n}\r\n","import './style.scss';\r\n\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport React, { HTMLAttributes, ReactHTMLElement, ReactNode } from 'react';\r\n\r\nexport default function HeaderBar(props: { children: ReactNode }) {\r\n\r\n    return <div className=\"HeaderBar\"><AppBar >{props.children}</AppBar></div>\r\n\r\n}\r\n","import styled from \"styled-components\";\n\nconst Div = styled.div`\n  overflow-y: scroll;\n\n  .MuiTableCell-root {\n    padding: 0px 8px !important;\n    font-size: 1em;\n    margin: 0px 0px;\n    font-size: 12px;\n    max-width: 3vw;\n    min-width: 0;\n    word-wrap: break-word;\n  }\n\n  .MuiTable-root {\n    margin: 0;\n  }\n\n  .emptyMessage {\n    margin: auto;\n  }\n`;\n\nexport default Div;\n","\r\nexport function getUniqueValues(objArr, key) {\r\n    return [...new Set(objArr.map(i => {\r\n        return getValue(i, key);\r\n    }))];\r\n}\r\n\r\nexport function getElementsWithValue(objArr, key, value) {\r\n    return objArr.filter(e =>\r\n        getValue(e, key) === value)\r\n}\r\n\r\nexport function getData(url) {\r\n    fetch(url)\r\n        .then(res => res.json())\r\n        .catch((error) => {\r\n        })\r\n}\r\n\r\nexport function add(total, n) {\r\n    return total + n\r\n}\r\n\r\nexport function colors(subArr) {\r\n    let colors = [\r\n        'rgba(0,0,0, 0.6)',\r\n        'rgba(128,128,128, 0.6)',\r\n        'rgba(128,128,0, 0.6)',\r\n        'rgba(128,0,128, 0.6)',\r\n        'rgba(128,0,0, 0.6)',\r\n        'rgba(0,128,128, 0.6)',\r\n        'rgba(0,128,0, 0.6)',\r\n        'rgba(0,0,128, 0.6)',\r\n\r\n        'rgba(255,255,255, 0.6)',\r\n        'rgba(255,255,0, 0.6)',\r\n        'rgba(255,0,255, 0.6)',\r\n        'rgba(255,0,0, 0.6)',\r\n        'rgba(0,255,255, 0.6)',\r\n        'rgba(0,255,0, 0.6)',\r\n        'rgba(0,0,255, 0.6)',\r\n\r\n        'rgba(255,255,128, 0.6)',\r\n        'rgba(255,128,255, 0.6)',\r\n        'rgba(255,128,128, 0.6)',\r\n        'rgba(128,255,255, 0.6)',\r\n        'rgba(128,255,128, 0.6)',\r\n        'rgba(128,128,255, 0.6)',\r\n\r\n        'rgba(128,0,255, 0.6)',\r\n        'rgba(0,128,255, 0.6)',\r\n        'rgba(255,128,0, 0.6)',\r\n\r\n\r\n        'rgba(64,64,64, 0.6)',\r\n        'rgba(192,192,192, 0.6)',\r\n        'rgba(192,192,64, 0.6)',\r\n        'rgba(192,64,192, 0.6)',\r\n        'rgba(192,64,64, 0.6)',\r\n        'rgba(64,192,192, 0.6)',\r\n        'rgba(64,192,64, 0.6)',\r\n        'rgba(64,64,192, 0.6)',\r\n\r\n        'rgba(255,255,64, 0.6)',\r\n        'rgba(255,64,255, 0.6)',\r\n        'rgba(255,64,64, 0.6)',\r\n        'rgba(64,255,255, 0.6)',\r\n        'rgba(64,255,64, 0.6)',\r\n        'rgba(64,64,255, 0.6)',\r\n\r\n        'rgba(255,255,192, 0.6)',\r\n        'rgba(255,192,255, 0.6)',\r\n        'rgba(255,192,192, 0.6)',\r\n        'rgba(192,255,255, 0.6)',\r\n        'rgba(192,255,192, 0.6)',\r\n        'rgba(192,192,255, 0.6)',\r\n\r\n        'rgba(192,64,255, 0.6)',\r\n        'rgba(64,192,255, 0.6)',\r\n        'rgba(255,192,64, 0.6)',\r\n\r\n\r\n        'rgba(64,64,0, 0.6)',\r\n        'rgba(64,0,64, 0.6)',\r\n        'rgba(64,0,0, 0.6)',\r\n        'rgba(0,64,64, 0.6)',\r\n        'rgba(0,64,0, 0.6)',\r\n        'rgba(0,0,64, 0.6)',\r\n\r\n        'rgba(192,192,0, 0.6)',\r\n        'rgba(192,0,192, 0.6)',\r\n        'rgba(192,0,0, 0.6)',\r\n        'rgba(0,192,192, 0.6)',\r\n        'rgba(0,192,0, 0.6)',\r\n        'rgba(0,0,192, 0.6)',\r\n\r\n\r\n        'rgba(64,0,192, 0.6)',\r\n        'rgba(0,64,192, 0.6)',\r\n        'rgba(192,64,0, 0.6)',\r\n\r\n\r\n        'rgba(102,51,0, 0.6)',\r\n        'rgba(255,229,204, 0.6)',\r\n        'rgba(255,153,153, 0.6)',\r\n    ];\r\n    return subArr.map(i => { return colors[colors.length - (i % colors.length) - 1] });\r\n}\r\n\r\nexport function notEmpty(data) {\r\n    return (data && data.length)\r\n}\r\n\r\nexport function exists(data) {\r\n    return (data) ? true : false;\r\n}\r\n\r\nexport function getColumn(data, col) {\r\n    return (notEmpty(data)) ? data.map(e => { return getValue(e, col) }) : []\r\n}\r\n\r\nexport function removeColumns(refData, ...col) {\r\n    const data = JSON.parse(JSON.stringify(refData));\r\n    return (notEmpty(data)) ? data.map(e => { col.map(c => { return delete e[c] }); return e }) : [];\r\n}\r\n\r\nexport function sum(arr) {\r\n    return (notEmpty(arr)) ? arr.reduce((acc, n) => { return acc + n }) : 0;\r\n}\r\n\r\nexport function getValue(e, key) {\r\n    return e[key];\r\n}\r\n\r\nexport function convertDate(date) {\r\n    return date.getFullYear() + '-' + ('0' + (date.getMonth() + 1)).slice(-2) + '-' + ('0' + (date.getDate())).slice(-2);\r\n}\r\n\r\nexport function sizeOf(e) {\r\n    return Object.keys(e).length;\r\n}\r\n\r\nexport function viewport(small, large) {\r\n    return (window.innerWidth > 1024) ? small : large;\r\n}\r\n\r\nexport function sumAndGroup(refData, groupBy) {\r\n    const data = JSON.parse(JSON.stringify(refData));\r\n    let groups = getUniqueValues(data, groupBy);\r\n    let split = groups.map(e => { return getElementsWithValue(data, groupBy, e) });\r\n    const sumObjectsByKey = (obj1, obj2) => {\r\n        Object.keys(obj1).forEach(k => { obj1[k] = (typeof obj1[k] === 'number' && k !== groupBy) ? obj1[k] + obj2[k] : obj1[k] });\r\n        return obj1;\r\n    }\r\n    let grouped = split.map(a => { return a.reduce(sumObjectsByKey) });\r\n    return grouped;\r\n}\r\n\r\n","import Typography from '@material-ui/core/Typography';\nimport React, { SetStateAction } from 'react';\n\nimport * as d from '../datafns';\n\nexport interface EnhancedTableHeadProps {\n    order: false | \"desc\" | \"asc\" | undefined,\n    orderBy: string,\n    onRequestSort: (event: React.MouseEvent, property: string) => void,\n    data: d.obj[],\n    rowCount: number\n    className?: string\n}\n\nexport interface HeadCell {\n    id: string,\n    numeric: boolean,\n    disablePadding: false,\n    label: string\n}\n\nexport interface Classes {\n    root?: any\n    hilight?: any\n    visuallyHidden?: any\n}\n\nexport interface EnhancedTableProps {\n    sortCallback?: React.Dispatch<SetStateAction<any>>\n    bufferCallback?: () => void\n    data: d.obj[]\n}\n\nexport interface EmptyMessageProps {\n    data: d.obj[]\n}\n\nexport function sortByProperty(property: string, order: string) {\n    let ord = (order === 'asc') ? -1 : 1;\n    return function (a: d.obj, b: d.obj) {\n        if (a[property] > b[property])\n            return ord;\n        else if (a[property] < b[property])\n            return -ord;\n\n        return 0;\n    }\n}\n\nexport function EmptyMessage(props: EmptyMessageProps) {\n    return d.notEmpty(props.data)\n        ? <></>\n        : <div className='emptyMessage'><Typography >Empty</Typography></div>\n}\n\n","import './style.ts';\n\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport TableSortLabel from '@material-ui/core/TableSortLabel';\nimport React from 'react';\n\nimport * as d from '../datafns';\nimport * as _ from './logic';\n\nexport default function EnhancedTableHead(props: _.EnhancedTableHeadProps) {\n  const { order, orderBy, onRequestSort } = props;\n  const createSortHandler = (property: string) => (event: React.MouseEvent) => {\n    onRequestSort(event, property);\n  };\n  const [headCells, setHeadCells] = React.useState<_.HeadCell[]>([]);\n  const [data, setData] = React.useState<d.obj[]>([]);\n\n  React.useEffect(() => {\n    if (d.notEmpty(props.data) && data !== props.data) {\n      setHeadCells(Object.keys(props.data[0]).map((e, index) => {\n        let isNum = (typeof props.data[0][e] == 'number') ? true : false\n        return {\n          id: index + 1 + '',\n          numeric: isNum,\n          disablePadding: false,\n          label: e\n        }\n      }));\n      setData(props.data);\n    } else setHeadCells([]);\n  }, [props.data]);\n\n  return (\n\n    <TableHead  >\n      <TableRow>\n        {headCells.map((headCell) => (\n          <TableCell\n            key={headCell.id}\n            align={'left'}\n            padding={headCell.disablePadding ? 'none' : 'default'}\n            sortDirection={orderBy === headCell.id ? order : false}\n            onClick={createSortHandler(headCell.id)}\n          >\n            <TableSortLabel\n              active={orderBy === headCell.id}\n              direction={orderBy === headCell.id ? order as \"desc\" | \"asc\" | undefined : 'asc'}\n            >\n              {headCell.label}\n              {/* {orderBy === headCell.id ? (\n                <span className={\"sort-message\"}>\n                  {order === 'desc' ? 'sorted descending' : 'sorted ascending'}\n                </span>\n              ) : null} */}\n            </TableSortLabel>\n          </TableCell>\n        ))}\n      </TableRow>\n    </TableHead>\n\n  );\n}\n","import './style.ts';\r\nimport Div from \"./style\"\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport KeyboardArrowDownIcon from '@material-ui/icons/KeyboardArrowDown';\r\nimport React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles'\r\n\r\nimport * as f from '../../components/functions';\r\nimport * as d from '../datafns';\r\nimport * as _ from './logic';\r\nimport EnhancedTableHead from './tablehead';\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  head: {\r\n    backgroundColor: \"blue\"\r\n  }\r\n\r\n}))\r\n\r\nexport default function EnhancedTable(props: _.EnhancedTableProps) {\r\n\r\n  const classes = useStyles();\r\n  const rowsPerBuffer = 100;\r\n  const [displayBuffer, setDisplayBuffer] = React.useState(true)\r\n  const [data, setData] = React.useState<d.obj[]>([]);\r\n  const [order, setOrder] = React.useState<false | \"desc\" | \"asc\" | undefined>('asc');\r\n  const [orderBy, setOrderBy] = React.useState('calories');\r\n  const dense = false;\r\n  const [rowCount, setRowCount] = React.useState(0);\r\n  const [rows, setRows] = React.useState<d.obj[]>([]);\r\n  const [bufferCount, setBufferCount] = React.useState(1)\r\n\r\n  const handleRequestSort = (event: React.MouseEvent, property: string) => {\r\n    const isAsc = order === 'asc';\r\n    setOrder(isAsc ? 'desc' : 'asc');\r\n    setOrderBy(property);\r\n    if (props.sortCallback) {\r\n      props.sortCallback({ by: event.currentTarget.textContent, order: isAsc ? 'desc' : 'asc' })\r\n    }\r\n    else {\r\n      let header = event.currentTarget.firstChild!.firstChild as any\r\n      let label = header.data as string\r\n      let sorted = (data.sort(_.sortByProperty(label, order as string)));\r\n      setRows(sorted.map((e: d.obj) => {\r\n        return Object.values(e).map((e, index) => {\r\n          if (typeof e === 'number' && e % 1 !== 0) e = e.toFixed(2)\r\n          return <TableCell key={index} align=\"left\">{e}</TableCell>\r\n        })\r\n      }));\r\n    }\r\n  };\r\n\r\n  function Buffer() {\r\n    return displayBuffer\r\n      ? <KeyboardArrowDownIcon onClick={() => {\r\n        setBufferCount(bufferCount + 1)\r\n      }} />\r\n      : <></>\r\n  }\r\n\r\n  React.useEffect(() => {\r\n    if (f.notEmpty(props.data)) {\r\n      setData(props.data);\r\n      setRows(props.data.map(e => {\r\n        return Object.values(e).map((e, index) => {\r\n          if (typeof e === 'number') e = + (Math.round(e * 100) / 100)\r\n          return <TableCell key={index} align=\"left\">{e as string | number}</TableCell>\r\n        })\r\n      }));\r\n      setDisplayBuffer(true)\r\n    } else {\r\n      setData([]);\r\n      setRows([]);\r\n      setRowCount(0);\r\n      setBufferCount(1)\r\n    }\r\n  }, [props.data]);\r\n\r\n  React.useEffect(() => {\r\n    setRowCount(rowsPerBuffer * bufferCount);\r\n    if (rowCount > props.data.length) setDisplayBuffer(false)\r\n    if (props.bufferCallback && bufferCount > 1) props.bufferCallback()\r\n  }, [bufferCount])\r\n\r\n  return (\r\n    <Div className=\"table\">\r\n      <Table stickyHeader\r\n        aria-labelledby=\"tableTitle\"\r\n        size={dense ? 'small' : 'medium'}\r\n        aria-label=\"enhanced table\"\r\n      >\r\n        <EnhancedTableHead className={classes.head}\r\n          order={order}\r\n          orderBy={orderBy}\r\n          onRequestSort={handleRequestSort}\r\n          rowCount={rows.length}\r\n          data={data}\r\n        />\r\n\r\n        <TableBody className=\"tableBody\">\r\n          {rows\r\n            .map((row, index) => {\r\n              return (\r\n                <TableRow\r\n                  key={index}\r\n                  hover\r\n                  role=\"checkbox\"\r\n                  tabIndex={-1}\r\n                >\r\n                  {rows[index]}\r\n                </TableRow>\r\n              );\r\n            })}\r\n        </TableBody>\r\n      </Table>\r\n      <Buffer />\r\n      <_.EmptyMessage data={props.data} />\r\n    </Div>\r\n  );\r\n}\r\n\r\n","import styled from 'styled-components';\r\nimport useSimpleSelect from '../../../../lib/useselect/useselect'\r\nimport * as d from '../../../../lib/datafns'\r\nimport { useState, useEffect } from 'react'\r\nimport Typography from '@material-ui/core/Typography'\r\nimport useData from '../../../../lib/usedata';\r\nimport useDate from '../../../../lib/usedate/usedate';\r\nimport React from 'react';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport HeaderBar from './headerbar/headerbar'\r\nimport SimpleSelect from '../../../../lib/useselect/useselect'\r\nimport Table from '../../../../lib/table/table'\r\nimport { ReportProps } from \"./logic\";\r\n\r\n// interface CashierHistoryProps {\r\n//     db: string,\r\n//     header: string,\r\n// }\r\n\r\nexport default function CashierHistory(props: ReportProps) {\r\n\r\n    const [tableData, setTableData] = useState([] as d.obj[][]);\r\n    const {\r\n        startDate,\r\n        endDate,\r\n        Dates\r\n    } = useDate();\r\n    const {\r\n        data\r\n    } = useData(`/api/salesByProduct/${props.db}/${startDate}/${endDate}`);\r\n    const {\r\n        selected,\r\n        Select,\r\n    } = useSimpleSelect(d.getUniqueValues(data, 'Cashier'), \"black\");\r\n\r\n    function formatTableData(data: d.obj[], cashier: string) {\r\n        let filterColumns = d.columns(data, 'Receipt', 'Product', 'Sales', 'Qty', 'Refund', 'Discount', 'TillDate', 'TillTime', 'Cashier')\r\n        let filterRows = d.getElementsWithValue(filterColumns, 'Cashier', cashier)\r\n        let sortByReceipt = d.sort(filterRows, 'Receipt', \"desc\")\r\n        return d.split(sortByReceipt, 'Receipt')\r\n    }\r\n\r\n    function Tables() {\r\n        let lastDate = '00-00-00'\r\n        function PrintDate(date: string) {\r\n            if (date === lastDate)\r\n                return <></>\r\n            else {\r\n                lastDate = date;\r\n                return <DateLabel><Typography>{date}</Typography></DateLabel>\r\n            }\r\n        }\r\n\r\n        return (<>{\r\n            tableData.map((e, index) => {\r\n                return < div key={index}>\r\n                    {PrintDate(e[0]['TillDate'])}\r\n                    <TableLabel>\r\n                        <Typography>{'Receipt ' + e[0]['Receipt']}</Typography>\r\n                        <Typography>{e[0]['TillTime']}</Typography>\r\n                    </TableLabel>\r\n                    <Table data={d.columns(e, 'Product', 'Qty', 'Sales')} />\r\n                </div>\r\n            })\r\n        }</>)\r\n    }\r\n\r\n    useEffect(() => {\r\n        setTableData(formatTableData(data, selected));\r\n    }, [data, selected])\r\n\r\n    return (\r\n        <div className='report' >\r\n            <Paper className='reportContainer'>\r\n                <HeaderBar ><Typography className='text' variant=\"h6\">{props.header}</Typography><Dates /></HeaderBar>\r\n                <div className='reportBody' id=\"cashierHistory\">\r\n                    <Select />\r\n                    <Tables />\r\n                </div>\r\n            </Paper>\r\n        </div>\r\n    );\r\n}\r\n\r\nconst DateLabel = styled.div`\r\n.MuiTypography-root{\r\ntext-align: left;\r\nfont-weight: bold;\r\ncolor: #004064;\r\nfont-size: 1.25em; \r\nmargin: 5px;\r\n}\r\n`;\r\n\r\nconst TableLabel = styled.div`\r\ndisplay: flex;\r\nflex-direction: row;\r\njustify-content: space-between;\r\ntext-align: left;\r\nbackground-color:#004064;\r\ncolor: white;\r\n\r\n.MuiTypography-body1 {\r\n    font-size: 1em;\r\n    margin-left: 5px;\r\n    margin-right: 5px;\r\n}\r\n\r\n`;\r\n","\r\nimport { useState, useEffect } from 'react'\r\nimport Typography from '@material-ui/core/Typography'\r\nimport useData from '../../../../lib/usedata';\r\nimport useDate from '../../../../lib/usedate/usedate';\r\nimport React from 'react';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport HeaderBar from './headerbar/headerbar'\r\nimport SimpleSelect from '../../../../lib/useselect/useselect'\r\nimport Table from '../../../../lib/table/table'\r\nimport * as d from \"../../../../lib/datafns\"\r\nimport { ReportProps } from './logic';\r\n\r\nexport default function ExpiryDates(props: ReportProps) {\r\n\r\n    const {\r\n        startDate,\r\n        endDate,\r\n        Dates\r\n    } = useDate();\r\n\r\n    const {\r\n        data\r\n    } = useData(`/api/expiry/${props.db}/${startDate}/${endDate}`);\r\n\r\n    // const [tableData, setTableData] = useState([]);\r\n    // const Table = useTable(data)\r\n\r\n    // useEffect(() => {\r\n    //     setTableData(data);\r\n    // }, [data])\r\n\r\n    return (\r\n        <div className='report'>\r\n            <Paper className='reportContainer'>\r\n                <HeaderBar ><Typography className='text' variant=\"h6\">{props.header}</Typography><Dates /></HeaderBar>\r\n                <div className='reportBody'>\r\n                    <Table data={data} />\r\n                </div>\r\n            </Paper>\r\n        </div>\r\n    );\r\n}","import { useState, useEffect } from 'react'\r\nimport Typography from '@material-ui/core/Typography'\r\nimport useData from '../../../../lib/usedata';\r\nimport useDate from '../../../../lib/usedate/usedate';\r\nimport React from 'react';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport HeaderBar from './headerbar/headerbar'\r\nimport SimpleSelect from '../../../../lib/useselect/useselect'\r\nimport Table from '../../../../lib/table/table'\r\nimport { ReportProps } from './logic'\r\nexport default function PriceOverride(props: ReportProps) {\r\n\r\n    const {\r\n        startDate,\r\n        endDate,\r\n        Dates\r\n    } = useDate();\r\n\r\n    const {\r\n        data\r\n    } = useData(`/api/priceoverride/${props.db}/${startDate}/${endDate}`);\r\n\r\n    return (\r\n        <div className='report'>\r\n            <Paper className='reportContainer'>\r\n                <HeaderBar ><Typography className='text' variant=\"h6\">{props.header}</Typography><Dates /></HeaderBar>\r\n                <div className='reportBody'>\r\n                    <Table data={data} />\r\n                </div>\r\n            </Paper>\r\n        </div>\r\n    );\r\n}\r\n","import { useState, useEffect } from 'react'\r\nimport Typography from '@material-ui/core/Typography'\r\nimport useData from '../../../../lib/usedata';\r\nimport useDate from '../../../../lib/usedate/usedate';\r\nimport React from 'react';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport HeaderBar from './headerbar/headerbar'\r\nimport SimpleSelect from '../../../../lib/useselect/useselect'\r\nimport Table from '../../../../lib/table/table'\r\nimport {  ReportProps} from './logic'\r\nexport default function Refund(props: ReportProps) {\r\n\r\n    const {\r\n        startDate,\r\n        endDate,\r\n        Dates\r\n    } = useDate();\r\n\r\n    const {\r\n        data\r\n    } = useData(`/api/refund/${props.db}/${startDate}/${endDate}`);\r\n\r\n    // const [tableData, setTableData] = useState([]);\r\n    // const Table = useTable(data)\r\n\r\n    // useEffect(() => {\r\n    //     setTableData(data);\r\n    // },[data])\r\n\r\n    return (\r\n        <div className='report'>\r\n            <Paper className='reportContainer'>\r\n                <HeaderBar ><Typography className='text' variant=\"h6\">{props.header}</Typography><Dates /></HeaderBar>\r\n                <div className='reportBody'>\r\n                    <Table data={data} />\r\n                </div>\r\n            </Paper>\r\n        </div>\r\n    );\r\n}","import React from 'react';\n\nimport * as d from \"../../datafns\";\nimport * as _ from './logic';\n\nexport default function Legend(props: { chartData: _.ChartData }) {\n    if (d.notEmpty(props.chartData.datasets)) {\n        let colorStrings = props.chartData.datasets[0].backgroundColor;\n        let labels = props.chartData.labels\n        let legendItems = colorStrings.map((c: string, key: number) => {\n            return <div key={key++} className='legendItem'>\n                <span key={key++} className=\"dot\" style={{ backgroundColor: c }}></span>\n                <label key={key++} className=\"label\" >{labels[colorStrings.indexOf(c)]}</label>\n            </div>\n        })\n        return <div className=\"Legend\">\n            <ul>{legendItems}</ul>\n            <div className=\"cover-bar\"></div>\n        </div>;\n    }\n    else return <div></div>\n}","\nexport function viewport(small: number, large: number) {\n  return (window.innerWidth > 1024) ? small : large;\n}\n\nexport function toInt(s: string | number): number {\n  if (typeof s === 'number')\n    return s\n  else {\n    let chars = [...s]\n    let byteArr = chars.map((c: string) => { return c.charCodeAt(0) })\n    return parseInt(byteArr.join(\"\"), 10)\n  }\n}\n\nexport function colors(subArr: number[]) {\n  let colors = [\n    'rgba(0,0,0, 0.6)',\n    'rgba(128,128,128, 0.6)',\n    'rgba(128,128,0, 0.6)',\n    'rgba(128,0,128, 0.6)',\n    'rgba(128,0,0, 0.6)',\n    'rgba(0,128,128, 0.6)',\n    'rgba(0,128,0, 0.6)',\n    'rgba(0,0,128, 0.6)',\n    'rgba(255,255,255, 0.6)',\n    'rgba(255,255,0, 0.6)',\n    'rgba(255,0,255, 0.6)',\n    'rgba(255,0,0, 0.6)',\n    'rgba(0,255,255, 0.6)',\n    'rgba(0,255,0, 0.6)',\n    'rgba(0,0,255, 0.6)',\n    'rgba(255,255,128, 0.6)',\n    'rgba(255,128,255, 0.6)',\n    'rgba(255,128,128, 0.6)',\n    'rgba(128,255,255, 0.6)',\n    'rgba(128,255,128, 0.6)',\n    'rgba(128,128,255, 0.6)',\n    'rgba(128,0,255, 0.6)',\n    'rgba(0,128,255, 0.6)',\n    'rgba(255,128,0, 0.6)',\n    'rgba(64,64,64, 0.6)',\n    'rgba(192,192,192, 0.6)',\n    'rgba(192,192,64, 0.6)',\n    'rgba(192,64,192, 0.6)',\n    'rgba(192,64,64, 0.6)',\n    'rgba(64,192,192, 0.6)',\n    'rgba(64,192,64, 0.6)',\n    'rgba(64,64,192, 0.6)',\n    'rgba(255,255,64, 0.6)',\n    'rgba(255,64,255, 0.6)',\n    'rgba(255,64,64, 0.6)',\n    'rgba(64,255,255, 0.6)',\n    'rgba(64,255,64, 0.6)',\n    'rgba(64,64,255, 0.6)',\n    'rgba(255,255,192, 0.6)',\n    'rgba(255,192,255, 0.6)',\n    'rgba(255,192,192, 0.6)',\n    'rgba(192,255,255, 0.6)',\n    'rgba(192,255,192, 0.6)',\n    'rgba(192,192,255, 0.6)',\n    'rgba(192,64,255, 0.6)',\n    'rgba(64,192,255, 0.6)',\n    'rgba(255,192,64, 0.6)',\n    'rgba(64,64,0, 0.6)',\n    'rgba(64,0,64, 0.6)',\n    'rgba(64,0,0, 0.6)',\n    'rgba(0,64,64, 0.6)',\n    'rgba(0,64,0, 0.6)',\n    'rgba(0,0,64, 0.6)',\n    'rgba(192,192,0, 0.6)',\n    'rgba(192,0,192, 0.6)',\n    'rgba(192,0,0, 0.6)',\n    'rgba(0,192,192, 0.6)',\n    'rgba(0,192,0, 0.6)',\n    'rgba(0,0,192, 0.6)',\n    'rgba(64,0,192, 0.6)',\n    'rgba(0,64,192, 0.6)',\n    'rgba(192,64,0, 0.6)',\n    'rgba(102,51,0, 0.6)',\n    'rgba(255,229,204, 0.6)',\n    'rgba(255,153,153, 0.6)',\n  ];\n  return subArr.map(i => { return colors[colors.length - (i % colors.length) - 1] });\n}","import '../style.scss';\r\n\r\nimport React from 'react';\r\nimport { Pie } from 'react-chartjs-2';\r\n\r\nimport * as d from '../../datafns';\r\nimport Legend from './legend';\r\nimport * as _ from './logic';\r\n\r\nexport default function PieChart(props: { data: d.obj[], groupBy: string, values: string }) {\r\n  let grouped = d.sumAndGroup(props.data, props.groupBy);\r\n  let x: number[] = d.getColumn(grouped, props.values) as number[]\r\n  let labels: string[] = d.getColumn(grouped, props.groupBy) as string[]\r\n  let colorIds: number[] = d.notEmpty(props.data) ? labels.map(s => { return _.toInt(s) }) : []\r\n  let chartData: _.ChartData = _.formatChartData(x, labels, colorIds)\r\n  let total = x.reduce((acc, n) => { return acc + n })\r\n  let toolTipSize = _.viewport(12, 12)\r\n  if (d.notEmpty(chartData.datasets))\r\n    return (\r\n      <div className=\"PieChart\">\r\n        <div className=\"chart\">\r\n          <Pie\r\n            height={1} width={1}\r\n            data={chartData}\r\n            options={\r\n              {\r\n                layout: {\r\n                },\r\n                labels: { display: false },\r\n                legend: {\r\n                  display: false,\r\n                  position: 'top',\r\n                  align: 'center',\r\n                  labels: {\r\n                    usePointStyle: true,\r\n                    fontSize: 24\r\n                  },\r\n                  fullWidth: true\r\n                },\r\n                tooltips: {\r\n                  bodyFontSize: toolTipSize,\r\n                  mode: 'index',\r\n                  callbacks: {\r\n                    label: (tooltipItem: any, data: _.ChartData) => {\r\n                      var label = data.labels[tooltipItem.index];\r\n                      return label;\r\n                    },\r\n                    afterLabel: (tooltipItem: any, data: _.ChartData) => {\r\n                      var value = data.datasets[tooltipItem.datasetIndex].data[tooltipItem.index];\r\n                      var percent: number | string = data.datasets[tooltipItem.datasetIndex].data[tooltipItem.index] / total * 100;\r\n                      percent = percent.toFixed(2); // make a nice string\r\n                      return (!Number.isInteger(value)) ? '£ ' + value.toFixed(2) + ' (' + percent + '%)' : value + ' (' + percent + '%)';\r\n                    }\r\n                  },\r\n                  fontSize: 24\r\n                }\r\n              }\r\n            }\r\n          />\r\n        </div>\r\n        <Legend chartData={chartData} />\r\n      </div>\r\n    )\r\n  else return (\r\n    <div className=\"chart\">\r\n      <Pie\r\n        data={chartData}\r\n      />\r\n    </div>\r\n  )\r\n}","import {colors} from '../logic'\nexport * from \"../logic\"\n\nexport interface DataSet {\n  label: string\n  data: number[]\n  backgroundColor: string[]\n}\n\nexport interface ChartData {\n  labels: string[]\n  datasets: DataSet[]\n}\n\n\nexport function formatChartData(x: number[], labels: string[], colorIds: number[]): ChartData {\n  return {\n    labels: labels,\n    datasets: [\n      {\n        label: 'Net Sales £',\n        data: x,\n        backgroundColor: colors(colorIds)\n      }\n    ]\n  };\n}\n\n","import { ChartData } from \"./logic\";\nimport React from \"react\"\n\nexport default function Legend(props: { chartData: ChartData }) {\n    let key = 0;\n    let colorStrings = props.chartData.datasets.map(i => { return i.backgroundColor });\n    let labels = props.chartData.datasets.map(i => { return i.label });\n    let legendItems = colorStrings.map(c => {\n        return <div key={key++} className='legendItem'>\n            <span key={key++} className=\"dot\" style={{ backgroundColor: c }}></span>\n            <label key={key++} className=\"label\" >{labels[colorStrings.indexOf(c)]}</label>\n        </div>\n    })\n    return <div className=\"Legend\">\n        <ul>{legendItems}</ul>\n        <div className=\"cover-bar\"></div>\n    </div>;\n}","import React from 'react';\r\nimport { Bar } from 'react-chartjs-2';\r\n\r\nimport * as d from '../../datafns';\r\nimport Legend from './legend';\r\nimport { ChartData, formatChartData, getLabelSize, viewport } from './logic';\r\nimport \"../style.scss\"\r\n\r\nexport default function StackedBarChart(props: { className?: string, data: d.obj[], x: string[], groupBy: string, values: string }) {\r\n\r\n  let { data, x, groupBy, values } = props\r\n  let chartData: ChartData = formatChartData(data, x, groupBy, values)\r\n  let total = d.sumColumn(data, values)\r\n  let labelSize = getLabelSize()\r\n\r\n  if (chartData.datasets !== undefined)\r\n    return (\r\n      <div className=\"BarChart\">\r\n        <div className=\"chart\">\r\n          <Bar\r\n            data={chartData}\r\n            options={\r\n              {\r\n                scales: {\r\n                  xAxes: [{\r\n                    stacked: true,\r\n                    ticks:\r\n                    {\r\n                      fontSize: labelSize\r\n                    },\r\n                  },\r\n                  ],\r\n                  yAxes: [{\r\n                    stacked: true,\r\n                    ticks:\r\n                    {\r\n                      fontSize: labelSize\r\n                    }\r\n                  }]\r\n                },\r\n                labels: {\r\n                  display: false,\r\n                  fontSize: 48\r\n                },\r\n                legend: {\r\n                  display: false,\r\n                  position: 'right',\r\n                  align: 'center',\r\n                  labels: {\r\n                    usePointStyle: true,\r\n                  },\r\n                  fullWidth: true\r\n                },\r\n                tooltips: {\r\n                  bodyFontSize: viewport(12, 12),\r\n                  mode: 'single',\r\n                  callbacks: {\r\n                    label: (tooltipItem: any, data: ChartData) => {\r\n                      let item = data.datasets[tooltipItem.datasetIndex]\r\n                      var label = item.label;\r\n                      if (item.data[tooltipItem.index] > 0)\r\n                        return label;\r\n                      else return '';\r\n                    },\r\n                    afterLabel: (tooltipItem: any, data: ChartData) => {\r\n                      let item = data.datasets[tooltipItem.datasetIndex]\r\n                      var sales = item.data[tooltipItem.index];\r\n                      var percent: number = item.data[tooltipItem.index] / total * 100;\r\n                      var percentString = percent.toFixed(2); // make a nice string\r\n                      if (item.data[tooltipItem.index] > 0)\r\n                        return (!Number.isInteger(sales)) ? '£ ' + sales.toFixed(2) + ' (' + percentString + '%)' : sales + ' (' + percentString + '%)';\r\n                      else return '';\r\n                    }\r\n                  },\r\n                }\r\n              }\r\n            }\r\n          />\r\n        </div>\r\n        <Legend chartData={chartData} />\r\n      </div>\r\n    )\r\n  else return (\r\n    <div className=\"chart\">\r\n      <Bar\r\n        data={chartData}\r\n      />\r\n    </div>\r\n  )\r\n\r\n}\r\n","import {\n    notEmpty,\n    getUniqueValues,\n    obj,\n    getElementsWithValue,\n    getColumn,\n} from \"../../datafns\"\n\nimport { colors, toInt, viewport } from \"../logic\"\n\nexport * from \"../logic\"\n\nexport function getLabelSize(): number {\n    return viewport(12, 26);\n}\n\nexport interface DataSet {\n    label: string,\n    data: number[],\n    backgroundColor: string,\n    datasetKeyProvider: number\n}\n\nexport interface ChartData {\n    labels: string[],\n    datasets: DataSet[]\n}\n\nexport function formatChartData(data: obj[], x: string[], groupBy: string, values: string): ChartData {\n    // let stacks = d.getUniqueValues(data, groupBy);\n    let stackNames: string[] = getUniqueValues(data, groupBy);\n    let stackIds: number[] = stackNames.map(s => { return toInt(s) })\n    let clrs: string[] = colors(stackIds)\n    let dataSets = stackNames.map((name, index) => {\n        let color: string = clrs[index]\n        let valuesArr: number[] = x.map((t: string) => {\n            let atHour: obj[] = getElementsWithValue(data, 'TillHour', t);\n            let withCategory: obj[] = getElementsWithValue(atHour, groupBy, stackNames[index]);\n            let withValue: number[] = getColumn(withCategory, values) as number[];\n            return notEmpty(withCategory) ? withValue.reduce((acc, n) => acc + n) : 0;\n        })\n        return {\n            label: stackNames[stackNames.indexOf(name)] as string,\n            data: valuesArr,\n            backgroundColor: color,\n            datasetKeyProvider: index\n        }\n    });\n    return {\n        labels: x,\n        datasets: dataSets\n    };\n}","import './style.scss';\r\n\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Radio from '@material-ui/core/Radio';\r\nimport RadioGroup from '@material-ui/core/RadioGroup';\r\nimport React, { ChangeEvent, SetStateAction } from 'react';\r\n\r\nexport default function RadioButtons(props: { value: string, handleChange: (e: ChangeEvent<HTMLInputElement>) => void }) {\r\n\r\n    return (\r\n        <div className= \"RadioButtons\">\r\n            <FormControl component=\"fieldset\">\r\n                <RadioGroup color=\"#004064\" aria-label=\"gender\" name=\"gender1\" value={props.value} onChange={props.handleChange}>\r\n                    <FormControlLabel color=\"#004064\" value=\"Sales\" control={<Radio />} label=\"Sales\" />\r\n                    <FormControlLabel color=\"#004064\" value=\"Profit\" control={<Radio />} label=\"Profit\" />\r\n                    <FormControlLabel color=\"#004064\" value=\"Qty\" control={<Radio />} label=\"Quantity\" />\r\n                </RadioGroup>\r\n            </FormControl>\r\n        </div>\r\n    );\r\n}\r\n\r\n","import './style.scss';\r\nimport 'date-fns';\r\nimport useSelect from '../../../../../lib/useselect/useselect'\r\nimport CalendarTodayIcon from '@material-ui/icons/CalendarToday';\r\nimport { Paper, Container, Typography } from '@material-ui/core';\r\nimport { BarChart as BarChartIcon, PieChart as PieChartIcon } from '@material-ui/icons';\r\nimport React, { SetStateAction, useContext, useEffect, useState } from 'react';\r\n\r\nimport PieChart from '../../../../../lib/chart/piechart/piechart';\r\nimport StackedBarChart from '../../../../../lib/chart/stackedbarchart/bar_chart';\r\nimport * as d from '../../../../../lib/datafns';\r\nimport Table from '../../../../../lib/table/table';\r\nimport useData, { obj } from '../../../../../lib/usedata';\r\nimport useDate from '../../../../../lib/usedate/usedate';\r\nimport DropDown from '../../../../drop_down';\r\nimport HeaderBar from '../headerbar/headerbar';\r\nimport useIconSwitch from './icon_switch';\r\nimport RadioButtons from '../radio_buttons/radio_buttons.';\r\nimport { ReportProps } from '../logic';\r\nimport { formatTableData, GetChartProps } from './logic';\r\nimport Div from './style';\r\n\r\nexport function SalesBreakdown(props: ReportProps) {\r\n\r\n  const {\r\n    startDate,\r\n    endDate,\r\n    Dates,\r\n  } = useDate();\r\n\r\n  const { Select, selected } = useSelect(['Category', 'Product', 'PriceMark', 'Cashier', 'Receipt'], \"black\")\r\n\r\n  const { data } = useData(`/api/salesByProduct/${props.db}/${startDate}/${endDate}`)\r\n\r\n  const [groupBy, setGroupBy] = useState<string>('Category');\r\n  const [total, setTotal] = useState<number>(0);\r\n  const [dataChoice, setDataChoice] = useState<string>('Sales');\r\n  const [tableData, setTableData] = useState<obj[]>([]);\r\n  const [chart, setChart] = useState('pie');\r\n  const {\r\n    IconSwitch\r\n  } = useIconSwitch(\r\n    [\r\n      { icon: <BarChartIcon />, callBack: setChart.bind(this, 'bar') },\r\n      { icon: <PieChartIcon />, callBack: setChart.bind(this, 'pie') }\r\n    ]\r\n  );\r\n\r\n  useEffect(() => {\r\n    setTableData(formatTableData(data, groupBy));\r\n    setTotal(d.sumColumn(data, dataChoice));\r\n  }, [groupBy, dataChoice, data]);\r\n\r\n  useEffect(() => {\r\n    setGroupBy(selected)\r\n  }, [selected])\r\n\r\n  function Total() {\r\n    return (\r\n      <div className='sales'>\r\n        <Select />\r\n        <RadioButtons\r\n          handleChange={(event: React.ChangeEvent<HTMLInputElement>) => setDataChoice(event.target.value)}\r\n          value={dataChoice} />\r\n        <h1>Total: {(dataChoice === 'Qty') ? total : '£' + total.toFixed(2)}</h1>\r\n      </div>);\r\n  }\r\n\r\n  function GetChart(props: GetChartProps) {\r\n    let barChartX = Array.from(Array(24).keys()).map(obj => { return ('0' + obj + ':00').slice(-5) })\r\n    return props.chart === 'pie' ? <PieChart data={data} groupBy={groupBy} values={dataChoice} />\r\n      : <StackedBarChart data={data} x={barChartX} groupBy={groupBy} values={dataChoice} />\r\n  }\r\n\r\n  return (\r\n    <div className=\"salesBreakdown\">\r\n      <Paper className='reportContainer'>\r\n        <HeaderBar  >\r\n          <div className=\"left\">\r\n            <Typography className='text' variant=\"h6\"> {props.header}</Typography>\r\n            <Dates />\r\n            {/* <div><input type=\"date\"></input><CalendarTodayIcon /></div> */}\r\n          </div>\r\n          <div className=\"right\">\r\n            <IconSwitch />\r\n          </div>\r\n        </HeaderBar>\r\n        <div className='reportBody'>\r\n          <><Total /><GetChart chart={chart} /></>\r\n          <Table data={tableData} />\r\n        </div>\r\n      </Paper>\r\n    </div>\r\n  );\r\n}","import React, { useState, useEffect, HTMLAttributes } from 'react';\r\n\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport BarChartIcon from '@material-ui/icons/BarChart';\r\nimport PieChartIcon from '@material-ui/icons/PieChart';\r\nimport { PropTypes } from '@material-ui/core';\r\n\r\nexport default function useIconSwitch(buttons: { icon: React.ReactNode, callBack: () => any }[]) {\r\n\r\n    const [a, b] = buttons;\r\n    const [icon, setIcon] = useState('a');\r\n\r\n    function handle() {\r\n        if (icon === 'a') {\r\n            setIcon('b');\r\n            a.callBack();\r\n        }\r\n        else {\r\n            setIcon('a');\r\n            b.callBack();\r\n        }\r\n    }\r\n\r\n    function IconSwitch() {\r\n        return <button className = \"IconSwitch\" onClick={handle}>{icon === 'a' ? a.icon : b.icon}</button>\r\n    }\r\n\r\n    return {\r\n        IconSwitch\r\n    }\r\n\r\n}","import React from 'react'\nimport * as d from \"../../../../../lib/datafns\"\n\n\nexport function formatTableData(data: d.obj[], groupBy: string): d.obj[] {\n    let format = d.sumAndGroup(data, groupBy, 'Id', 'CashierNum');\n    switch (groupBy) {\n        case 'PriceMark': return d.columns(format, 'PriceMark', 'Sales', 'Cost', 'Discount', 'Refund', 'Profit', 'Qty');\n        case 'Cashier': return d.columns(format, 'Cashier', 'Sales', 'Cost', 'Discount', 'Refund', 'Profit', 'Qty');\n        case 'Product': return d.columns(format, 'Product', 'Id', 'Category', 'PriceMark', 'Sales', 'Cost', 'Discount', 'Refund', 'Profit', 'Qty');\n        case 'Category': return d.columns(format, 'Category', 'Sales', 'Cost', 'Discount', 'Refund', 'Profit', 'Qty');\n        case 'Receipt': return d.columns(format, 'Receipt', 'Cashier', 'TillDate', 'TillTime', 'Sales', 'Cost', 'Discount', 'DsctReason', 'Refund', 'Profit', 'Qty');\n        default: return d.columns(format, 'Sales', 'Cost', 'Discount', 'Refund', 'Profit', 'Qty');\n    }\n}\n\nexport interface GetDateFieldProps {\n    chart: string\n}\n\nexport interface GetChartProps {\n    chart: string\n}\n\nexport interface SalesBreakdownProps {\n    header: string\n    db: string\n    display: React.Dispatch<any>\n    phoneDisplay: string\n}\n\nexport function convertPM(data: d.obj[]) {\n    let priceMark = d.addColumn(data, 'AssocProdID', 'PriceMark', (cell) => { return cell ? 'PM' : 'Non PM' });\n    priceMark.forEach(e => { Object.assign(e, { ['Profit']: (e['Sales'] - e['Discount'] - e['Cost']) }) });\n    return priceMark;\n}\n","import { ReportProps } from './logic'\r\nimport { useState, useEffect } from 'react'\r\nimport Typography from '@material-ui/core/Typography'\r\nimport useData from '../../../../lib/usedata';\r\nimport useDate from '../../../../lib/usedate/usedate';\r\nimport React from 'react';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport HeaderBar from './headerbar/headerbar'\r\nimport SimpleSelect from '../../../../lib/useselect/useselect'\r\nimport Table from '../../../../lib/table/table'\r\nexport default function StaffHours(props: ReportProps) {\r\n\r\n    const {\r\n        startDate,\r\n        endDate,\r\n        Dates\r\n    } = useDate();\r\n\r\n    const {\r\n        data\r\n    } = useData(`/api/staffhours/${props.db}/${startDate}/${endDate}`);\r\n\r\n    // const [tableData, setTableData] = useState([]);\r\n    // const Table = useTable(data)\r\n\r\n    // useEffect(() => {\r\n    //     setTableData(data);\r\n    // },[data])\r\n\r\n    return (\r\n        <div className='report'>\r\n            <Paper className='reportContainer'>\r\n                <HeaderBar ><Typography className='text' variant=\"h6\">{props.header}</Typography><Dates /></HeaderBar>\r\n                <div className='reportBody'>\r\n                    <Table data={data} />\r\n                </div>\r\n            </Paper>\r\n        </div>\r\n    );\r\n}","import React, { useState, useEffect } from 'react'\nimport { addRows } from '../../../../lib/datafns'\n\nexport interface obj {\n    [key: string]: any\n}\n\n\nexport default function useDataBuffer(route: string, rowsPerBuffer: number) {\n    const [data, setData] = useState([] as obj[])\n    const [bufferCount, setBufferCount] = useState(0)\n\n    useEffect(() => {\n        fetch(`${process.env.REACT_APP_DOMAIN}${route}/${rowsPerBuffer}/${bufferCount}`)\n            .then(res => res.json())\n            .then(rows => setData([...data, ...rows]))\n            .catch(error => console.log(error))\n\n\n    }, [bufferCount])\n\n    useEffect(() => {\n        setBufferCount(0)\n        fetch(`${process.env.REACT_APP_DOMAIN}${route}/${rowsPerBuffer}/${bufferCount}`)\n            .then(res => res.json())\n            .then(rows => setData(rows))\n            .catch(error => console.log(error))\n    }, [route])\n\n\n    function getNextBuffer() {\n        setBufferCount(bufferCount + 1)\n    }\n\n    return {\n        data,\n        getNextBuffer\n    }\n\n}","import useDataBuffer from '../usedatabuffer'\nimport Table from '../../../../../lib/table/table'\nimport React, { useState, useContext } from 'react'\nimport { ctx } from './stockreport'\n\nexport default function Stock() {\n\n    const [sort, setSort] = useState({ by: \"id \", order: \"desc\" })\n    const { db } = useContext(ctx)\n\n    const {\n        data,\n        getNextBuffer\n    } = useDataBuffer(`api/stock/${db}/${sort.by}/${sort.order}`, 100);\n\n    return <Table data={data} bufferCallback={getNextBuffer} sortCallback={setSort} />\n}","import useDataBuffer from '../usedatabuffer'\nimport Table from '../../../../../lib/table/table'\nimport React, { useState, useContext } from 'react'\nimport { ctx } from './stockreport'\n\nexport default function Reorder() {\n//NEXT: Implement sortCallBack in Table\n    const [sort, setSort] = useState({ by: \"id\", order: \"desc\" })\n    const { db } = useContext(ctx)\n\n    const {\n        data,\n        getNextBuffer\n    } = useDataBuffer(`api/reorder/${db}/${sort.by}/${sort.order}`, 100);\n\n    return <Table data={data} bufferCallback={getNextBuffer} sortCallback={setSort} />\n}","\nimport useDataBuffer from '../usedatabuffer'\nimport Table from '../../../../../lib/table/table'\nimport React, { useState, useContext } from 'react'\nimport { ctx } from './stockreport'\n\nexport default function NonScan() {\n\n    const [sort, setSort] = useState({ by: \"id\", order: \"desc\" })\n    const { db } = useContext(ctx)\n\n    const {\n        data,\n        getNextBuffer\n    } = useDataBuffer(`api/nonscan/${db}/${sort.by}/${sort.order}`, 100);\n\n    return <Table data={data} bufferCallback={getNextBuffer} sortCallback={setSort} />\n}","import useDataBuffer from '../usedatabuffer'\nimport Table from '../../../../../lib/table/table'\nimport React, { useState, useContext } from 'react'\nimport { ctx } from './stockreport'\nimport useDate from '../../../../../lib/usedate/usedate'\n\nexport default function StockAdjust() {\n\n    const [sort, setSort] = useState({ by: \"id\", order: \"desc\" })\n    const { db } = useContext(ctx)\n    const { startDate, endDate, Dates } = useDate();\n\n    const {\n        data,\n        getNextBuffer\n    } = useDataBuffer(`api/adjust/${db}/${startDate}/${endDate}/${sort.by}/${sort.order}`, 100);\n\n    return (<>\n        <Dates />\n        <Table data={data} bufferCallback={getNextBuffer} sortCallback={setSort} />\n    </>)\n}","import { ReportProps } from '../logic'\r\nimport 'date-fns';\r\nimport Stock from './stock'\r\nimport Reorder from './reorder';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport NonScan from './nonscan'\r\nimport StockAdjust from './stockadjust'\r\nimport React, { useEffect, useState } from 'react';\r\n\r\nimport HeaderBar from '../headerbar/headerbar'\r\nimport useSimpleSelect from '../../../../../lib/useselect/useselect';\r\nimport useData from '../../../../../lib/usedata';\r\nimport useDataBuffer from '../usedatabuffer'\r\nimport useDate from '../../../../../lib/usedate/usedate';\r\nimport Table from '../../../../../lib/table/table';\r\nimport { columns } from \"../../../../../lib/datafns\";\r\n\r\nexport const ctx = React.createContext({ db: \"itdepos\" })\r\n\r\nexport function StockReport(props: ReportProps) {\r\n\r\n    const [header, setHeader] = useState(props.header);\r\n    const { selected, Select } = useSimpleSelect(\r\n        [\r\n            \"Stock\",\r\n            \"Reorder\",\r\n            \"Non Scan\",\r\n            \"Stock Adjust\"\r\n        ],\r\n        \"white\"\r\n    );\r\n    \r\n    // useEffect(() => {\r\n    //     if (selected === \"Stock Adjust\") setDateDisplay(\"flex\")\r\n    //     else setDateDisplay(\"none\")\r\n    //     // setTableData(tableChoice(selected));\r\n    // }, [selected])\r\n\r\n    function render() {\r\n        return (\r\n            <div className='report'>\r\n                <Paper className='reportContainer'>\r\n                    <HeaderBar ><Select /></HeaderBar>\r\n                    <div className='reportBody'>\r\n                        <ctx.Provider value={{ db: props.db }}>\r\n                            <TableChoice selected={selected} db={props.db} />\r\n                        </ctx.Provider>\r\n                    </div>\r\n                </Paper>\r\n            </div>\r\n        );\r\n    }\r\n\r\n\r\n    function TableChoice(props: { selected: string, db: string }) {\r\n        switch (selected) {\r\n\r\n            case \"Stock\": return <Stock />\r\n            case \"Reorder\": return <Reorder />\r\n            case \"Non Scan\": return <NonScan />\r\n            case \"Stock Adjust\": return <StockAdjust />\r\n            default: return <Stock />\r\n        }\r\n    }\r\n\r\n    return render()\r\n}\r\n\r\n","import {  ReportProps} from './logic';\r\nimport 'date-fns';\r\n\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nimport HeaderBar from './headerbar/headerbar';\r\nimport { columns, obj, removeColumns, sumAndGroup } from '../../../../lib/datafns';\r\nimport Table from '../../../../lib/table/table';\r\nimport useDate from '../../../../lib/usedate/usedate';\r\nimport useData from '../../../../lib/usedata';\r\n\r\n\r\nexport function VAT(props: ReportProps) {\r\n\r\n    const {\r\n        startDate,\r\n        endDate,\r\n        Dates,\r\n        ...date\r\n    } = useDate()\r\n\r\n    const { data } = useData(`/api/VAT/${props.db}/${startDate}/${endDate}`)\r\n\r\n    const tableData = columns(data, 'VatRate', 'Receipt_No', 'Total_Sales', 'Quantity', 'Total_VAT', 'Nett')\r\n    const totalVat: obj[] = sumAndGroup(removeColumns(tableData, 'Receipt_No'), 'VatRate')\r\n    const receipts: obj[] = sumAndGroup(removeColumns(tableData, 'VatRate'), 'Receipt_No')\r\n\r\n    return (\r\n        <div className='report'>\r\n            <Paper className='reportContainer'>\r\n                <HeaderBar>\r\n                    <Typography className='text' variant=\"h6\">{props.header}</Typography>\r\n                    <Dates />\r\n                </HeaderBar>\r\n                <div className='reportBody'>\r\n                    <H1>Total VAT</H1>\r\n                    <Table data={totalVat} />\r\n                    <H1>VAT Receipts</H1>\r\n                    <Table data={receipts} />\r\n                </div>\r\n            </Paper>\r\n        </div>\r\n    );\r\n\r\n}\r\n\r\nconst H1 = styled.h1`\r\n\r\ncolor: #004064;;\r\ntext-align:left;\r\nmargin-left: 1em;\r\nfont-size: 1em;\r\n\r\n`;\r\n\r\n\r\n","import { ReportProps } from './logic';\r\nimport { useState, useEffect } from 'react'\r\nimport Typography from '@material-ui/core/Typography'\r\nimport useData from '../../../../lib/usedata';\r\nimport useDate from '../../../../lib/usedate/usedate';\r\nimport React from 'react';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport HeaderBar from './headerbar/headerbar'\r\nimport SimpleSelect from '../../../../lib/useselect/useselect'\r\nimport Table from '../../../../lib/table/table'\r\n\r\nexport default function Wastage(props: ReportProps) {\r\n\r\n    const {\r\n        startDate,\r\n        endDate,\r\n        Dates\r\n    } = useDate();\r\n\r\n    const {\r\n        data\r\n    } = useData(`/api/wastage/${props.db}/${startDate}/${endDate}`);\r\n\r\n    return (\r\n        <div className='report'>\r\n            <Paper className='reportContainer'>\r\n                <HeaderBar ><Typography className='text' variant=\"h6\">{props.header}</Typography><Dates /></HeaderBar>\r\n                <div className='reportBody'>\r\n                    <Table data={data} />\r\n                </div>\r\n            </Paper>\r\n        </div>\r\n    );\r\n}","\nimport React, { useState } from 'react';\nimport useNavBar from './navbar/navbar'\nimport { RouteComponentProps } from \"react-router-dom\"\nimport CashierHistory from './components/cashier_history'\nimport VoidSales from './components/cashier_history';\nimport CustomerCredit from './components/customer_credit';\nimport ExpiryDates from './components/expiry_dates';\nimport PriceOverride from './components/price_override';\nimport ProductExchange from './components/product_exchange';\nimport Refund from './components/refund';\nimport ReturnToSupplier from './components/return_to_supplier';\nimport { SalesBreakdown } from './components/salesbreakdown/sales_breakdown';\nimport StaffHours from './components/staff_hours';\nimport { StockReport } from './components/stockreport/stockreport';\nimport { VAT } from './components/vat_report';\nimport VoucherSales from './components/voucher_sales';\nimport Wastage from './components/wastage';\n// import Div from './style';\nimport './style.scss'\n\nexport default function Reports(props: RouteComponentProps) {\n    const { db, NavBar } = useNavBar()\n\n    return (\n        <div className = \"reportspage\">\n            <NavBar />\n            < div className=\"reports\">\n                <SalesBreakdown header={'Sales Breakdown'} db={db} />\n                <StockReport id=\"stock\" header={'Stock'} db={db} />\n                <CashierHistory header={'Cashier History'} db={db} />\n                <VAT header={'VAT'} db={db} />\n                <PriceOverride header={'Price Override Report'} db={db} />\n                <Wastage header={'Wastage'} db={db} />\n                <Refund header={'Refund Report'} db={db} />\n                <StaffHours header={'Staff Hours'} db={db} />\n                <VoidSales header={'Void Sales'} db={db} />\n                <ExpiryDates header={'Expiry Dates'} db={db} />\n                {/* <ReturnToSupplier header={'Return To Supplier'} db={db} />\n                <CustomerCredit header={'Customer Credit'} db={db} />\n                <ProductExchange header={'Product Exchange'} db={db} />\n                <VoucherSales header={'Voucher Sales'} db={db} /> */}\n            </div>\n        </div >\n    )\n}\n","import './App.scss';\r\nimport 'typeface-roboto';\r\nimport Container from \"@material-ui/core/Container\"\r\nimport useStyles from './style'\r\nimport React from 'react';\r\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\r\n\r\nimport Login from './components/pages/login/login';\r\nimport Reports from './components/pages/reports/reports';\r\n\r\nfunction App() {\r\n  const classes = useStyles()\r\n  document.body.style.zoom = \"1.0\"\r\n  return (\r\n    <div className={classes.app} >\r\n      <link rel=\"stylesheet\" href=\"https://fonts.googleapis.com/icon?family=Material+Icons\" />\r\n      <meta name=\"viewport\" content=\"width=600, initial-scale=1 maximum-scale=1\"/>\r\n      <Router>\r\n        <Route path=\"/\" exact={true} render={props => <Login {...props} />} />\r\n        <Route path=\"/reports\" exact={true} render={props => <Reports {...props} />} />\r\n      </Router>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n//","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}